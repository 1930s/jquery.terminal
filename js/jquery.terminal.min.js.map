{"version":3,"sources":["js/jquery.terminal.js"],"names":["ctx","sprintf","cache","hasOwnProperty","arguments","parse","format","call","parse_tree","argv","cursor","tree_length","length","node_type","arg","output","i","k","match","pad","pad_character","pad_length","get_type","push","test","toString","String","fromCharCode","parseInt","toExponential","parseFloat","toFixed","substring","toUpperCase","charAt","str_repeat","join","fmt","_fmt","arg_names","exec","field_list","replacement_field","field_match","vsprintf","_argv","slice","splice","apply","variable","Object","prototype","toLowerCase","input","multiplier","global","window","factory","undefined","root","define","amd","module","exports","jQuery","wcwidth","require","$","debug","str","console","log","DelayQueue","callbacks","Callbacks","resolved","this","resolve","fire","add","fn","omap","o","result","each","v","text_length","map","text","get","reduce","a","b","Clone","clone_object","object","tmp","isArray","clone_array","key","array","is_function","Array","Error","item","bind","clone","localStorage","hasLS","testKey","storage","setItem","removeItem","error","hasCookies","document","cookie","split","e","isLS","wls","n","c","wc","dt","Date","setTime","getTime","toGMTString","rls","rc","nn","ca","indexOf","dls","dc","extend","Storage","set","remove","everyTime","interval","label","times","belay","timer","oneTime","stopTime","guid","regex","powers","ms","cs","ds","s","das","hs","ks","timeParse","value","trim","num","mult","element","counter","isFunction","isNaN","constructor","Number","$timers","$timerID","handler","inProgress","setInterval","timers","ret","lab","clearInterval","_fn","navigator","userAgent","one","els","undef","nativeSplit","compliantExecNpcg","self","separator","limit","flags","ignoreCase","multiline","extended","sticky","lastLastIndex","separator2","lastIndex","lastLength","RegExp","source","index","replace","caret","pos","target","isContentEditable","contentEditable","getSelection","focus","range1","getRangeAt","range2","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","selectionStart","selection","createRange","body","createTextRange","moveToElementText","setEndPoint","range","duplicate","bookmark","getBookmark","moveToBookmark","moveStart","collapse","firstChild","setSelectionRange","select","is","resizer","callback","unbind","$this","iframe","resize_handler","data","has","removeData","ResizeObserver","observer","unobserve","find","contentWindow","off","first","observe","on","addClass","appendTo","a11y_hide","attr","role","aria-hidden","excepctions","alert_exception","message","exception_message","alert","stack","scrollbar_event","node","left","offset","outerWidth","clientX","fileName","Cycle","rotate","skip","defined","filter","append","front","restart","Boolean","forEach","Stack","init","size","pop","concat","top","History","name","memory","enabled","storage_key","JSON","stringify","new_data","reset","last","end","position","current","next","old","previous","clear","purge","enable","disable","toggle","cmd_index","cmd","defaults","mask","caseSensitiveSearch","historySize","prompt","history","onPositionChange","noop","onCommandChange","clickTimeout","holdTimeout","holdRepeatTimeout","tabs","options","settings","maybe_data","id","clip","autocapitalize","spellcheck","tabindex","val","width","num_chars","prompt_last_line","prompt_len","prompt_node","reverse_search","rev_search_str","reverse_search_position","backup_prompt","command","last_command","kill_text","formatted_position","animation","restart_animation","paste_count","get_char_pos","closest","parent","prevAll","prevUntil","nextUntil","key_mapping","SPACEBAR","UP","DOWN","LEFT","RIGHT","DEL","MULTIPLY","DIVIDE","SUBTRACT","ADD","get_key","combo","ctrlKey","metaKey","shiftKey","altKey","keymap","default_keymap","ALT+D","delete_word","HOLD+DELETE","HOLD+SHIFT+DELETE","ENTER","historyFilter","prev_command","no_keydown","commands","draw_prompt","SHIFT+ENTER","insert","BACKSPACE","backspace_key","SHIFT+BACKSPACE","TAB","CTRL+D","DELETE","ARROWUP","prev_history","CTRL+P","ARROWDOWN","next_history","CTRL+N","ARROWLEFT","HOLD+ARROWLEFT","CTRL+B","CTRL+ARROWLEFT","len","CTRL+R","reverse_history_search","draw_reverse_prompt","redraw","CTRL+G","ARROWRIGHT","right","HOLD+ARROWRIGHT","CTRL+F","CTRL+ARROWRIGHT","re","F12","return_true","END","CTRL+E","HOME","home","CTRL+A","SHIFT+INSERT","paste_event","CTRL+SHIFT+T","CTRL+W","delete_word_backward","HOLD+BACKSPACE","HOLD+SHIFT+BACKSPACE","CTRL+H","CTRL+X","CTRL+C","CTRL+T","CTRL+Y","CTRL+V","META+V","CTRL+K","text_to_clipboard","CTRL+U","CTRL+TAB","META+`","META+R","META+L","clipboard","m","isenabled","trigger","paste","first_up_history","mobile_focus","is_mobile","fix_textarea","position_only","animation_supported","is_android","removeClass","new_cursor","insertBefore","animating","blink","toggleClass","clear_reverse_state","history_data","save_string","j","terminal","escape_regex","change_num_chars","$prompt","html","W","w","getBoundingClientRect","Math","floor","get_splitted_command_line","string","split_equal","skip_empty","line","strip","escape_brackets","first_len","strlen","splitted","formatting","skip_formatted_position","escape_formatting","unixFormattingEscapeBrackets","formatted","apply_formatters","normalize","crlf","max","before","encoded","encode","wrap","char_width","is_formatting","start","prev","after","cursor_line","draw_cursor_line","before_str","c_before","div","lines_after","lines","last_ins","insertAfter","lines_before","original_string","from_last","last_len","new_pos","line_index","current_len","msg","strings","redrawError","find_position","cmp","search_pos","opts","guess","codepoint_len","binary_search","chars","split_characters","encoded_last_line","last_line","fire_change_command","option","delete","stay","removed","silent","new_keymap","destroy","doc","keypress_event","keydown_event","input_event","user_prompt","relative","refresh","display_position","command_len","new_formatted_pos","visible","show","resize","new_mask","style","getComputedStyle","animationName","getPropertyValue","className","prevent_keypress","dead_key","single_key","no_keypress","no_key","backspace","process","hold","hold_pause","skip_insert","is_backspace","which","is_single","clear_reverse_search_key","fake","exception","keydown","clear_hold","documentElement","keypress","is_key_native","normalized","inArray","keyCode","event","type","chr","Event","keycode","charCodeAt","abs","was_down","count","$target","down","button","originalEvent","get_selected_text","KeyboardEvent","setTimeout","combine_chr_re","astral_symbols_re","emoji_re","mobile_re","tablet_re","format_split_re","format_parts_re","format_re","format_exist_re","format_full_re","color_hex_re","url_re","url_nf_re","email_re","command_re","extended_command_re","format_begin_re","format_start_re","format_end_re","format_exec_re","float_re","re_re","string_re","unclosed_strings_re","domPrefixes","elm","createElement","is_ch_unit_supported","agent","is_css_variables_supported","CSS","supports","is_safari","proto","getOwnPropertyDescriptor","check","substr","vendor","opera","bare_text","safe","get_next_character","match_emoji","match_combo","normalize_position","acc","char_width_prop","extra_css","bare","wide_characters","specs","arr","spec","sum","compare_fn","mid","container","$div","select_all","execCommand","get_textarea_selection","textarea","selectionEnd","clear_textarea_selection","common_string","matchCase","string_case","candidate","candidateLower","currentLower","trigger_terminal_change","terminals","term","onTerminalChange","setBaseAndExtent","setStart","childNodes","removeAllRanges","addRange","process_command","shift","args","quotes","rest","args_quotes","version","date","color_names","valid_color","color","unclosed_strings","special","have_formatting","format_split","tracking_replace","rex","replacement","correct_index","next_len","new_string","rep_string","new_position","last_index","c0","iterate_formatting","is_space","entity_re","match_entity","is_open_formatting","is_escape_bracket","is_text","not_formatting","opening","in_text","space","prev_space","braket","start_index","end_index","start_formatting","end_formatting","prev_index","_","semicolons","keep_words","prev_format","first_index","line_length","last_char","last_iteraction","can_break","stripped","text_len","new_index","closed_formatting","matched","amp","sp","nested_formatting","test_lengths","formatter","__no_warn__","warn","formatters","apply_function_formatter","__meta__","found_position","partials","this_len","length_before","loop","position_partial","partial","Exception","safe_text","slashes","linksNoReferrer","linksNoFollow","anyLinks","background","_class","data_text","style_str","text_decoration","extra","rel","unshift","unescape_brackets","columns","cols","no_formatting","lengths","column_limit","whole","bracket","active","last_id","parse_argument","strict","parse_string","quote","parse_arguments","split_arguments","parse_command","split_command","parse_options","boolean","token","single","extended_command","invokeMethods","change_hash","obj","eval","done","Symbol","replacer","search","new_formatter","Terminal_Exception","css","hidden","warnings","ids","jrpc","url","method","params","success","deferred","Deferred","isPlainObject","validJSONRPC","response","isNumeric","request","jsonrpc","ajax","beforeSend","jxhr","status","jqXHR","content_type","getResponseHeader","json","reject","contentType","dataType","async","promise","get_char_size","temp","rect","height","get_num_chars","char_size","get_num_rows","all","same","same_case","version_set","copyright","version_string","reg","name_ver","signatures","exit","maskChar","checkArity","raw","exceptionHandler","pauseEvents","softPause","cancelableAjax","processArguments","processRPCResponse","completionEscape","convertLinks","scrollObject","historyState","importHistory","echoCommand","scrollOnEcho","login","outputLimit","onAjaxError","pasteImage","scrollBottomOffset","wordAutocomplete","caseSensitiveAutocomplete","describe","onRPCError","doubleTab","completion","onInit","onClear","onBlur","onFocus","onExit","onPush","onPop","onAfterRedraw","onEchoCommand","onFlush","comletionParameters","wrongPasswordTryAgain","wrongPassword","ajaxAbortError","wrongArity","commandNotFound","oneRPCWithIgnore","oneInterpreterFunction","loginFunctionMissing","noTokenError","serverResponse","wrongGreetings","notWhileLogin","loginIsNotAFunction","canExitError","invalidCompletion","invalidSelector","invalidTerminalId","password","recursiveCall","notAString","invalidStrings","defunctTerminal","requests","save_state","hash_commands","fire_hash_change","first_instance","init_interpreter","StorageHelper","get_processed_command","display_object","echo","print_line","url_spec","pause","file","code","resume","display_json_rpc_error","at","make_basic_json_rpc","auth","interpreter","display_exception","ajax_error","make_object_interpreter","arity","fallback","user_command","keys","onCommandNotFound","xhr","responseText","make_json_rpc_object","jrpc_success","jrpc_request","jrpc_response","procs","field","interpreter_object","proc","args_len","help","names","found","make_interpreter","user_intrp","finalize","rpc_count","fn_interpreter","recur","interpreters","new_obj","ignoreSystemDescribe","make_json_rpc_login","user","passwd","validate","output_buffer","NEW_LINE","buffer_line","format_options","words","keepWords","process_line","line_settings","is_fn","parseObject","parts","prev_cmd","update","scroll","command_line","detached_output","empty","detach","lines_to_show","rows","flush","limit_lines","$lines","for_remove","parents","$self","show_greetings","greetings","signature","echo_command","get_command","then","have_scrollbar","innerWidth","clientWidth","fill","restore_state","command_idx","import_view","export_view","maybe_update_hash","location","hash","first_command","resume_callbacks","init_state","execHash","after_exec","saved_change_hash","onAfterCommand","invoke","when","paused","onBeforeCommand","ghost","level","logout","in_login","get_token","set_token","global_logout","onBeforeLogout","clear_loging_storage","onAfterLogout","global_login_fn","initialize","prefix_name","maybe_append_name","interpreter_name","prepare_top_interpreter","login_name","fun","init_queue","onStart","hashchange","decodeURIComponent","was_paused","onPause","user_key_down","original","get_position","set_command","CTRL+L","orignal","caseSensitive","complete","word","escape","before_cursor","scroll_to_bottom","PAGEDOWN","PAGEUP","key_down","tab_count","r","readyState","abort","key_press","ready","queue","selector","scroll_object","terminal_id","num_rows","logins","command_queue","when_ready","cmd_ready","old_width","old_height","delayed_commands","defunct","frozen","autologin","old_enabled","visibility_observer","mutation_observer","scrollTop","user_export","onExport","get_prompt","view","onImport","set_prompt","ignore_hash","state","d","infinite","login_callback","set_mask","pass","cmd_strings","double_quotes","single_quote","prev_string","sensitive","slash","matched_strings","pre","post","to_insert","set_position","reverse","common","set_interpreter","overwrite_interpreter","onResume","numChars","numRows","history_state","run","setImmediate","clear_history_state","x","animate","freeze","lenghts","bottom","is_bottom","get_output","new_num_chars","new_num_rows","onResize","setProperty","wrapper","replaceWith","remove_line","locals","lineNumber","trace","amount","round","prop","local","local_name","intrp","read","cancel","defer","infiniteLogin","push_settings","object_or_name","invoke_key","shortcut","ctrl","alt","meta","reversed_keycodes","prefix","blur_terminal","focus_terminal","disconnect","font_resizer","scrollHeight","scroll_height","scroll_top","innerHeight","outerHeight","keycodes","3","6","8","9","12","13","16","17","18","19","20","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","48","49","50","51","52","53","54","55","56","57","91","93","144","145","181","182","183","186","187","188","189","190","191","192","219","220","221","222","224","225","246","247","248","249","250","251","letter","onBeforeLogin","base_interpreter","is_type","clipboardData","items","blob","getAsFile","URL","webkitURL","createObjectURL","getAsString","getData","itrp","mousewheel","elementFromPoint","clientY","$win","addEventListener","click","mousedown","mouseup","timeout","dblclick","pageX","pageY","href","preventDefault","calculate_char_size","create_resizers","observe_visibility","was_enabled","IntersectionObserver","in_dom","MutationObsrv","MutationObserver","WebKitMutationObserver","childList","exec_spec","delta","stopPropagation","onmousewheel","wheelDelta","deltaY","detail"],"mappings":"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","sourcesContent":["/**@license\n *       __ _____                     ________                              __\n *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /\n *  __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /\n * /  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__\n * \\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/\n *           \\/              /____/                              version DEV\n *\n * This file is part of jQuery Terminal. http://terminal.jcubic.pl\n *\n * Copyright (c) 2010-2018 Jakub Jankiewicz <http://jcubic.pl/me>\n * Released under the MIT license\n *\n * Contains:\n *\n * Storage plugin Distributed under the MIT License\n * modified to work from Data URIs that block storage and cookies in Chrome\n * Copyright (c) 2010 Dave Schindler\n *\n * jQuery Timers licenced with the WTFPL\n * <http://jquery.offput.ca/timers/>\n *\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n *\n * jQuery Caret\n * Copyright (c) 2009, Gideon Sireling\n * 3 clause BSD License\n *\n * sprintf.js\n * Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro>\n * licensed under 3 clause BSD license\n *\n * emoji regex v7.0.1 by Mathias Bynens\n * MIT license\n *\n * Date: Sat, 08 Sep 2018 14:57:04 +0000\n */\n\n/* TODO:\n *\n * Debug interpreters names in LocalStorage\n *\n * TEST: login + promises/exec\n *       json-rpc/object + promises\n *\n * NOTE: json-rpc don't need promises and delegate resume/pause because only\n *       exec can call it and exec call interpreter that work with resume/pause\n */\n/* global location, jQuery, setTimeout, window, global, localStorage, sprintf,\n         setImmediate, IntersectionObserver, MutationObserver, ResizeObserver,\n         module, require, define */\n/* eslint-disable */\n/* istanbul ignore next */\n(function(ctx) {\n    var sprintf = function() {\n        if (!sprintf.cache.hasOwnProperty(arguments[0])) {\n            sprintf.cache[arguments[0]] = sprintf.parse(arguments[0]);\n        }\n        return sprintf.format.call(null, sprintf.cache[arguments[0]], arguments);\n    };\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i]);\n            if (node_type === 'string') {\n                output.push(parse_tree[i]);\n            }\n            else if (node_type === 'array') {\n                match = parse_tree[i]; // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor];\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]];\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (/[^s]/.test(match[8]) && (get_type(arg) !== 'number')) {\n                    throw(sprintf('[sprintf] expecting number but found %s', get_type(arg)));\n                }\n                switch (match[8]) {\n                    case 'b': arg = arg.toString(2); break;\n                    case 'c': arg = String.fromCharCode(arg); break;\n                    case 'd': arg = parseInt(arg, 10); break;\n                    case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n                    case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n                    case 'o': arg = arg.toString(8); break;\n                    case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;\n                    case 'u': arg = arg >>> 0; break;\n                    case 'x': arg = arg.toString(16); break;\n                    case 'X': arg = arg.toString(16).toUpperCase(); break;\n                }\n                arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? ' +' + arg : arg);\n                pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' ';\n                pad_length = match[6] - String(arg).length;\n                pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n                output.push(match[5] ? arg + pad : pad + arg);\n            }\n        }\n        return output.join('');\n    };\n\n    sprintf.cache = {};\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n        while (_fmt) {\n            if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n                parse_tree.push(match[0]);\n            }\n            else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n                parse_tree.push('%');\n            }\n            else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    var field_list = [], replacement_field = match[2], field_match = [];\n                    if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1]);\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else {\n                                throw('[sprintf] huh?');\n                            }\n                        }\n                    }\n                    else {\n                        throw('[sprintf] huh?');\n                    }\n                    match[2] = field_list;\n                }\n                else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw('[sprintf] mixing positional and named placeholders is not (yet) supported');\n                }\n                parse_tree.push(match);\n            }\n            else {\n                throw('[sprintf] huh?');\n            }\n            _fmt = _fmt.substring(match[0].length);\n        }\n        return parse_tree;\n    };\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = argv.slice(0);\n        _argv.splice(0, 0, fmt);\n        return sprintf.apply(null, _argv);\n    };\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    function str_repeat(input, multiplier) {\n        for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}\n        return output.join('');\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    ctx.sprintf = sprintf;\n    ctx.vsprintf = vsprintf;\n})(typeof global !== \"undefined\" ? global : window);\n/* eslint-enable */\n// UMD taken from https://github.com/umdjs/umd\n(function(factory, undefined) {\n    var root = typeof window !== 'undefined' ? window : global;\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        // istanbul ignore next\n        define(['jquery', 'wcwidth'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = function(root, jQuery, wcwidth) {\n            if (jQuery === undefined) {\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if (window !== undefined) {\n                    jQuery = require('jquery');\n                } else {\n                    jQuery = require('jquery')(root);\n                }\n            }\n            if (wcwidth === undefined) {\n                wcwidth = require('wcwidth');\n            }\n            factory(jQuery, wcwidth);\n            return jQuery;\n        };\n    } else {\n        // Browser\n        // istanbul ignore next\n        factory(root.jQuery, root.wcwidth);\n    }\n})(function($, wcwidth, undefined) {\n    'use strict';\n    // -----------------------------------------------------------------------\n    // :: debug functions\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    function debug(str) {\n        if (false) {\n            console.log(str);\n            //$.terminal.active().echo(str);\n        }\n    }\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Replacemenet for jQuery 2 deferred objects\n    // -----------------------------------------------------------------------\n    function DelayQueue() {\n        var callbacks = $.Callbacks();\n        var resolved = false;\n        this.resolve = function() {\n            callbacks.fire();\n            resolved = true;\n        };\n        this.add = function(fn) {\n            if (resolved) {\n                fn();\n            } else {\n                callbacks.add(fn);\n            }\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: map object to object\n    // -----------------------------------------------------------------------\n    $.omap = function(o, fn) {\n        var result = {};\n        $.each(o, function(k, v) {\n            result[k] = fn.call(o, k, v);\n        });\n        return result;\n    };\n    $.fn.text_length = function() {\n        return this.map(function() {\n            return $(this).text().length;\n        }).get().reduce(function(a, b) {\n            return a + b;\n        }, 0);\n    };\n    // -----------------------------------------------------------------------\n    // :: Deep clone of objects and arrays\n    // -----------------------------------------------------------------------\n    var Clone = {\n        clone_object: function(object) {\n            var tmp = {};\n            if (typeof object === 'object') {\n                if ($.isArray(object)) {\n                    return this.clone_array(object);\n                } else if (object === null) {\n                    return object;\n                } else {\n                    for (var key in object) {\n                        if ($.isArray(object[key])) {\n                            tmp[key] = this.clone_array(object[key]);\n                        } else if (typeof object[key] === 'object') {\n                            tmp[key] = this.clone_object(object[key]);\n                        } else {\n                            tmp[key] = object[key];\n                        }\n                    }\n                }\n            }\n            return tmp;\n        },\n        clone_array: function(array) {\n            if (!is_function(Array.prototype.map)) {\n                throw new Error(\"Your browser don't support ES5 array map \" +\n                                'use es5-shim');\n            }\n            return array.slice(0).map(function(item) {\n                if (typeof item === 'object') {\n                    return this.clone_object(item);\n                } else {\n                    return item;\n                }\n            }.bind(this));\n        }\n    };\n    var clone = function(object) {\n        return Clone.clone_object(object);\n    };\n\n    /* eslint-disable */\n    // -----------------------------------------------------------------------\n    // :: Storage plugin\n    // -----------------------------------------------------------------------\n    var localStorage;\n    /* istanbul ignore next */\n    (function() {\n        var hasLS = function() {\n            try {\n                var testKey = 'test', storage = window.localStorage;\n                storage.setItem(testKey, '1');\n                storage.removeItem(testKey);\n                return true;\n            } catch (error) {\n                return false;\n            }\n        };\n        var hasCookies = function() {\n            try {\n                document.cookie.split(';');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        };\n        // Private data\n        var isLS = hasLS();\n        // Private functions\n        function wls(n, v) {\n            var c;\n            if (typeof n === 'string' && typeof v === 'string') {\n                localStorage[n] = v;\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        localStorage[c] = n[c];\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function wc(n, v) {\n            var dt, e, c;\n            dt = new Date();\n            dt.setTime(dt.getTime() + 31536000000);\n            e = '; expires=' + dt.toGMTString();\n            if (typeof n === 'string' && typeof v === 'string') {\n                document.cookie = n + '=' + v + e + '; path=/';\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        document.cookie = c + '=' + n[c] + e + '; path=/';\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function rls(n) {\n            return localStorage[n];\n        }\n        function rc(n) {\n            var nn, ca, i, c;\n            nn = n + '=';\n            ca = document.cookie.split(';');\n            for (i = 0; i < ca.length; i++) {\n                c = ca[i];\n                while (c.charAt(0) === ' ') {\n                    c = c.substring(1, c.length);\n                }\n                if (c.indexOf(nn) === 0) {\n                    return c.substring(nn.length, c.length);\n                }\n            }\n            return null;\n        }\n        function dls(n) {\n            return delete localStorage[n];\n        }\n        function dc(n) {\n            return wc(n, '', -1);\n        }\n        /**\n         * Public API\n         * $.Storage.set(\"name\", \"value\")\n         * $.Storage.set({\"name1\":\"value1\", \"name2\":\"value2\", etc})\n         * $.Storage.get(\"name\")\n         * $.Storage.remove(\"name\")\n         */\n        if (!hasCookies() && !isLS) {\n            localStorage = {};\n            $.extend({\n                Storage: {\n                    set: wls,\n                    get: rls,\n                    remove: dls\n                }\n            });\n        } else {\n            if (isLS) {\n                localStorage = window.localStorage;\n            }\n            $.extend({\n                Storage: {\n                    set: isLS ? wls : wc,\n                    get: isLS ? rls : rc,\n                    remove: isLS ? dls : dc\n                }\n            });\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Timers\n    // -----------------------------------------------------------------------\n    var jQuery = $;\n    /* istanbul ignore next */\n    (function($) {\n        jQuery.fn.extend({\n            everyTime: function(interval, label, fn, times, belay) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, times, belay);\n                });\n            },\n            oneTime: function(interval, label, fn) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, 1);\n                });\n            },\n            stopTime: function(label, fn) {\n                return this.each(function() {\n                    jQuery.timer.remove(this, label, fn);\n                });\n            }\n        });\n\n        jQuery.extend({\n            timer: {\n                guid: 1,\n                global: {},\n                regex: /^([0-9]+)\\s*(.*s)?$/,\n                powers: {\n                    // Yeah this is major overkill...\n                    'ms': 1,\n                    'cs': 10,\n                    'ds': 100,\n                    's': 1000,\n                    'das': 10000,\n                    'hs': 100000,\n                    'ks': 1000000\n                },\n                timeParse: function(value) {\n                    if (value === undefined || value === null) {\n                        return null;\n                    }\n                    var result = this.regex.exec(jQuery.trim(value.toString()));\n                    if (result[2]) {\n                        var num = parseInt(result[1], 10);\n                        var mult = this.powers[result[2]] || 1;\n                        return num * mult;\n                    } else {\n                        return value;\n                    }\n                },\n                add: function(element, interval, label, fn, times, belay) {\n                    var counter = 0;\n\n                    if (jQuery.isFunction(label)) {\n                        if (!times) {\n                            times = fn;\n                        }\n                        fn = label;\n                        label = interval;\n                    }\n\n                    interval = jQuery.timer.timeParse(interval);\n\n                    if (typeof interval !== 'number' ||\n                        isNaN(interval) ||\n                        interval <= 0) {\n                        return;\n                    }\n                    if (times && times.constructor !== Number) {\n                        belay = !!times;\n                        times = 0;\n                    }\n\n                    times = times || 0;\n                    belay = belay || false;\n\n                    if (!element.$timers) {\n                        element.$timers = {};\n                    }\n                    if (!element.$timers[label]) {\n                        element.$timers[label] = {};\n                    }\n                    fn.$timerID = fn.$timerID || this.guid++;\n\n                    var handler = function() {\n                        if (belay && handler.inProgress) {\n                            return;\n                        }\n                        handler.inProgress = true;\n                        if ((++counter > times && times !== 0) ||\n                            fn.call(element, counter) === false) {\n                            jQuery.timer.remove(element, label, fn);\n                        }\n                        handler.inProgress = false;\n                    };\n\n                    handler.$timerID = fn.$timerID;\n\n                    if (!element.$timers[label][fn.$timerID]) {\n                        element.$timers[label][fn.$timerID] = window.setInterval(handler, interval);\n                    }\n\n                    if (!this.global[label]) {\n                        this.global[label] = [];\n                    }\n                    this.global[label].push(element);\n\n                },\n                remove: function(element, label, fn) {\n                    var timers = element.$timers, ret;\n\n                    if (timers) {\n\n                        if (!label) {\n                            for (var lab in timers) {\n                                if (timers.hasOwnProperty(lab)) {\n                                    this.remove(element, lab, fn);\n                                }\n                            }\n                        } else if (timers[label]) {\n                            if (fn) {\n                                if (fn.$timerID) {\n                                    window.clearInterval(timers[label][fn.$timerID]);\n                                    delete timers[label][fn.$timerID];\n                                }\n                            } else {\n                                for (var _fn in timers[label]) {\n                                    if (timers[label].hasOwnProperty(_fn)) {\n                                        window.clearInterval(timers[label][_fn]);\n                                        delete timers[label][_fn];\n                                    }\n                                }\n                            }\n\n                            for (ret in timers[label]) {\n                                if (timers[label].hasOwnProperty(ret)) {\n                                    break;\n                                }\n                            }\n                            if (!ret) {\n                                ret = null;\n                                delete timers[label];\n                            }\n                        }\n\n                        for (ret in timers) {\n                            if (timers.hasOwnProperty(ret)) {\n                                break;\n                            }\n                        }\n                        if (!ret) {\n                            element.$timers = null;\n                        }\n                    }\n                }\n            }\n        });\n        if (/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())) {\n            $(window).one('unload', function() {\n                var global = jQuery.timer.global;\n                for (var label in global) {\n                    if (global.hasOwnProperty(label)) {\n                        var els = global[label], i = els.length;\n                        while (--i) {\n                            jQuery.timer.remove(els[i], label);\n                        }\n                    }\n                }\n            });\n        }\n    })(jQuery);\n    // -----------------------------------------------------------------------\n    // :: CROSS BROWSER SPLIT\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    (function(undef) {\n\n        // prevent double include\n\n        if (!String.prototype.split.toString().match(/\\[native/)) {\n            return;\n        }\n\n        var nativeSplit = String.prototype.split,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undef, // NPCG: nonparticipating capturing group\n        self;\n\n        self = function(str, separator, limit) {\n            // If `separator` is not a regex, use `nativeSplit`\n            if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n                return nativeSplit.call(str, separator, limit);\n            }\n            var output = [],\n            flags = (separator.ignoreCase ? \"i\" : \"\") +\n                (separator.multiline  ? \"m\" : \"\") +\n                (separator.extended   ? \"x\" : \"\") + // Proposed for ES6\n                (separator.sticky     ? \"y\" : \"\"), // Firefox 3+\n                lastLastIndex = 0,\n            // Make `global` and avoid `lastIndex` issues by working with a copy\n            separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + \"g\");\n            str += \"\"; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            // ? Math.pow(2, 32) - 1 : ToUint32(limit)\n            limit = limit === undef ? -1 >>> 0 : limit >>> 0;\n            while (match = separator.exec(str)) {\n                    // `separator.lastIndex` is not reliable cross-browser\n                    lastIndex = match.index + match[0].length;\n                    if (lastIndex > lastLastIndex) {\n                        output.push(str.slice(lastLastIndex, match.index));\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                        // nonparticipating capturing groups\n                        if (!compliantExecNpcg && match.length > 1) {\n                            match[0].replace(separator2, function() {\n                                for (var i = 1; i < arguments.length - 2; i++) {\n                                    if (arguments[i] === undef) {\n                                        match[i] = undef;\n                                    }\n                                }\n                            });\n                        }\n                        if (match.length > 1 && match.index < str.length) {\n                            Array.prototype.push.apply(output, match.slice(1));\n                        }\n                        lastLength = match[0].length;\n                        lastLastIndex = lastIndex;\n                        if (output.length >= limit) {\n                            break;\n                        }\n                    }\n                    if (separator.lastIndex === match.index) {\n                        separator.lastIndex++; // Avoid an infinite loop\n                    }\n                }\n            if (lastLastIndex === str.length) {\n                if (lastLength || !separator.test(\"\")) {\n                    output.push(\"\");\n                }\n            } else {\n                output.push(str.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n\n        // For convenience\n        String.prototype.split = function(separator, limit) {\n            return self(this, separator, limit);\n        };\n\n        return self;\n\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Caret\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    $.fn.caret = function(pos) {\n        var target = this[0];\n        var isContentEditable = target.contentEditable === 'true';\n        //get\n        if (arguments.length === 0) {\n            //HTML5\n            if (window.getSelection) {\n                //contenteditable\n                if (isContentEditable) {\n                    target.focus();\n                    var range1 = window.getSelection().getRangeAt(0),\n                    range2 = range1.cloneRange();\n                    range2.selectNodeContents(target);\n                    range2.setEnd(range1.endContainer, range1.endOffset);\n                    return range2.toString().length;\n                }\n                //textarea\n                return target.selectionStart;\n            }\n            //IE<9\n            if (document.selection) {\n                target.focus();\n                //contenteditable\n                if (isContentEditable) {\n                    var range1 = document.selection.createRange(),\n                    range2 = document.body.createTextRange();\n                    range2.moveToElementText(target);\n                    range2.setEndPoint('EndToEnd', range1);\n                    return range2.text.length;\n                }\n                //textarea\n                var pos = 0,\n                range = target.createTextRange(),\n                range2 = document.selection.createRange().duplicate(),\n                bookmark = range2.getBookmark();\n                range.moveToBookmark(bookmark);\n                while (range.moveStart('character', -1) !== 0) pos++;\n                return pos;\n            }\n            //not supported\n            return 0;\n        }\n        //set\n        if (pos === -1)\n            pos = this[isContentEditable? 'text' : 'val']().length;\n        //HTML5\n        if (window.getSelection) {\n            //contenteditable\n            if (isContentEditable) {\n                target.focus();\n                window.getSelection().collapse(target.firstChild, pos);\n            }\n            //textarea\n            else\n                target.setSelectionRange(pos, pos);\n        }\n        //IE<9\n        else if (document.body.createTextRange) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(target);\n            range.moveStart('character', pos);\n            range.collapse(true);\n            range.select();\n        }\n        if (!isContentEditable && !this.is(':focus')) {\n            target.focus();\n        }\n        return pos;\n    };\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Cross-browser resize element plugin using sentinel iframe or\n    // :: resizeObserver\n    // -----------------------------------------------------------------------\n    $.fn.resizer = function(callback) {\n        var unbind = arguments[0] === \"unbind\";\n        if (!unbind && !is_function(callback)) {\n            throw new Error(\n                'Invalid argument, it need to a function or string \"unbind\".'\n            );\n        }\n        if (unbind) {\n            callback = is_function(arguments[1]) ? arguments[1] : null;\n        }\n        return this.each(function() {\n            var $this = $(this);\n            var iframe;\n            var callbacks;\n            function resize_handler() {\n                callbacks.fire();\n            }\n            if (unbind) {\n                callbacks = $this.data('callbacks');\n                if (callback && callbacks) {\n                    callbacks.remove(callback);\n                    if (!callbacks.has()) {\n                        callbacks = null;\n                    }\n                } else {\n                    callbacks = null;\n                }\n                if (!callbacks) {\n                    $this.removeData('callbacks');\n                    if (window.ResizeObserver) {\n                        var observer = $this.data('observer');\n                        if (observer) {\n                            observer.unobserve(this);\n                            $this.removeData('observer');\n                        }\n                    } else {\n                        iframe = $this.find('> iframe');\n                        if (iframe.length) {\n                            // just in case of memory leaks in IE\n                            $(iframe[0].contentWindow).off('resize').remove();\n                            iframe.remove();\n                        } else if ($this.is('body')) {\n                            $(window).off('resize.resizer');\n                        }\n                    }\n                }\n            } else if ($this.data('callbacks')) {\n                $(this).data('callbacks').add(callback);\n            } else {\n                callbacks = $.Callbacks();\n                callbacks.add(callback);\n                $this.data('callbacks', callbacks);\n                var resizer;\n                var first = true;\n                if (window.ResizeObserver) {\n                    resizer = new ResizeObserver(function() {\n                        if (!first) {\n                            resize_handler();\n                        }\n                        first = false;\n                    });\n                    resizer.observe(this);\n                    $this.data('observer', resizer);\n                } else if ($this.is('body')) {\n                    $(window).on('resize.resizer', resize_handler);\n                } else {\n                    iframe = $('<iframe/>').addClass('resizer').appendTo(this)[0];\n\n                    $(iframe.contentWindow).on('resize', resize_handler);\n                }\n            }\n        });\n    };\n    // -----------------------------------------------------------------------\n    // :: hide elements from screen readers\n    // -----------------------------------------------------------------------\n    function a11y_hide(element) {\n        element.attr({\n            role: 'presentation',\n            'aria-hidden': 'true'\n        });\n    }\n    // ---------------------------------------------------------------------\n    // :: alert only first exception of type\n    // ---------------------------------------------------------------------\n    var excepctions = [];\n    function alert_exception(label, e) {\n        var message = (label ? label + ': ' : '') + exception_message(e);\n        if (excepctions.indexOf(message) === -1) {\n            excepctions.push(message);\n            alert(message + (e.stack ? '\\n' + e.stack : ''));\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :; detect if mouse event happen on scrollbar\n    // ---------------------------------------------------------------------\n    function scrollbar_event(e, node) {\n        var left = node.offset().left;\n        return node.outerWidth() <= e.clientX - left;\n    }\n    // ---------------------------------------------------------------------\n    // :: Return exception message as string\n    // ---------------------------------------------------------------------\n    function exception_message(e) {\n        if (typeof e === 'string') {\n            return e;\n        } else if (typeof e.fileName === 'string') {\n            return e.fileName + ': ' + e.message;\n        } else {\n            return e.message;\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: CYCLE DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Cycle() {\n        var data = [].slice.call(arguments);\n        var pos = 0;\n        $.extend(this, {\n            get: function() {\n                return data;\n            },\n            index: function() {\n                return pos;\n            },\n            rotate: function(skip) {\n                if (!skip) {\n                    var defined = data.filter(function(item) {\n                        return typeof item !== 'undefined';\n                    });\n                    if (!defined.length) {\n                        return;\n                    }\n                }\n                if (!data.length) {\n                    return;\n                }\n                if (data.length === 1) {\n                    return data[0];\n                } else {\n                    if (pos === data.length - 1) {\n                        pos = 0;\n                    } else {\n                        ++pos;\n                    }\n                    if (typeof data[pos] !== 'undefined') {\n                        return data[pos];\n                    } else {\n                        return this.rotate(true);\n                    }\n                }\n            },\n            length: function() {\n                return data.length;\n            },\n            remove: function(index) {\n                delete data[index];\n            },\n            set: function(item) {\n                for (var i = data.length; i--;) {\n                    if (data[i] === item) {\n                        pos = i;\n                        return;\n                    }\n                }\n                this.append(item);\n                pos = data.length - 1;\n            },\n            front: function() {\n                if (data.length) {\n                    var index = pos;\n                    var restart = false;\n                    while (!data[index]) {\n                        index++;\n                        if (index > data.length) {\n                            if (restart) {\n                                break;\n                            }\n                            index = 0;\n                            restart = true;\n                        }\n                    }\n                    return data[index];\n                }\n            },\n            map: function(fn) {\n                return data.map(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        return fn(item, i);\n                    }\n                    return null;\n                }).filter(Boolean);\n            },\n            forEach: function(fn) {\n                return data.forEach(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        fn(item, i);\n                    }\n                });\n            },\n            append: function(item) {\n                data.push(item);\n            }\n        });\n    }\n    // -----------------------------------------------------------------------\n    // :: STACK DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Stack(init) {\n        var data = init instanceof Array ? init : init ? [init] : [];\n        $.extend(this, {\n            data: function() {\n                return data;\n            },\n            map: function(fn) {\n                return $.map(data, fn);\n            },\n            size: function() {\n                return data.length;\n            },\n            pop: function() {\n                if (data.length === 0) {\n                    return null;\n                } else {\n                    var value = data[data.length - 1];\n                    data = data.slice(0, data.length - 1);\n                    return value;\n                }\n            },\n            push: function(value) {\n                data = data.concat([value]);\n                return value;\n            },\n            top: function() {\n                return data.length > 0 ? data[data.length - 1] : null;\n            },\n            clone: function() {\n                return new Stack(data.slice(0));\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: HISTORY CLASS\n    // -------------------------------------------------------------------------\n    function History(name, size, memory) {\n        var enabled = true;\n        var storage_key = '';\n        if (typeof name === 'string' && name !== '') {\n            storage_key = name + '_';\n        }\n        storage_key += 'commands';\n        var data;\n        if (memory) {\n            data = [];\n        } else {\n            data = $.Storage.get(storage_key);\n            data = data ? JSON.parse(data) : [];\n        }\n        var pos = data.length - 1;\n        $.extend(this, {\n            append: function(item) {\n                if (enabled) {\n                    if (data[data.length - 1] !== item) {\n                        data.push(item);\n                        if (size && data.length > size) {\n                            data = data.slice(-size);\n                        }\n                        pos = data.length - 1;\n                        if (!memory) {\n                            $.Storage.set(storage_key, JSON.stringify(data));\n                        }\n                    }\n                }\n            },\n            set: function(new_data) {\n                if (new_data instanceof Array) {\n                    data = new_data;\n                    if (!memory) {\n                        $.Storage.set(storage_key, JSON.stringify(data));\n                    }\n                }\n            },\n            data: function() {\n                return data;\n            },\n            reset: function() {\n                pos = data.length - 1;\n            },\n            last: function() {\n                return data[data.length - 1];\n            },\n            end: function() {\n                return pos === data.length - 1;\n            },\n            position: function() {\n                return pos;\n            },\n            current: function() {\n                return data[pos];\n            },\n            next: function() {\n                var old = pos;\n                if (pos < data.length - 1) {\n                    ++pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            previous: function() {\n                var old = pos;\n                if (pos > 0) {\n                    --pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            clear: function() {\n                data = [];\n                this.purge();\n            },\n            enabled: function() {\n                return enabled;\n            },\n            enable: function() {\n                enabled = true;\n            },\n            purge: function() {\n                if (!memory) {\n                    $.Storage.remove(storage_key);\n                }\n            },\n            disable: function() {\n                enabled = false;\n            },\n            toggle: function(value) {\n                if (typeof value === 'undefined') {\n                    enabled = !enabled;\n                } else {\n                    enabled = value;\n                }\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: COMMAND LINE PLUGIN\n    // -------------------------------------------------------------------------\n    var cmd_index = 0;\n    $.cmd = {\n        defaults: {\n            mask: false,\n            caseSensitiveSearch: true,\n            historySize: 60,\n            prompt: '> ',\n            enabled: true,\n            history: true,\n            onPositionChange: $.noop,\n            onCommandChange: $.noop,\n            clickTimeout: 200,\n            holdTimeout: 400,\n            holdRepeatTimeout: 200,\n            tabs: 4\n        }\n    };\n    $.fn.cmd = function(options) {\n        var settings = $.extend({}, $.cmd.defaults, options);\n        var self = this;\n        var maybe_data = self.data('cmd');\n        if (maybe_data) {\n            return maybe_data;\n        }\n        var id = cmd_index++;\n        self.addClass('cmd');\n        self.append('<span class=\"prompt\"></span>');\n        self.append('<div class=\"cursor-line\">' +\n                    '<span></span>' +\n                    '<span class=\"cursor\">&nbsp;</span>' +\n                    '<span></span>' +\n                    '</div>');\n        // a11y: don't read command it's in textarea that's in focus\n        a11y_hide(self.find('.cursor-line'));\n        // on mobile the only way to hide textarea on desktop it's needed because\n        // textarea show up after focus\n        //self.append('<span class=\"mask\"></mask>');\n        var clip = $('<textarea>').attr({\n            autocapitalize: 'off',\n            spellcheck: 'false',\n            tabindex: 1\n        }).addClass('clipboard').appendTo(self).val(' ');\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        var num_chars; // calculated by draw_prompt\n        var prompt_last_line;\n        var prompt_len;\n        var prompt_node = self.find('.prompt');\n        var reverse_search = false;\n        var rev_search_str = '';\n        var reverse_search_position = null;\n        var backup_prompt;\n        var command = '';\n        var last_command;\n        // text from selection using CTRL+SHIFT+C (as in Xterm)\n        var kill_text = ''; // text from command that kill part of the command\n        var position = 0;\n        var prompt;\n        var enabled;\n        var formatted_position = 0;\n        var name, history;\n        var cursor = self.find('.cursor');\n        var animation;\n        var restart_animation;\n        var paste_count = 0;\n        function get_char_pos(e) {\n            var node = $(e.target);\n            if (node.is('span')) {\n                node = node.closest('[data-text]');\n                return node.index() +\n                    node.parent('span').prevAll().find('[data-text]').length +\n                    node.closest('[role=\"presentation\"]')\n                        .prevUntil('.prompt').find('[data-text]').length;\n            } else if (node.is('div[role=\"presentation\"]')) {\n                var last = !node.nextUntil('textarea').length;\n                return node.find('span[data-text]').length +\n                    node.prevUntil('.prompt').find('span[data-text]').length -\n                    (last ? 0 : 1);\n            }\n        }\n        // IE mapping\n        var key_mapping = {\n            'SPACEBAR': ' ',\n            'UP': 'ARROWUP',\n            'DOWN': 'ARROWDOWN',\n            'LEFT': 'ARROWLEFT',\n            'RIGHT': 'ARROWRIGHT',\n            'DEL': 'DELETE',\n            'MULTIPLY': '*',\n            'DIVIDE': '/',\n            'SUBTRACT': '-',\n            'ADD': '+'\n        };\n        function get_key(e) {\n            if (e.key) {\n                var key = e.key.toUpperCase();\n                if (key_mapping[key]) {\n                    key = key_mapping[key];\n                }\n                if (key === 'CONTROL') {\n                    return 'CTRL';\n                } else {\n                    var combo = [];\n                    if (e.ctrlKey) {\n                        combo.push('CTRL');\n                    }\n                    if (e.metaKey && key !== 'META') {\n                        combo.push('META');\n                    }\n                    if (e.shiftKey && key !== 'SHIFT') {\n                        combo.push('SHIFT');\n                    }\n                    if (e.altKey && key !== 'ALT') {\n                        combo.push('ALT');\n                    }\n                    if (combo.length && key === ' ') {\n                        key = 'SPACEBAR';\n                    }\n                    if (e.key) {\n                        combo.push(key);\n                    }\n                    return combo.join('+');\n                }\n            }\n        }\n        var keymap;\n        var default_keymap = {\n            'ALT+D': delete_word(true),\n            'HOLD+DELETE': delete_word(false),\n            'HOLD+SHIFT+DELETE': delete_word(false),\n            'ENTER': function() {\n                if (history && command && !settings.mask &&\n                    (is_function(settings.historyFilter) &&\n                     settings.historyFilter(command)) ||\n                    (settings.historyFilter instanceof RegExp &&\n                     command.match(settings.historyFilter)) ||\n                    !settings.historyFilter) {\n                    history.append(command);\n                }\n                var tmp = command;\n                history.reset();\n\n                // for next input event on firefox/android with google keyboard\n                prev_command = '';\n                no_keydown = true;\n\n                self.set('');\n                if (settings.commands) {\n                    settings.commands(tmp);\n                }\n                if (is_function(prompt)) {\n                    draw_prompt();\n                }\n                clip.val('');\n                return false;\n            },\n            'SHIFT+ENTER': function() {\n                self.insert('\\n');\n                return true;\n            },\n            'BACKSPACE': backspace_key,\n            'SHIFT+BACKSPACE': backspace_key,\n            'TAB': function() {\n                self.insert('\\t');\n            },\n            'CTRL+D': function() {\n                self['delete'](1);\n                return false;\n            },\n            'DELETE': function() {\n                self['delete'](1);\n                return true;\n            },\n            'ARROWUP': prev_history,\n            'CTRL+P': prev_history,\n            'ARROWDOWN': next_history,\n            'CTRL+N': next_history,\n            'ARROWLEFT': left,\n            'HOLD+ARROWLEFT': left,\n            'CTRL+B': left,\n            'CTRL+ARROWLEFT': function() {\n                // jump to one character after last space before prevoius word\n                var len = position - 1;\n                var pos = 0;\n                if (command[len] === ' ') {\n                    --len;\n                }\n                for (var i = len; i > 0; --i) {\n                    if (command[i] === ' ' && command[i + 1] !== ' ') {\n                        pos = i + 1;\n                        break;\n                    } else if (command[i] === '\\n' &&\n                               command[i + 1] !== '\\n') {\n                        pos = i;\n                        break;\n                    }\n                }\n                self.position(pos);\n            },\n            'CTRL+R': function() {\n                if (reverse_search) {\n                    reverse_history_search(true);\n                } else {\n                    backup_prompt = prompt;\n                    draw_reverse_prompt();\n                    last_command = command;\n                    self.set('');\n                    redraw();\n                    reverse_search = true;\n                }\n                return false;\n            },\n            'CTRL+G': function() {\n                if (reverse_search) {\n                    prompt = backup_prompt;\n                    draw_prompt();\n                    self.set(last_command);\n                    redraw();\n                    reverse_search = false;\n                    rev_search_str = '';\n                    return false;\n                }\n            },\n            'ARROWRIGHT': right,\n            'HOLD+ARROWRIGHT': right,\n            'CTRL+F': right,\n            'CTRL+ARROWRIGHT': function() {\n                // jump to beginning or end of the word\n                if (command[position] === ' ') {\n                    ++position;\n                }\n                var re = /\\S[\\n\\s]{2,}|[\\n\\s]+\\S?/;\n                var match = command.slice(position).match(re);\n                if (!match || match[0].match(/^\\s+$/)) {\n                    self.position(command.length);\n                } else if (match[0][0] !== ' ') {\n                    position += match.index + 1;\n                } else {\n                    position += match.index + match[0].length - 1;\n                    if (match[0][match[0].length - 1] !== ' ') {\n                        --position;\n                    }\n                }\n                redraw();\n            },\n            'F12': return_true, // Allow Firebug\n            'END': end,\n            'CTRL+E': end,\n            'HOME': home,\n            'CTRL+A': home,\n            'SHIFT+INSERT': paste_event,\n            'CTRL+SHIFT+T': return_true, // open closed tab\n            'CTRL+W': delete_word_backward(true),\n            'HOLD+BACKSPACE': delete_word_backward(false),\n            'HOLD+SHIFT+BACKSPACE': delete_word_backward(false),\n            'CTRL+H': function() {\n                if (command !== '' && position > 0) {\n                    self['delete'](-1);\n                }\n                return false;\n            },\n            'CTRL+X': return_true,\n            'CTRL+C': return_true,\n            'CTRL+T': return_true,\n            'CTRL+Y': function() {\n                if (kill_text !== '') {\n                    self.insert(kill_text);\n                }\n            },\n            'CTRL+V': paste_event,\n            'META+V': paste_event,\n            'CTRL+K': function() {\n                if (command.length - position) {\n                    kill_text = self['delete'](command.length - position);\n                    text_to_clipboard(self, kill_text);\n                }\n                return false;\n            },\n            'CTRL+U': function() {\n                if (command !== '' && position !== 0) {\n                    kill_text = self['delete'](-position);\n                    text_to_clipboard(self, kill_text);\n                }\n                return false;\n            },\n            'CTRL+TAB': function() {\n                return false;\n            },\n            'META+`': return_true, // CMD+` switch browser window on Mac\n            'META+R': return_true, // CMD+R page reload in Chrome Mac\n            'META+L': return_true // CLD+L jump into Ominbox on Chrome Mac\n        };\n        // -------------------------------------------------------------------------------\n        function delete_word(clipboard) {\n            return function delete_word() {\n                var re = / *[^ ]+ *(?= )|[^ ]+$/;\n                var substring = command.slice(position);\n                var m = substring.match(re);\n                if (m) {\n                    kill_text = m[0];\n                    if (clipboard) {\n                        text_to_clipboard(self, kill_text);\n                    }\n                }\n                self.set(\n                    command.slice(0, position) +\n                        command.slice(position).replace(re, ''),\n                    true\n                );\n                // chrome jump to address bar\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function delete_word_backward(clipboard) {\n            return function delete_word_backward() {\n                // don't work in Chromium (can't prevent close tab)\n                if (command !== '' && position !== 0) {\n                    var m = command.slice(0, position).match(/([^ ]+ *$)/);\n                    if (m[0].length) {\n                        kill_text = self['delete'](-m[0].length);\n                        if (clipboard) {\n                            text_to_clipboard(self, kill_text);\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function return_true() {\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function paste_event() {\n            clip.val('');\n            paste_count = 0;\n            if (self.isenabled() && !clip.is(':focus')) {\n                clip.trigger('focus', [true]);\n            }\n            clip.one('input', paste);\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function prev_history() {\n            if (first_up_history) {\n                last_command = command;\n                self.set(history.current());\n            } else {\n                self.set(history.previous());\n            }\n            first_up_history = false;\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function next_history() {\n            self.set(history.end() ? last_command : history.next());\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function backspace_key() {\n            if (reverse_search) {\n                rev_search_str = rev_search_str.slice(0, -1);\n                draw_reverse_prompt();\n            } else if (command !== '' && position > 0) {\n                self['delete'](-1);\n            }\n            // for next input after naitve backspace\n            // we need timeout because we don't want it to trigger\n            // for current input but next one\n            self.oneTime(1, function() {\n                no_keydown = true;\n            });\n        }\n        // -------------------------------------------------------------------------------\n        function left() {\n            if (position > 0) {\n                self.position(-1, true);\n                redraw();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function right() {\n            if (position < command.length) {\n                self.position(1, true);\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function home() {\n            self.position(0);\n        }\n        // -------------------------------------------------------------------------------\n        function end() {\n            self.position(command.length);\n        }\n        // -------------------------------------------------------------------------------\n        function mobile_focus() {\n            //if (is_touch) {\n            var focus = clip.is(':focus');\n            if (enabled) {\n                if (!focus) {\n                    //clip.trigger('focus', [true]);\n                }\n                self.oneTime(10, function() {\n                    if (!clip.is(':focus') && enabled) {\n                        clip.trigger('focus', [true]);\n                    }\n                });\n            } else if (focus && (is_mobile || !enabled)) {\n                clip.trigger('blur', [true]);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // on mobile you can't delete character if input is empty (event\n        // will not fire) so we fake text entry, we could just put dummy\n        // data but we put real command and position\n        function fix_textarea(position_only) {\n            if (!self.isenabled()) {\n                return;\n            }\n            // delay worked while experimenting\n            self.oneTime(10, function() {\n                // we use space before command to show select all context menu\n                // idea taken from CodeMirror\n                if (clip.val() !== command && !position_only) {\n                    clip.val(' ' + command);\n                }\n                if (enabled) {\n                    self.oneTime(10, function() {\n                        try {\n                            // we check first to improve performance\n                            if (clip.caret() !== position + 1) {\n                                clip.caret(position + 1);\n                            }\n                        } catch (e) {\n                            // firefox throw NS_ERROR_FAILURE ignore\n                        }\n                    });\n                }\n            });\n        }\n        // -------------------------------------------------------------------------------\n        // terminal animation don't work on android because they animate\n        // 2 properties\n        if (animation_supported && !is_android) {\n            animation = function(toggle) {\n                if (toggle) {\n                    cursor.addClass('blink');\n                } else {\n                    cursor.removeClass('blink');\n                }\n            };\n            restart_animation = function() {\n                var new_cursor = cursor.clone();\n                new_cursor.insertBefore(cursor);\n                cursor.remove();\n                cursor = new_cursor;\n            };\n        } else {\n            var animating = false;\n            animation = function(toggle) {\n                if (toggle && !animating) {\n                    animating = true;\n                    cursor.addClass('inverted blink');\n                    self.everyTime(500, 'blink', blink);\n                } else if (animating && !toggle) {\n                    animating = false;\n                    self.stopTime('blink', blink);\n                    cursor.removeClass('inverted blink');\n                }\n            };\n            restart_animation = function() {\n                animation(false);\n                animation(true);\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Blinking cursor function\n        // ---------------------------------------------------------------------\n        function blink() {\n            cursor.toggleClass('inverted');\n        }\n        // ---------------------------------------------------------------------\n        // :: Set prompt for reverse search\n        // ---------------------------------------------------------------------\n        function draw_reverse_prompt() {\n            prompt = '(reverse-i-search)`' + rev_search_str + \"': \";\n            draw_prompt();\n        }\n        // ---------------------------------------------------------------------\n        // :: Disable reverse search\n        // ---------------------------------------------------------------------\n        function clear_reverse_state() {\n            prompt = backup_prompt;\n            reverse_search = false;\n            reverse_search_position = null;\n            rev_search_str = '';\n        }\n        // ---------------------------------------------------------------------\n        // :: Search through command line history. If next is not defined or\n        // :: false it searches for the first item from the end. If true it\n        // :: search for the next item\n        // ---------------------------------------------------------------------\n        function reverse_history_search(next) {\n            var history_data = history.data();\n            var regex, save_string;\n            var len = history_data.length;\n            if (next && reverse_search_position > 0) {\n                len -= reverse_search_position;\n            }\n            if (rev_search_str.length > 0) {\n                for (var j = rev_search_str.length; j > 0; j--) {\n                    save_string = $.terminal.escape_regex(rev_search_str.substring(0, j));\n                    if (settings.caseSensitiveSearch) {\n                        regex = new RegExp(save_string);\n                    } else {\n                        regex = new RegExp(save_string, 'i');\n                    }\n                    for (var i = len; i--;) {\n                        if (regex.test(history_data[i])) {\n                            reverse_search_position = history_data.length - i;\n                            self.position(history_data[i].indexOf(save_string));\n                            self.set(history_data[i], true);\n                            redraw();\n                            if (rev_search_str.length !== j) {\n                                rev_search_str = rev_search_str.substring(0, j);\n                                draw_reverse_prompt();\n                            }\n                            return;\n                        }\n                    }\n                }\n            }\n            rev_search_str = ''; // clear if not found any\n        }\n        // ---------------------------------------------------------------------\n        // :: Recalculate number of characters in command line\n        // ---------------------------------------------------------------------\n        function change_num_chars() {\n            var $prompt = self.find('.prompt').html('<span>&nbsp;</span>');\n            var W = self.width();\n            var w = $prompt.find('span')[0].getBoundingClientRect().width;\n            num_chars = Math.floor(W / w);\n        }\n        // ---------------------------------------------------------------------\n        // :: Split String that fit into command line where first line need to\n        // :: fit next to prompt (need to have less characters)\n        // ---------------------------------------------------------------------\n        function get_splitted_command_line(string) {\n            function split(string) {\n                return $.terminal.split_equal(string, num_chars);\n            }\n            function skip_empty(array) {\n                // we remove lines that are leftovers after adding space at the end\n                return array.filter(function(line) {\n                    return !$.terminal.strip(line).match(/^ $/);\n                });\n            }\n            var line = prompt_node.find('.line');\n            var prompt;\n            if (line.length) {\n                prompt = line.nextUntil('.line').text();\n            } else {\n                prompt = prompt_node.text();\n            }\n            prompt = $.terminal.escape_brackets(prompt);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            var array;\n            if (string.match(/\\n/)) {\n                var tmp = string.split('\\n');\n                var first_len = num_chars - prompt_len - 1;\n                for (var i = 0; i < tmp.length - 1; ++i) {\n                    tmp[i] += ' ';\n                }\n                // split first line\n                if (strlen(tmp[0]) > first_len) {\n                    array = split(prompt + tmp[0]);\n                    array[0] = array[0].replace(re, '');\n                    array = skip_empty(array);\n                } else {\n                    array = [tmp[0]];\n                }\n                // process rest of the lines\n                for (i = 1; i < tmp.length; ++i) {\n                    if (strlen(tmp[i]) > num_chars) {\n                        var splitted = split(tmp[i]);\n                        if (i < tmp.length - 1) {\n                            splitted = skip_empty(splitted);\n                        }\n                        array = array.concat(splitted);\n                    } else {\n                        array.push(tmp[i]);\n                    }\n                }\n            } else {\n                array = split(prompt + string, num_chars);\n                array[0] = array[0].replace(re, '');\n            }\n            // fix issue with cursor that was cut off #379\n            if (array.length > 1 && array[array.length - 1].length === num_chars) {\n                array.push('');\n            }\n            return array;\n        }\n        // ---------------------------------------------------------------------\n        // :: use custom formatting\n        // ---------------------------------------------------------------------\n        function formatting(string, skip_formatted_position) {\n            // we don't want to format command when user type formatting in\n            try {\n                string = $.terminal.escape_formatting(string);\n                var options = $.extend({}, settings, {\n                    unixFormattingEscapeBrackets: true,\n                    position: position\n                });\n                var formatted = $.terminal.apply_formatters(string, options);\n                string = formatted[0];\n                if (!skip_formatted_position) {\n                    formatted_position = formatted[1];\n                }\n                string = $.terminal.normalize(string);\n                string = crlf(string);\n                var max = $.terminal.length(string);\n                // fix issue with nested formatting where max length is checked before\n                // nested_formatting flatten formatting\n                if (formatted_position > max) {\n                    formatted_position = max;\n                }\n                return string;\n            } catch (e) {\n                alert_exception('[Formatting]', e.stack);\n                return string;\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: format and encode the string\n        // ---------------------------------------------------------------------\n        function format(string, before) {\n            var encoded = $.terminal.encode(wrap(string), {\n                tabs: settings.tabs,\n                before: before\n            });\n            string = $.terminal.format(encoded, {\n                char_width: settings.char_width\n            });\n            var re = /(<span[^>]+data-text[^>]+>)(.*?)(<\\/span>)/g;\n            return string.replace(re, '$1<span>$2</span>$3');\n        }\n        // ---------------------------------------------------------------------\n        // :: function create new string with all characters in it's own\n        // :: formatting - it will only have style if the input is formatting\n        // :: this function is not very usefull so it's not in $.terminal\n        // ---------------------------------------------------------------------\n        function wrap(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\]\\\\\\]/)) {\n                        string = string.replace(/\\]\\\\\\]/g, ']\\\\\\\\]');\n                    }\n                } else {\n                    if (string.match(/\\\\$/)) {\n                        string += '\\\\';\n                    }\n                    string = '[[;;]' + string + ']';\n                }\n                return string;\n            }\n            var len = length(string);\n            if (len === 1) {\n                return formatting(string);\n            }\n            var result = [];\n            // len - 1 break the command line $.terminal.substring will return\n            // empty string for out of bound indexes\n            for (var i = 0; i < len; ++i) {\n                var text = $.terminal.substring(string, i, i + 1);\n                result.push(formatting(text));\n            }\n            return result.join('');\n        }\n        // ---------------------------------------------------------------------\n        // :: shortcut helpers\n        // ---------------------------------------------------------------------\n        function length(str) {\n            return $.terminal.length(str);\n        }\n        function substring(str, start, end) {\n            return $.terminal.substring(str, start, end);\n        }\n        // ---------------------------------------------------------------------\n        // :: Function that displays the command line. Split long lines and\n        // :: place cursor in the right place\n        // ---------------------------------------------------------------------\n        var redraw = (function() {\n            var before = cursor.prev();\n            var after = cursor.next();\n            var cursor_line = cursor.parent();\n            // -----------------------------------------------------------------\n            // :: Draw line with the cursor\n            // -----------------------------------------------------------------\n            function draw_cursor_line(string, position, prompt) {\n                var len = length(string);\n                prompt = prompt || '';\n                var c;\n                if (position === len) {\n                    before.html(format(string));\n                    cursor.html('&nbsp;');\n                    after.html('');\n                } else if (position === 0) {\n                    before.html('');\n                    c = substring(string, 0, 1);\n                    cursor.html(format(c));\n                    after.html(format(substring(string, 1), prompt + c));\n                } else {\n                    var before_str = $.terminal.substring(string, 0, position);\n                    before.html(format(before_str, prompt));\n                    c = substring(string, position, position + 1);\n                    var c_before = (prompt + before_str).replace(/^.*\\t/, '');\n                    cursor.html(format(c, c_before));\n                    if (position === len - 1) {\n                        after.html('');\n                    } else {\n                        if (c.match(/\\t/)) {\n                            c_before = '';\n                        } else {\n                            c_before += c;\n                        }\n                        after.html(format(substring(string, position + 1), c_before));\n                    }\n                }\n                // synchronize css animations (it's not that important because if user\n                // will change animation she should disable animation on span, but it\n                // looks nicer until she disable that inner animation)\n                restart_animation();\n            }\n            function div(string, before) {\n                return '<div role=\"presentation\" aria-hidden=\"true\">' +\n                    format(string, before || '') +\n                    '</div>';\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines after the cursor\n            // -----------------------------------------------------------------\n            function lines_after(lines) {\n                var last_ins = cursor_line;\n                $.each(lines, function(i, line) {\n                    last_ins = $(div(line)).insertAfter(last_ins);\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines before the cursor\n            // -----------------------------------------------------------------\n            function lines_before(lines) {\n                $.each(lines, function(i, line) {\n                    cursor_line.before(div(line, i === 0 ? prompt_last_line : ''));\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Redraw function\n            // -----------------------------------------------------------------\n            return function() {\n                var string;\n                switch (typeof settings.mask) {\n                    case 'boolean':\n                        string = settings.mask ? command.replace(/./g, '*') : command;\n                        break;\n                    case 'string':\n                        string = command.replace(/./g, settings.mask);\n                        break;\n                }\n                string = formatting(string);\n                var pos = formatted_position;\n                var i;\n                self.find('div:not(.cursor-line,.clipboard-wrapper)').remove();\n                before.html('');\n                // long line\n                if (strlen(text(string)) > num_chars - prompt_len - 1 ||\n                    string.match(/\\n/)) {\n                    var tabs = string.match(/\\t/g);\n                    var original_string = string;\n                    //quick tabulation hack\n                    if (tabs) {\n                        string = string.replace(/\\t/g, '\\x00\\x00\\x00\\x00');\n                    }\n                    var array = get_splitted_command_line(string);\n                    if (tabs) {\n                        array = $.map(array, function(line) {\n                            return line.replace(/\\x00\\x00\\x00\\x00/g, '\\t');\n                        });\n                    }\n                    var first_len = length(array[0]);\n                    //cursor in first line\n                    if (first_len === 0 && array.length === 1) {\n                        // skip empty line\n                    } else if (pos < first_len) {\n                        draw_cursor_line(array[0], pos, prompt_last_line);\n                        lines_after(array.slice(1));\n                    } else if (pos === first_len) {\n                        // first char acter of second line\n                        cursor_line.before(div(array[0], prompt_last_line));\n                        draw_cursor_line(array[1] || '', 0);\n                        if (array.length > 1) {\n                            lines_after(array.slice(2));\n                        }\n                    } else {\n                        var last = array.slice(-1)[0];\n                        var len = length(original_string);\n                        var from_last = len - pos;\n                        var last_len = length(last);\n                        var new_pos = 0;\n                        if (from_last === -1) {\n                            from_last = 0;\n                        }\n                        if (from_last <= last_len) { // in last line\n                            lines_before(array.slice(0, -1));\n                            if (last_len === from_last) {\n                                new_pos = 0;\n                            } else {\n                                new_pos = last_len - from_last;\n                            }\n                            draw_cursor_line(last, new_pos);\n                        } else {\n                            // more lines, cursor in the middle\n                            var line_index;\n                            var current;\n                            new_pos = pos;\n                            for (i = 0; i < array.length; ++i) {\n                                var current_len = $.terminal.length(array[i]);\n                                if (new_pos > current_len) {\n                                    new_pos -= current_len;\n                                } else {\n                                    break;\n                                }\n                            }\n                            current = array[i];\n                            line_index = i;\n                            // cursor on first character in line\n                            if (new_pos === length(current)) {\n                                new_pos = 0;\n                                current = array[++line_index];\n                                if (current === undefined) {\n                                    //should never happen\n                                    var msg = $.terminal.defaults.strings.redrawError;\n                                    throw new Error(msg);\n                                }\n                            }\n                            draw_cursor_line(current, new_pos);\n                            lines_before(array.slice(0, line_index));\n                            lines_after(array.slice(line_index + 1));\n                        }\n                    }\n                } else if (string === '') {\n                    before.html('');\n                    cursor.html('&nbsp;');\n                    after.html('');\n                } else {\n                    draw_cursor_line(string, pos);\n                }\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: find position that match display position for commands that\n        // :: change length by formatters\n        // ---------------------------------------------------------------------\n        var find_position = (function() {\n            function cmp(search_pos, pos) {\n                var opts = $.extend({}, settings, {\n                    position: pos\n                });\n                var guess = $.terminal.apply_formatters(command, opts)[1];\n                if (guess === search_pos) {\n                    return 0;\n                } else if (guess < search_pos) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }\n            return function(string, formatted_position) {\n                if (formatted_position === 0) {\n                    return 0;\n                }\n                string = text(string);\n                var codepoint_len = string.length;\n                var pos = binary_search(0, codepoint_len, formatted_position, cmp);\n                var chars = $.terminal.split_characters(string);\n                if (codepoint_len > chars.length) {\n                    var len = 0;\n                    for (var i = 0; i < chars.length; ++i) {\n                        len += chars[i].length;\n                        if (len >= pos) {\n                            return len;\n                        }\n                    }\n                }\n                return pos;\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Draw prompt that can be a function or a string\n        // ---------------------------------------------------------------------\n        var draw_prompt = (function() {\n            function set(prompt) {\n                prompt = $.terminal.apply_formatters(prompt, {});\n                prompt = $.terminal.normalize(prompt);\n                prompt = crlf(prompt);\n                var lines = $.terminal.split_equal(prompt, num_chars);\n                var options = {\n                    char_width: settings.char_width\n                };\n                prompt_last_line = lines[lines.length - 1];\n                var encoded_last_line = $.terminal.encode(lines[lines.length - 1], {\n                    tabs: settings.tabs\n                });\n                var last_line = $.terminal.format(encoded_last_line, options);\n                var formatted = lines.slice(0, -1).map(function(line) {\n                    line = $.terminal.encode(prompt, {\n                        tabs: settings.tabs\n                    });\n                    return '<span class=\"line\">' +\n                        $.terminal.format(line, options) +\n                        '</span>';\n                }).concat([last_line]).join('\\n');\n                // update prompt if changed\n                if (prompt_node.html() !== formatted) {\n                    prompt_node.html(formatted);\n                    prompt_len = strlen(text(last_line));\n                }\n            }\n            return function() {\n                switch (typeof prompt) {\n                    case 'string':\n                        set(prompt);\n                        break;\n                    case 'function':\n                        prompt(set);\n                        break;\n                }\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Paste content to terminal using hidden textarea\n        // ---------------------------------------------------------------------\n        function paste() {\n            if (paste_count++ > 0) {\n                return;\n            }\n            if (self.isenabled()) {\n                //wait until Browser insert text to textarea\n                self.oneTime(100, function() {\n                    self.insert(clip.val());\n                    clip.val(command);\n                    fix_textarea();\n                });\n            }\n        }\n        function fire_change_command() {\n            if (is_function(settings.onCommandChange)) {\n                settings.onCommandChange(command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Command Line Methods\n        // ---------------------------------------------------------------------\n        $.extend(self, {\n            option: function(name, value) {\n                if (typeof value === 'undefined') {\n                    return settings[name];\n                } else {\n                    settings[name] = value;\n                }\n                return self;\n            },\n            name: function(string) {\n                if (string !== undefined) {\n                    name = string;\n                    var enabled = history && history.enabled() || !history;\n                    history = new History(\n                        name,\n                        settings.historySize,\n                        settings.history === 'memory'\n                    );\n                    // disable new history if old was disabled\n                    if (!enabled) {\n                        history.disable();\n                    }\n                    return self;\n                } else {\n                    return name;\n                }\n            },\n            purge: function() {\n                history.clear();\n                return self;\n            },\n            history: function() {\n                return history;\n            },\n            'delete': function(n, stay) {\n                var removed;\n                if (n === 0) {\n                    return \"\";\n                } else if (n < 0) {\n                    if (position > 0) {\n                        // this may look weird but if n is negative we need\n                        // to use +\n                        removed = command.slice(0, position).slice(n);\n                        command = command.slice(0, position + n) +\n                            command.slice(position, command.length);\n                        if (!stay) {\n                            self.position(position + n);\n                        }\n                        fire_change_command();\n                    }\n                } else if (command !== '' && position < command.length) {\n                    removed = command.slice(position).slice(0, n);\n                    command = command.slice(0, position) +\n                        command.slice(position + n, command.length);\n                    fire_change_command();\n                }\n                redraw();\n                fix_textarea();\n                return removed;\n            },\n            set: function(string, stay, silent) {\n                if (string !== undefined) {\n                    command = string;\n                    if (!stay) {\n                        self.position(command.length);\n                    }\n                    redraw();\n                    fix_textarea();\n                    if (!silent) {\n                        fire_change_command();\n                    }\n                }\n                return self;\n            },\n            keymap: function(new_keymap, value) {\n                function wrap(key, fn) {\n                    return function(e) {\n                        // new keymap function will get default as 2nd argument\n                        return fn(e, default_keymap[key]);\n                    };\n                }\n                if (typeof new_keymap === 'undefined') {\n                    return keymap;\n                } else if (typeof new_keymap === 'string') {\n                    if (typeof value === 'undefined') {\n                        if (keymap[new_keymap]) {\n                            return keymap[new_keymap];\n                        } else if (default_keymap[new_keymap]) {\n                            return default_keymap[new_keymap];\n                        }\n                    } else {\n                        keymap[new_keymap] = wrap(new_keymap, value);\n                    }\n                } else {\n                    keymap = $.extend(\n                        {},\n                        keymap ? keymap : default_keymap,\n                        $.omap(new_keymap || {}, wrap)\n                    );\n                    return self;\n                }\n            },\n            insert: function(string, stay) {\n                if (position === command.length) {\n                    command += string;\n                } else if (position === 0) {\n                    command = string + command;\n                } else {\n                    command = command.slice(0, position) +\n                        string + command.slice(position);\n                }\n                if (!stay) {\n                    self.position(string.length, true, true);\n                } else {\n                    fix_textarea();\n                }\n                redraw();\n                fire_change_command();\n                fix_textarea();\n                return self;\n            },\n            get: function() {\n                return command;\n            },\n            commands: function(commands) {\n                if (commands) {\n                    settings.commands = commands;\n                    return self;\n                } else {\n                    return commands;\n                }\n            },\n            destroy: function() {\n                doc.unbind('keypress.cmd', keypress_event);\n                doc.unbind('keydown.cmd', keydown_event);\n                doc.unbind('input.cmd', input_event);\n                self.stopTime('blink', blink);\n                self.find('.cursor').next().remove().end().prev().remove().\n                    end().remove();\n                self.find('.prompt, .clipboard').remove();\n                self.removeClass('cmd').removeData('cmd').off('.cmd');\n                return self;\n            },\n            prompt: function(user_prompt) {\n                if (user_prompt === undefined) {\n                    return prompt;\n                } else {\n                    if (typeof user_prompt === 'string' ||\n                        typeof user_prompt === 'function') {\n                        prompt = user_prompt;\n                    } else {\n                        throw new Error('prompt must be a function or string');\n                    }\n                    draw_prompt();\n                    // we could check if command is longer then numchars-new\n                    // prompt\n                    redraw();\n                    return self;\n                }\n            },\n            kill_text: function() {\n                return kill_text;\n            },\n            position: function(n, relative, silent) {\n                if (typeof n === 'number') {\n                    var pos = position;\n                    if (relative) {\n                        position += n;\n                    } else if (n < 0) {\n                        position = 0;\n                    } else if (n > command.length) {\n                        position = command.length;\n                    } else {\n                        position = n;\n                    }\n                    if (pos !== position && !silent) {\n                        redraw();\n                        if (is_function(settings.onPositionChange)) {\n                            settings.onPositionChange(position, formatted_position);\n                        }\n                        fix_textarea(true);\n                    }\n                    return self;\n                } else {\n                    return position;\n                }\n            },\n            refresh: function() {\n                draw_prompt();\n                redraw();\n                return self;\n            },\n            // if formatter change length of the strings (like emoji demo) we need to keep\n            // track of two different positions one for command and one for display\n            display_position: function(n, relative) {\n                if (n === undefined) {\n                    return formatted_position;\n                } else {\n                    var string = formatting(command, true);\n                    var len = $.terminal.length(string);\n                    var command_len = text(command).length;\n                    var new_formatted_pos;\n                    if (relative) {\n                        new_formatted_pos = formatted_position + n;\n                    } else if (n > len) {\n                        new_formatted_pos = len;\n                    } else {\n                        new_formatted_pos = n;\n                    }\n                    if (len === new_formatted_pos) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(command_len);\n                    }\n                    var pos = find_position(command, new_formatted_pos);\n                    if (pos !== -1) {\n                        formatted_position = new_formatted_pos;\n                        self.position(pos);\n                    }\n                    return self;\n                }\n            },\n            visible: (function() {\n                var visible = self.visible;\n                return function() {\n                    visible.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            show: (function() {\n                var show = self.show;\n                return function() {\n                    show.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            resize: function(num) {\n                if (num) {\n                    num_chars = num;\n                } else {\n                    change_num_chars();\n                }\n                redraw();\n                draw_prompt();\n                return self;\n            },\n            enable: function() {\n                if (!enabled) {\n                    enabled = true;\n                    self.addClass('enabled');\n                    try {\n                        clip.caret(position);\n                    } catch (e) {\n                        // firefox throw NS_ERROR_FAILURE ignore\n                    }\n                    animation(true);\n                    draw_prompt();\n                    fix_textarea();\n                }\n                mobile_focus();\n                return self;\n            },\n            isenabled: function() {\n                return enabled;\n            },\n            disable: function(focus) {\n                enabled = false;\n                self.removeClass('enabled');\n                animation(false);\n                if (!focus) {\n                    mobile_focus();\n                }\n                return self;\n            },\n            mask: function(new_mask) {\n                if (typeof new_mask === 'undefined') {\n                    return settings.mask;\n                } else {\n                    settings.mask = new_mask;\n                    redraw();\n                    return self;\n                }\n            }\n        });\n        //debug_object(self, 'cmd')('display_position');\n        // ---------------------------------------------------------------------\n        // :: INIT\n        // ---------------------------------------------------------------------\n        self.name(settings.name || settings.prompt || '');\n        if (typeof settings.prompt === 'string') {\n            prompt = settings.prompt;\n        } else {\n            prompt = '> ';\n        }\n        draw_prompt();\n        if (settings.enabled === true) {\n            self.enable();\n        }\n        if (!settings.history) {\n            history.disable();\n        }\n        // fix for .cursor span animation that should only be applied when\n        // animation is equal to terminal-blink\n        if (animation_supported) {\n            var style = window.getComputedStyle(cursor[0]);\n            var animationName = style.getPropertyValue('--animation');\n            animationName = animationName.replace(/^\\s*|\\s*$/g, '');\n\n            if (animationName && !animationName.match(/blink/)) {\n                var className = animationName.replace(/terminal-/, '') + '-animation';\n                self.addClass(className);\n            }\n        }\n        var first_up_history = true;\n        // prevent_keypress - hack for Android that was inserting characters on\n        // backspace\n        var prevent_keypress = false;\n        var dead_key = false;\n        var single_key = false;\n        var no_keypress = false;\n        var no_key = false;\n        var no_keydown = true;\n        var backspace = false;\n        var process = false;\n        var hold = false;\n        var hold_pause = false;\n        var skip_insert;\n        // we hold text before keydown to fix backspace for Android/Chrome/SwiftKey\n        // keyboard that generate keycode 229 for all keys #296\n        var prev_command = '';\n        // ---------------------------------------------------------------------\n        // :: Keydown Event Handler\n        // ---------------------------------------------------------------------\n        function is_backspace(e) {\n            return e.key.toUpperCase() === 'BACKSPACE' || e.which === 8;\n        }\n        // ---------------------------------------------------------------------\n        function is_single(e) {\n            return e.key && e.key.length === 1 && !e.ctrlKey;\n        }\n        // ---------------------------------------------------------------------\n        function clear_reverse_search_key(e) {\n            // arrows / Home / End / ENTER\n            return e.which === 35 || e.which === 36 ||\n                e.which === 37 || e.which === 38 ||\n                e.which === 39 || e.which === 40 ||\n                e.which === 13 || e.which === 27;\n        }\n        // ---------------------------------------------------------------------\n        function keydown_event(e) {\n            debug('keydown \"' + e.key + '\" ' + e.fake + ' ' + e.which);\n            process = (e.key || '').toLowerCase() === 'process' || e.which === 0;\n            var result;\n            dead_key = no_keypress && single_key && !is_backspace(e);\n            // special keys don't trigger keypress fix #293\n            try {\n                if (!e.fake) {\n                    single_key = is_single(e);\n                    // chrome on android support key property but it's \"Unidentified\"\n                    no_key = String(e.key).toLowerCase() === 'unidentified';\n                    backspace = is_backspace(e);\n                }\n            } catch (exception) {}\n            // keydown created in input will have text already inserted and we\n            // want text before input\n            if (e.key === \"Unidentified\") {\n                no_keydown = true;\n                // android swift keyboard have always which == 229 we will triger proper\n                // event in input with e.fake == true\n                return;\n            }\n            if (!e.fake) {\n                no_keypress = true;\n                no_keydown = false;\n            }\n            // Meta+V did bind input but it didin't happen because terminal paste\n            // prevent native insert action\n            clip.off('input', paste);\n            var key = get_key(e);\n            if (is_function(settings.keydown)) {\n                result = settings.keydown(e);\n                if (result !== undefined) {\n                    //prevent_keypress = true;\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                self.oneTime(settings.holdTimeout, 'hold', function() {\n                    hold = true;\n                });\n                if (hold) {\n                    key = 'HOLD+' + key;\n                    if (hold_pause) {\n                        return;\n                    }\n                    if (settings.holdRepeatTimeout > 0) {\n                        hold_pause = true;\n                        self.oneTime(settings.holdRepeatTimeout, 'delay', function() {\n                            hold_pause = false;\n                        });\n                    }\n                }\n                restart_animation();\n                // CTRL+V don't fire keypress in IE11\n                skip_insert = ['CTRL+V', 'META+V'].indexOf(key) !== -1;\n                if (e.which !== 38 && !(e.which === 80 && e.ctrlKey)) {\n                    first_up_history = true;\n                }\n                if (reverse_search && clear_reverse_search_key(e)) {\n                    clear_reverse_state();\n                    draw_prompt();\n                    if (e.which === 27) { // ESC\n                        self.set('');\n                    }\n                    redraw();\n                    if (e.which === 13) {\n                        keydown_event.call(this, e);\n                    }\n                } else if (is_function(keymap[key])) {\n                    result = keymap[key](e);\n                    if (result === true) {\n                        return;\n                    }\n                    if (result !== undefined) {\n                        return result;\n                    }\n                } else if (e.altKey) {\n                    return;\n                } else {\n                    prevent_keypress = false;\n                    return;\n                }\n                // this will prevent for instance backspace to go back one page\n                //prevent_keypress = true;\n                //e.preventDefault();\n            }\n        }\n        function clear_hold() {\n            self.stopTime('hold');\n            hold_pause = hold = false;\n        }\n        var doc = $(document.documentElement || window);\n        self.keymap(settings.keymap || {});\n        function keypress_event(e) {\n            debug('keypress \"' + e.key + '\" ' + e.fake);\n            clear_hold();\n            var result;\n            if (!e.fake) {\n                no_keypress = false;\n            }\n            if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                return;\n            }\n            if (prevent_keypress) {\n                return;\n            }\n            if (is_function(settings.keypress)) {\n                result = settings.keypress(e);\n                if (result !== undefined) {\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                if (e.fake) {\n                    // event created in input, we prevent inserting text\n                    // in different interpreter when keydown called pop\n                    return;\n                }\n                // key polyfill is not correct for keypress\n                // https://github.com/cvan/keyboardevent-key-polyfill/issues/15\n                var key;\n                if (is_key_native || e.fake) {\n                    key = e.key;\n                    // fixing IE inconsistency #362\n                    var normalized = key.toUpperCase();\n                    if (key_mapping[normalized]) {\n                        key = key_mapping[normalized];\n                    }\n                }\n                if (!key || no_key) {\n                    key = String.fromCharCode(e.which);\n                }\n                if ($.inArray(e.which, [13, 0, 8]) > -1) {\n                    if (e.keyCode === 123) { // for F12 which === 0\n                        return;\n                    }\n                    return false;\n                    // which === 100 - d\n                } else if (key && (!e.ctrlKey || (e.ctrlKey && e.ctrlKey)) &&\n                           (!(e.altKey && e.which === 100) || e.altKey) &&\n                           !dead_key) {\n                    // dead_key are handled by input event\n                    if (reverse_search) {\n                        rev_search_str += key;\n                        reverse_history_search();\n                        draw_reverse_prompt();\n                    } else if (key.length === 1) {\n                        self.insert(key);\n                    }\n                }\n            }\n        }\n        function event(type, chr, which) {\n            var event = $.Event(type);\n            event.which = which;\n            event.key = chr;\n            event.fake = true;\n            doc.trigger(event);\n        }\n        function input_event() {\n            debug('input ' + no_keydown + ' || ' + process + ' ((' + no_keypress +\n                  ' || ' + dead_key + ') && !' + skip_insert + ' && (' + single_key +\n                  ' || ' + no_key + ') && !' + backspace + ')');\n            // correct for fake space used for select all context menu hack\n            var val = clip.val().replace(/^ /, '');\n            // Some Androids don't fire keypress - #39\n            // if there is dead_key we also need to grab real character #158\n            // Firefox/Android with google keyboard don't fire keydown and keyup #319\n            if ((no_keydown || process || ((no_keypress || dead_key) && !skip_insert &&\n                                          (single_key || no_key) && !backspace)) &&\n                val !== command) {\n                var pos = position;\n                // backspace is set in keydown if no keydown we need to get new one\n                if (no_keydown) {\n                    var cmd = prev_command;\n                    backspace = cmd.substring(0, cmd.length - 1).length === val.length;\n                }\n                if (reverse_search) {\n                    rev_search_str = val;\n                    reverse_history_search();\n                    draw_reverse_prompt();\n                } else {\n                    var chr = val.substring(position);\n                    if (chr.length === 1 || backspace) {\n                        // we trigger events so keypress and keydown callback work\n                        if (no_keydown) {\n                            var keycode;\n                            if (backspace) {\n                                keycode = 8;\n                            } else {\n                                keycode = chr.toUpperCase().charCodeAt(0);\n                            }\n                            event('keydown', backspace ? 'Backspace' : chr, keycode);\n                        }\n                        if (no_keypress && !backspace) {\n                            event('keypress', chr, chr.charCodeAt(0));\n                        }\n                    }\n                    if (backspace) {\n                        prev_command = command;\n                        return;\n                    }\n                    // if user return false in keydown we don't want to insert text\n                    if (skip_insert) {\n                        skip_insert = false;\n                        return;\n                    }\n                    self.set(val);\n                }\n                if (backspace) {\n                    self.position(pos - 1);\n                } else {\n                    // user enter more then one character if click on complete word\n                    // on android\n                    self.position(pos + Math.abs(val.length - prev_command.length));\n                }\n            }\n            prev_command = command;\n            skip_insert = false;\n            no_keydown = true;\n        }\n        doc.bind('keypress.cmd', keypress_event).bind('keydown.cmd', keydown_event)\n            .bind('keyup.cmd', clear_hold).bind('input.cmd', input_event);\n        (function() {\n            var was_down = false;\n            var count = 0;\n            self.on('mousedown.cmd', function() {\n                was_down = true;\n            }).on('mouseup.cmd', function(e) {\n                function trigger() {\n                    var $target = $(e.target);\n                    if (!$target.is('.prompt') && down) {\n                        if (enabled) {\n                            if ($target.is('.cmd')) {\n                                self.position(command.length);\n                            } else {\n                                self.display_position(get_char_pos(e));\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                // we get button from event for testing normally it's on originalEvent\n                var button;\n                if (e.originalEvent === undefined) {\n                    button = e.button;\n                } else {\n                    button = e.originalEvent.button;\n                }\n                if (button === 0 && get_selected_text() === '') {\n                    var name = 'click_' + id;\n                    if (++count === 1) {\n                        var down = was_down;\n                        if (enabled) {\n                            if (settings.clickTimeout === 0) {\n                                trigger();\n                            } else {\n                                self.oneTime(settings.clickTimeout, name, trigger);\n                            }\n                        } else {\n                            count = 0;\n                        }\n                    } else {\n                        self.stopTime(name);\n                        count = 0;\n                    }\n                }\n                was_down = false;\n            });\n        })();\n        self.data('cmd', self);\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            setTimeout(function() {\n                throw new Error('key event property not supported try https://github.' +\n                                'com/inexorabletash/polyfill/blob/master/keyboard.js');\n            }, 0);\n        }\n        return self;\n    }; // cmd plugin\n    // -------------------------------------------------------------------------\n    /* eslint-disable */\n    // regex that match single character at begining and folowing combine character\n    // https://en.wikipedia.org/wiki/Combining_character\n    var combine_chr_re = /^(.(?:[\\u0300-\\u036F]|[\\u1AB0-\\u1abE]|[\\u1DC0-\\u1DF9]|[\\u1DFB-\\u1DFF]|[\\u20D0-\\u20F0]|[\\uFE20-\\uFE2F])+)/;\n    // source: https://mathiasbynens.be/notes/javascript-unicode\n    var astral_symbols_re = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // source: https://github.com/mathiasbynens/emoji-regex\n    var emoji_re = /^(\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD]))/;\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    var mobile_re = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n    var tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n    var format_split_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\](?:[^\\]]*[^\\\\](\\\\\\\\)*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?)/i;\n    var format_parts_re = /\\[\\[([!gbiuso]*);([^;]*);([^;\\]]*);?([^;\\]]*);?([^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_exist_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]/gi;\n    var format_full_re = /^\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]$/gi;\n    var color_hex_re = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;\n    var url_re = /(\\bhttps?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var url_nf_re = /\\b(?![^\\s[\\]]*])(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var email_re = /((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))/g;\n    var command_re = /((?:\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\\/[^\\/\\\\]*(?:\\\\[\\S\\s][^\\/\\\\]*)*\\/[gimsuy]*(?=\\s|$)|(?:\\\\\\s|\\S))+)(?=\\s|$)/gi;\n    var extended_command_re = /^\\s*((terminal|cmd)::([a-z_]+)\\(([\\s\\S]*)\\))\\s*$/;\n    var format_begin_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_start_re = /^(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_end_re = /\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\]?$/i;\n    var format_exec_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\]\\])/;\n    var float_re = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n    var re_re = /^\\/((?:\\\\\\/|[^/]|\\[[^\\]]*\\/[^\\]]*\\])+)\\/([gimsuy]*)$/;\n    var string_re = /(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*')/;\n    var unclosed_strings_re = /^(?=((?:[^\"']+|\"[^\"\\\\]*(?:\\\\[^][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[^][^'\\\\]*)*')*))\\1./;\n    /* eslint-enable */\n    // -------------------------------------------------------------------------\n    // :: TOOLS\n    // -------------------------------------------------------------------------\n    // taken from https://hacks.mozilla.org/2011/09/detecting-and-generating-\n    // css-animations-in-javascript/\n    var animation_supported = (function() {\n        var animation = false,\n            domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n            elm = document.createElement('div');\n        if (elm.style.animationName) {\n            animation = true;\n        }\n        if (animation === false) {\n            for (var i = 0; i < domPrefixes.length; i++) {\n                var name = domPrefixes[i] + 'AnimationName';\n                if (elm.style[name] !== undefined) {\n                    animation = true;\n                    break;\n                }\n            }\n        }\n        elm = null;\n        return animation;\n    })();\n    // -------------------------------------------------------------------------\n    var is_ch_unit_supported = (function() {\n        var agent = window.navigator.userAgent;\n        if (agent.match(/MSIE|Trident/) && !agent.match(/IEMobile/)) {\n            return false;\n        }\n        var div = document.createElement('div');\n        div.style.width = '1ch';\n        return div.style.width === '1ch';\n    })();\n    // -------------------------------------------------------------------------\n    var is_css_variables_supported = window.CSS && window.CSS.supports &&\n            window.CSS.supports('--fake-var', 0);\n    // -------------------------------------------------------------------------\n    var is_android = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\n    // -------------------------------------------------------------------------\n    var is_safari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    // -------------------------------------------------------------------------\n    var is_key_native = (function is_key_native() {\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            return false;\n        }\n        var proto = window.KeyboardEvent.prototype;\n        var get = Object.getOwnPropertyDescriptor(proto, 'key').get;\n        return get.toString().match(/\\[native code\\]/);\n    })();\n    // -------------------------------------------------------------------------\n    var is_mobile = (function(a) {\n        var check = false;\n        if (mobile_re.test(a) || tablet_re.test(a.substr(0, 4))) {\n            check = true;\n        }\n        return check;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    // -------------------------------------------------------------------------\n    var strlen = (function() {\n        if (typeof wcwidth === 'undefined') {\n            return function(string) {\n                return $.terminal.length(string);\n            };\n        } else {\n            return wcwidth;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function bare_text(string) {\n        if (!string.match(/&/)) {\n            return string;\n        }\n        return $('<span>' + safe(string) + '</span>').text();\n    }\n    // -------------------------------------------------------------------------\n    function text(string) {\n        return bare_text($.terminal.strip(string));\n    }\n    // -------------------------------------------------------------------------\n    function safe(string) {\n        if (!string.match(/[<>&]/)) {\n            return string;\n        }\n        return string.replace(/&(?![^;]+;)/g, '&amp;')\n            .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n    }\n    // -------------------------------------------------------------------------\n    function crlf(string) {\n        return string.replace(/\\r/g, '');\n    }\n    // -------------------------------------------------------------------------\n    // :: function that return character from beginning of the string\n    // :: counting emoji, suroggate pairs and combine characters\n    // -------------------------------------------------------------------------\n    function get_next_character(string) {\n        var match_emoji = string.match(emoji_re);\n        if (match_emoji) {\n            return match_emoji[1];\n        } else if (string.substring(0, 2).replace(astral_symbols_re, '_') === 1) {\n            if (string.substring(1).match(combine_chr_re)) {\n                return string.substring(0, 3);\n            }\n            return string.substring(0, 2);\n        } else {\n            var match_combo = string.match(combine_chr_re);\n            if (match_combo) {\n                return match_combo[1];\n            }\n            return string[0];\n        }\n    }\n    // -------------------------------------------------------------------------\n    // normalize position for counting emoji\n    // -------------------------------------------------------------------------\n    function normalize_position(string, position) {\n        if (position === 0) {\n            return position;\n        }\n        string = $.terminal.strip(string);\n        var result = $.terminal.split_characters(string).reduce(function(acc, chr) {\n            if (typeof acc === 'number') {\n                return acc;\n            }\n            var length = acc.length + chr.length;\n            if (length >= position) {\n                return acc.position + 1;\n            }\n            return {\n                position: acc.position + 1,\n                length: length\n            };\n        }, {position: 0, length: 0});\n        if (typeof result === 'number') {\n            return result;\n        } else {\n            return result.position;\n        }\n    }\n    // -------------------------------------------------------------------------\n    function char_width_prop(len, options) {\n        if (is_ch_unit_supported) {\n            return 'width: ' + len + 'ch';\n        } else if (!is_css_variables_supported) {\n            if (options.char_width) {\n                return 'width: ' + (options.char_width * len) + 'px';\n            }\n        } else {\n            return '--length: ' + len;\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function extra_css(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var len = strlen(bare);\n            if (len !== $.terminal.length(bare)) {\n                return char_width_prop(len, options);\n            }\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function wide_characters(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var chars = $.terminal.split_characters(bare);\n            if (chars.length === 1) {\n                return text;\n            }\n            var specs = chars.map(function(chr) {\n                return {len: strlen(chr), chr: chr};\n            }).reduce(function(arr, spec) {\n                var last = arr[arr.length - 1];\n                if (last) {\n                    if (last.len !== spec.len) {\n                        return arr.concat([{\n                            sum: spec.len,\n                            len: spec.len,\n                            str: spec.chr\n                        }]);\n                    } else {\n                        arr.pop();\n                        return arr.concat([{\n                            sum: last.sum + spec.len,\n                            len: last.len,\n                            str: last.str + spec.chr\n                        }]);\n                    }\n                }\n                return [{\n                    sum: spec.len,\n                    str: spec.chr,\n                    len: spec.len\n                }];\n            }, []);\n            return specs.map(function(spec) {\n                if (spec.len === 1) {\n                    return spec.str;\n                }\n                var style = char_width_prop(spec.sum, options);\n                if (spec.sum === chars.length || !style.length) {\n                    return '<span>' + spec.str + '</span>';\n                } else {\n                    return '<span style=\"' + style + '\">' + spec.str + '</span>';\n                }\n            }).join('');\n        }\n        return text;\n    }\n    // ---------------------------------------------------------------------\n    // :: Binary search utility\n    // ---------------------------------------------------------------------\n    function binary_search(start, end, search_pos, compare_fn) {\n        var len = end - start;\n        var mid = start + Math.floor(len / 2);\n        var cmp = compare_fn(search_pos, mid);\n        if (cmp === 0) {\n            return mid;\n        } else if (cmp > 0 && len > 1) {\n            return binary_search(\n                mid,\n                end,\n                search_pos,\n                compare_fn\n            );\n        } else if (cmp < 0 && len > 1) {\n            return binary_search(\n                start,\n                mid,\n                search_pos,\n                compare_fn\n            );\n        } else {\n            return -1;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :: Cross-Browser selection utils\n    // ---------------------------------------------------------------------\n    var get_selected_text = (function() {\n        if (window.getSelection || document.getSelection) {\n            return function() {\n                var selection = (window.getSelection || document.getSelection)();\n                if (selection.text) {\n                    return selection.text;\n                } else {\n                    return selection.toString();\n                }\n            };\n        } else if (document.selection && document.selection.type !== \"Control\") {\n            return function() {\n                return document.selection.createRange().text;\n            };\n        }\n        return function() {\n            return '';\n        };\n    })();\n    // ---------------------------------------------------------------------\n    // :: try to copy given DOM element text to clipboard\n    // -----------------------------------------------------------------------\n    function text_to_clipboard(container, text) {\n        var $div = $('<div>' + text.replace(/\\n/, '<br/>') + '<div>');\n        $div.appendTo('body');\n        select_all($div[0]);\n        try {\n            document.execCommand('copy');\n        } catch (e) {}\n        $div.remove();\n    }\n    // ---------------------------------------------------------------------\n    var get_textarea_selection = (function() {\n        var textarea = document.createElement('textarea');\n        var selectionStart = 'selectionStart' in textarea;\n        textarea = null;\n        if (selectionStart) {\n            return function(textarea) {\n                var length = textarea.selectionEnd - textarea.selectionStart;\n                return textarea.value.substr(textarea.selectionStart, length);\n            };\n        } else if (document.selection) {\n            return function() {\n                var range = document.selection.createRange();\n                return range.text();\n            };\n        } else {\n            return function() {\n                return '';\n            };\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function clear_textarea_selection(textarea) {\n        textarea.selectionStart = textarea.selectionEnd = 0;\n    }\n    // ---------------------------------------------------------------------\n    // :: return string that are common in all elements of the array\n    // ---------------------------------------------------------------------\n    function common_string(string, array, matchCase) {\n        if (!array.length) {\n            return '';\n        }\n        var type = string_case(string);\n        var result = [];\n        for (var j = string.length; j < array[0].length; ++j) {\n            var push = false;\n            var candidate = array[0].charAt(j),\n                candidateLower = candidate.toLowerCase();\n            for (var i = 1; i < array.length; ++i) {\n                push = true;\n                var current = array[i].charAt(j),\n                    currentLower = current.toLowerCase();\n                if (candidate !== current) {\n                    if (matchCase || type === 'mixed') {\n                        push = false;\n                        break;\n                    } else if (candidateLower === currentLower) {\n                        if (type === 'lower') {\n                            candidate = candidate.toLowerCase();\n                        } else if (type === 'upper') {\n                            candidate = candidate.toUpperCase();\n                        } else {\n                            push = false;\n                            break;\n                        }\n                    } else {\n                        push = false;\n                        break;\n                    }\n                }\n            }\n            if (push) {\n                result.push(candidate);\n            } else {\n                break;\n            }\n        }\n        return string + result.join('');\n    }\n    // ---------------------------------------------------------------------\n    function trigger_terminal_change(next) {\n        terminals.forEach(function(term) {\n            term.settings().onTerminalChange.call(term, next);\n        });\n    }\n    // ---------------------------------------------------------------------\n    var select = (function() {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    selection.setBaseAndExtent(start, 0, end, 1);\n                };\n            } else {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    var range = document.createRange();\n                    range.setStart(start, 0);\n                    range.setEnd(end, end.childNodes.length);\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            }\n        } else {\n            return $.noop;\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function select_all(element) {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                selection.setBaseAndExtent(element, 0, element, 1);\n            } else if (document.createRange) {\n                var range = document.createRange();\n                range.selectNodeContents(element);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    function process_command(string, fn) {\n        var array = string.match(command_re) || [];\n        if (array.length) {\n            var name = array.shift();\n            var args = $.map(array, function(arg) {\n                if (arg.match(/^[\"']/)) {\n                    arg = arg.replace(/\\n/g, '\\\\u0000\\\\u0000\\\\u0000\\\\u0000');\n                    arg = fn(arg);\n                    return arg.replace(/\\x00\\x00\\x00\\x00/g, '\\n');\n                }\n                return fn(arg);\n            });\n            var quotes = $.map(array, function(arg) {\n                var m = arg.match(/^(['\"]).*\\1$/);\n                return m && m[1] || '';\n            });\n            var rest = string.substring(name.length).trim();\n            return {\n                command: string,\n                name: name,\n                args: args,\n                args_quotes: quotes,\n                rest: rest\n            };\n        } else {\n            return {\n                command: string,\n                name: '',\n                args: [],\n                args_quotes: quotes,\n                rest: ''\n            };\n        }\n    }\n    // -------------------------------------------------------------------------\n    $.terminal = {\n        version: 'DEV',\n        date: 'Sat, 08 Sep 2018 14:57:04 +0000',\n        // colors from http://www.w3.org/wiki/CSS/Properties/color/keywords\n        color_names: [\n            'transparent', 'currentcolor', 'black', 'silver', 'gray', 'white',\n            'maroon', 'red', 'purple', 'fuchsia', 'green', 'lime', 'olive',\n            'yellow', 'navy', 'blue', 'teal', 'aqua', 'aliceblue',\n            'antiquewhite', 'aqua', 'aquamarine', 'azure', 'beige', 'bisque',\n            'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown',\n            'burlywood', 'cadetblue', 'chartreuse', 'chocolate', 'coral',\n            'cornflowerblue', 'cornsilk', 'crimson', 'cyan', 'darkblue',\n            'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey',\n            'darkkhaki', 'darkmagenta', 'darkolivegreen', 'darkorange',\n            'darkorchid', 'darkred', 'darksalmon', 'darkseagreen',\n            'darkslateblue', 'darkslategray', 'darkslategrey', 'darkturquoise',\n            'darkviolet', 'deeppink', 'deepskyblue', 'dimgray', 'dimgrey',\n            'dodgerblue', 'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',\n            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green',\n            'greenyellow', 'grey', 'honeydew', 'hotpink', 'indianred', 'indigo',\n            'ivory', 'khaki', 'lavender', 'lavenderblush', 'lawngreen',\n            'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',\n            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey',\n            'lightpink', 'lightsalmon', 'lightseagreen', 'lightskyblue',\n            'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow',\n            'lime', 'limegreen', 'linen', 'magenta', 'maroon',\n            'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple',\n            'mediumseagreen', 'mediumslateblue', 'mediumspringgreen',\n            'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',\n            'mistyrose', 'moccasin', 'navajowhite', 'navy', 'oldlace', 'olive',\n            'olivedrab', 'orange', 'orangered', 'orchid', 'palegoldenrod',\n            'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip',\n            'peachpuff', 'peru', 'pink', 'plum', 'powderblue', 'purple', 'red',\n            'rosybrown', 'royalblue', 'saddlebrown', 'salmon', 'sandybrown',\n            'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',\n            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue', 'tan',\n            'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'wheat',\n            'white', 'whitesmoke', 'yellow', 'yellowgreen'],\n        // for unit tests\n        Cycle: Cycle,\n        History: History,\n        Stack: Stack,\n        // ---------------------------------------------------------------------\n        // :: Validate html color (it can be name or hex)\n        // ---------------------------------------------------------------------\n        valid_color: function valid_color(color) {\n            if (color.match(color_hex_re)) {\n                return true;\n            } else {\n                return $.inArray(color.toLowerCase(), $.terminal.color_names) !== -1;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function check if given string contain invalid strings\n        // ---------------------------------------------------------------------\n        unclosed_strings: function unclosed_strings(string) {\n            return !!string.match(unclosed_strings_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape all special regex characters, so it can be use as regex to\n        // :: match exact string that contain those characters\n        // ---------------------------------------------------------------------\n        escape_regex: function escape_regex(str) {\n            if (typeof str === 'string') {\n                var special = /([-\\\\^$[\\]()+{}?*.|])/g;\n                return str.replace(special, '\\\\$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: test if string contain formatting\n        // ---------------------------------------------------------------------\n        have_formatting: function have_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_exist_re);\n        },\n        is_formatting: function is_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_full_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: return array of formatting and text between them\n        // ---------------------------------------------------------------------\n        format_split: function format_split(str) {\n            return str.split(format_split_re).filter(Boolean);\n        },\n        // ---------------------------------------------------------------------\n        // :: replace that return position after replace for working with\n        // :: replacement that change length of the string\n        // :: source https://stackoverflow.com/a/46756077/387194\n        // ---------------------------------------------------------------------\n        tracking_replace: function tracking_replace(string, rex, replacement, position) {\n            function substring(string, start, end) {\n                return string.substring(start, end);\n            }\n            function length(string) {\n                return $.terminal.strip(string).length;\n            }\n            // we need to correct position from regex and match to take into account\n            // characters that are created from more when one code point like\n            // emoji or surogate pairs #422\n            function correct_index(index) {\n                var len = length(string.substring(0, index));\n                for (var i = index; i < string.length; ++i) {\n                    var next_len = length(string.substring(0, i));\n                    if (next_len === len + 1) {\n                        return len;\n                    }\n                    len = next_len;\n                }\n                return len;\n            }\n            var new_string = \"\";\n            var match;\n            var index = 0;\n            var rep_string;\n            var new_position = correct_index(position);\n            var start;\n            var global = rex.flags.indexOf('g') !== -1;\n            rex.lastIndex = 0; // Just to be sure\n            while ((match = rex.exec(string))) {\n                // if regex don't have g flag lastIndex will not work\n                if (global) {\n                    // fix lastIndex for emoji and characters\n                    // that have more then one codepoint\n                    var i = correct_index(rex.lastIndex);\n                    // Add any of the original string we just skipped\n                    var last_index = length(substring(string, 0, i));\n                    start = last_index - length(match[0]);\n                } else {\n                    start = correct_index(match.index);\n                    last_index = start + length(match[0]);\n                }\n                if (index < start) {\n                    new_string += substring(string, index, start);\n                }\n                index = last_index;\n                // Build the replacement string. This just handles $$ and $n,\n                // you may want to add handling for $`, $', and $&.\n                if (typeof replacement === 'function') {\n                    rep_string = replacement.apply(null, match);\n                } else {\n                    rep_string = replacement.replace(/\\$(\\$|\\d)/g, function(m, c0) {\n                        if (c0 === \"$\") {\n                            return \"$\";\n                        }\n                        return match[c0];\n                    });\n                }\n                // Add on the replacement\n                new_string += rep_string;\n                // If the position is affected...\n                if (start < position) {\n                    // ... update it:\n                    if (last_index < position) {\n                        // It's after the replacement, move it\n                        new_position = Math.max(\n                            0,\n                            new_position +\n                            length(rep_string) -\n                            length(match[0])\n                        );\n                    } else {\n                        // It's *in* the replacement, put it just after\n                        new_position += length(rep_string) - (position - start);\n                    }\n                }\n                // If the regular expression doesn't have the g flag, break here so\n                // we do just one replacement (and so we don't have an endless loop!)\n                if (!global) {\n                    break;\n                }\n            }\n            // Add on any trailing text in the string\n            if (index < length(string)) {\n                new_string += substring(string, index);\n            }\n            // Return the string and the updated position\n            if (string === new_string) {\n                return [string, position];\n            }\n            return [new_string, new_position];\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function used by substring and split_equal it loop over\n        // :: string and execute callback with text count and other data\n        // ---------------------------------------------------------------------\n        iterate_formatting: function iterate_formatting(string, callback) {\n            function is_space(i) {\n                return string.substring(i - 6, i) === '&nbsp;' ||\n                    string.substring(i - 1, i).match(/\\s/);\n            }\n            // ----------------------------------------------------------------\n            var entity_re = /^(&(?:[a-z\\d]+|#\\d+|#x[a-f\\d]+);)/i;\n            function match_entity(index) {\n                return string.substring(index).match(entity_re);\n            }\n            // ----------------------------------------------------------------\n            function is_open_formatting(i) {\n                return string[i] === '[' && string[i + 1] === '[';\n            }\n            // ----------------------------------------------------------------\n            function is_escape_bracket(i) {\n                return string[i] === ']' && string[i - 1] === '\\\\';\n            }\n            // ----------------------------------------------------------------\n            function is_text(i) {\n                return not_formatting && (string[i] !== ']' || !have_formatting)\n                    && !opening;\n            }\n            // ----------------------------------------------------------------\n            var have_formatting = $.terminal.have_formatting(string);\n            var formatting = '';\n            var in_text = false;\n            var count = 0;\n            var match;\n            var space = -1;\n            var prev_space;\n            var length = 0;\n            for (var i = 0; i < string.length; i++) {\n                match = string.substring(i).match(format_start_re);\n                if (match) {\n                    formatting = match[1];\n                    in_text = false;\n                } else if (formatting) {\n                    if (string[i] === ']') {\n                        if (in_text) {\n                            formatting = '';\n                            in_text = false;\n                        } else {\n                            in_text = true;\n                        }\n                    }\n                } else {\n                    in_text = true;\n                }\n                var not_formatting = (formatting && in_text) || !formatting;\n                var opening = is_open_formatting(i);\n                if (is_space(i) && (not_formatting || opening)) {\n                    if (space === -1 && prev_space !== i || space !== -1) {\n                        space = i;\n                    }\n                }\n                var braket = string[i].match(/[[\\]]/);\n                if (not_formatting) {\n                    // treat entity as one character\n                    if (string[i] === '&') {\n                        match = match_entity(i);\n                        if (match) {\n                            i += match[1].length - 2; // 2 because continue adds 1 to i\n                            continue;\n                        }\n                        ++count;\n                        ++length;\n                    } else if (is_escape_bracket(i)) {\n                        // escape \\] counts as one character\n                        --count;\n                        --length;\n                    } else if (!braket || !have_formatting) {\n                        ++count;\n                        ++length;\n                    }\n                }\n                if (is_text(i)) {\n                    if (strlen(string[i]) === 2) {\n                        length++;\n                    }\n                    var data = {\n                        count: count,\n                        index: i,\n                        formatting: formatting,\n                        length: length,\n                        text: in_text,\n                        space: space\n                    };\n                    var ret = callback(data);\n                    if (ret === false) {\n                        break;\n                    } else if (ret) {\n                        if (ret.count !== undefined) {\n                            count = ret.count;\n                        }\n                        if (ret.length !== undefined) {\n                            length = ret.length;\n                        }\n                        if (ret.space !== undefined) {\n                            prev_space = space;\n                            space = ret.space;\n                        }\n                        if (ret.index !== undefined) {\n                            i = ret.index;\n                        }\n                    }\n                } else if (i === string.length - 1) {\n                    callback({\n                        count: count + 1,\n                        index: i,\n                        formatting: formatting,\n                        length: 0,\n                        text: in_text,\n                        space: space\n                    });\n                }\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: formatting aware substring function\n        // ---------------------------------------------------------------------\n        substring: function substring(string, start_index, end_index) {\n            var chars = $.terminal.split_characters(text(string));\n            if (!chars.slice(start_index, end_index).length) {\n                return '';\n            }\n            var start = 0;\n            var end;\n            var start_formatting = '';\n            var end_formatting = '';\n            var prev_index;\n            var re = /(&[^;]+);$/;\n            $.terminal.iterate_formatting(string, function(data) {\n                var m;\n                if (start_index && data.count === start_index + 1) {\n                    start = data.index;\n                    // correct index for html entity\n                    m = string.substring(0, start + 1).match(re);\n                    if (m) {\n                        start -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        start_formatting = data.formatting;\n                    }\n                }\n                if (end_index && data.count === end_index) {\n                    end_formatting = data.formatting;\n                    prev_index = data.index;\n                }\n                if (data.count === end_index + 1) {\n                    end = data.index;\n                    m = string.substring(0, end + 1).match(re);\n                    if (m) {\n                        end -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        end = prev_index + 1;\n                    }\n                }\n                var substring = string.substring(data.index);\n                var chr = get_next_character(substring);\n                // handle emoji, suroggate pairs and combine characters\n                if (chr.length > 1) {\n                    return {\n                        index: data.index + chr.length - 1\n                    };\n                }\n            });\n            if (start_index && !start) {\n                return '';\n            }\n            if (end === undefined) {\n                end = string.length;\n            }\n            string = start_formatting + string.substring(start, end);\n            if (end_formatting) {\n                string = string.replace(/(\\[\\[^\\]]+)?\\]$/, '');\n                string += ']';\n            }\n            return string;\n        },\n        // ---------------------------------------------------------------------\n        // :: add format text as 5th paramter to formatting it's used for\n        // :: data attribute in format function\n        // ---------------------------------------------------------------------\n        normalize: function normalize(string) {\n            return string.replace(format_re, function(_, format, text) {\n                if (text === '') {\n                    return '';\n                }\n                function safe(string) {\n                    return string.replace(/\\\\\\]/g, '&#93;').replace(/\\n/g, '\\\\n')\n                        .replace(/&nbsp;/g, ' ');\n                }\n                format = safe(format);\n                var semicolons = format.match(/;/g).length;\n                // missing semicolons\n                if (semicolons >= 4) {\n                    var args = format.split(/;/);\n                    var start = args.slice(0, 4).join(';');\n                    var arg = args.slice(4).join(';');\n                    return '[[' + start + ';' + (arg || text) + ']' + text + ']';\n                } else if (semicolons === 2) {\n                    semicolons = ';;';\n                } else if (semicolons === 3) {\n                    semicolons = ';';\n                } else {\n                    semicolons = '';\n                }\n                // return '[[' + format + ']' + text + ']';\n                // closing braket will break formatting so we need to escape\n                // those using html entity equvalent\n                return '[[' + format + semicolons + safe(text) + ']' + text + ']';\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: split text into lines with equal length so each line can be\n        // :: rendered separately (text formatting can be longer then a line).\n        // ---------------------------------------------------------------------\n        split_equal: function split_equal(str, length, keep_words) {\n            var prev_format = '';\n            var result = [];\n            var array = $.terminal.normalize(str).split(/\\n/g);\n            for (var i = 0, len = array.length; i < len; ++i) {\n                if (array[i] === '') {\n                    result.push('');\n                    continue;\n                }\n                var line = array[i];\n                var first_index = 0;\n                var output;\n                var line_length = line.length;\n                var chars = $.terminal.split_characters(text(line));\n                var last_char = chars[chars.length - 1];\n                $.terminal.iterate_formatting(line, function(data) {\n                    var last_iteraction = data.index === line_length - last_char.length;\n                    var chr, substring;\n                    if (data.length >= length || last_iteraction ||\n                        (data.length === length - 1 &&\n                         strlen(line[data.index + 1]) === 2)) {\n                        var can_break = false;\n                        if (keep_words && data.space !== -1) {\n                            // replace html entities with characters\n                            var stripped = text(line.substring(data.space));\n                            // real length, not counting formatting\n                            var text_len = stripped.length;\n                            var limit = data.index + length + 1;\n                            stripped = stripped.substring(0, limit);\n                            if (stripped.match(/\\s|&nbsp;/) || limit > text_len) {\n                                can_break = true;\n                            }\n                        }\n                        // if words is true we split at last space and make next loop\n                        // continue where the space where located\n                        var new_index;\n                        if (keep_words && data.space !== -1 &&\n                            data.index !== line_length - 1 && can_break) {\n                            output = line.substring(first_index, data.space);\n                            new_index = data.space - 1;\n                        } else {\n                            substring = line.substring(data.index);\n                            chr = get_next_character(substring);\n                            output = line.substring(first_index, data.index) + chr;\n                            new_index = data.index + chr.length - 1;\n                        }\n                        if (keep_words) {\n                            output = output.replace(/^(&nbsp;|\\s)+|(&nbsp;|\\s)+$/g, '');\n                        }\n                        first_index = (new_index || data.index) + 1;\n                        if (prev_format) {\n                            var closed_formatting = output.match(/^[^\\]]*\\]/);\n                            output = prev_format + output;\n                            if (closed_formatting) {\n                                prev_format = '';\n                            }\n                        }\n                        var matched = output.match(format_re);\n                        if (matched) {\n                            var last = matched[matched.length - 1];\n                            if (last[last.length - 1] !== ']') {\n                                prev_format = last.match(format_begin_re)[1];\n                                output += ']';\n                            } else if (output.match(format_end_re)) {\n                                output = output.replace(format_end_re, '');\n                                prev_format = last.match(format_begin_re)[1];\n                            }\n                        }\n                        result.push(output);\n                        // modify loop by returing new data\n                        return {index: new_index, length: 0, space: -1};\n                    }\n                    substring = str.substring(data.index);\n                    chr = get_next_character(substring);\n                    // handle emoji, suroggate pairs and combine characters\n                    if (chr && chr.length > 1) {\n                        return {\n                            index: data.index + chr.length - 1\n                        };\n                    }\n                });\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape & that's not part of entity\n        // ---------------------------------------------------------------------\n        amp: function amp(str) {\n            return str.replace(/&(?!#[0-9]+;|[a-zA-Z]+;)/g, '&amp;');\n        },\n        // ---------------------------------------------------------------------\n        // :: Encode formating as html for insertion into DOM\n        // ---------------------------------------------------------------------\n        encode: function encode(str, options) {\n            var settings = $.extend({\n                tabs: 4,\n                before: ''\n            }, options);\n            return $.terminal.amp(str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\n                .replace(/ /g, '&nbsp;').split('\\n').map(function(line) {\n                    var splitted = line.split(/((?:\\[\\[[^\\]]+\\])?\\t(?:\\])?)/);\n                    splitted = splitted.filter(Boolean);\n                    return splitted.map(function(str, i) {\n                        if (str.match(/\\t/)) {\n                            return str.replace(/\\t([^\\t]*)$/, function(_, end) {\n                                if (i !== 0 && splitted[i - 1].match(/\\t\\]?$/)) {\n                                    var sp = new Array(settings.tabs + 1).join('&nbsp;');\n                                    return sp + end;\n                                } else {\n                                    var before = splitted.slice(i - 1, i).join('');\n                                    if (settings.before && i <= 1) {\n                                        before = settings.before + before;\n                                    }\n                                    var len = $.terminal.length(before);\n                                    var chars = settings.tabs - (len % settings.tabs);\n                                    if (chars === 0) {\n                                        chars = 4;\n                                    }\n                                    return new Array(chars + 1).join('&nbsp;') + end;\n                                }\n                            });\n                        }\n                        return str;\n                    }).join('');\n                }).join('\\n');\n        },\n        // -----------------------------------------------------------------------\n        // :: Default formatter that allow for nested formatting, example:\n        // :: [[;;#000]hello [[;#f00;]red] world]\n        // -----------------------------------------------------------------------\n        nested_formatting: function nested_formatting(string) {\n            if (!$.terminal.have_formatting(string)) {\n                return string;\n            }\n            var stack = [];\n            var re = /((?:\\[\\[(?:[^\\][]|\\\\\\])+\\])?(?:[^\\][]|\\\\\\])*\\]?)/;\n            var format_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\])[\\s\\S]*/;\n            return string.split(re).filter(Boolean).map(function(string) {\n                if (string.match(/^\\[\\[/)) {\n                    if (!$.terminal.is_formatting(string)) {\n                        string += ']';\n                        stack.push(string.replace(format_re, '$1'));\n                    }\n                } else {\n                    var pop = false;\n                    if (string.match(/\\]/)) {\n                        pop = true;\n                    }\n                    if (stack.length) {\n                        string = stack[stack.length - 1] + string;\n                    }\n                    if (pop) {\n                        stack.pop();\n                    } else if (stack.length) {\n                        string += ']';\n                    }\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: safe function that will render text as it is\n        // ---------------------------------------------------------------------\n        escape_formatting: function escape_formatting(string) {\n            return $.terminal.escape_brackets(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: apply custom formatters only to text\n        // ---------------------------------------------------------------------\n        apply_formatters: function apply_formatters(string, settings) {\n            if (string === \"\") {\n                if (typeof settings.position === 'number') {\n                    return [\"\", settings.position];\n                } else {\n                    return \"\";\n                }\n            }\n            function test_lengths(formatter, index, ret, string) {\n                if (!formatter.__no_warn__ &&\n                    $.terminal.length(ret) !== $.terminal.length(string)) {\n                    warn('Your formatter[' + index + '] change length of the string, ' +\n                         'you should use [regex, replacement] formatter or function ' +\n                         ' that return [replacement, position] instead');\n                }\n            }\n            var formatters = $.terminal.defaults.formatters;\n            settings = settings || {};\n            var i = 0;\n            function apply_function_formatter(formatter, input) {\n                var options = $.extend({}, settings, {\n                    position: input[1]\n                });\n                var ret = formatter(input[0], options);\n                if (typeof ret === 'string') {\n                    test_lengths(formatter, i - 1, ret, input[0]);\n                    if (typeof ret === 'string') {\n                        return [ret, options.position];\n                    }\n                    return input;\n                } else if (ret instanceof Array && ret.length === 2) {\n                    return ret;\n                } else {\n                    return input;\n                }\n            }\n            var input;\n            if (typeof settings.position === 'number') {\n                input = [string, settings.position];\n            } else {\n                input = [string, 0];\n            }\n            try {\n                var result = formatters.reduce(function(input, formatter) {\n                    i++;\n                    // __meta__ is for safe formatter that can handle formatters\n                    // inside formatters. for other usage we use format_split so one\n                    // formatter don't mess with formatter that was previous\n                    // on the list\n                    if (typeof formatter === 'function' && formatter.__meta__) {\n                        return apply_function_formatter(formatter, input);\n                    } else {\n                        var length = 0;\n                        var found_position = false;\n                        var splitted = $.terminal.format_split(input[0]);\n                        var partials = splitted.map(function(string) {\n                            var position;\n                            var this_len = text(string).length;\n                            // first position that match is used for this partial\n                            if (input[1] <= length + this_len && !found_position) {\n                                position = input[1] - length;\n                                found_position = true;\n                            } else {\n                                // -1 indicate that we will not track position because it\n                                // was in one of the previous parial strings\n                                position = -1;\n                            }\n                            // length is used to correct position after replace\n                            var length_before = length;\n                            var result;\n                            length += this_len;\n                            if ($.terminal.is_formatting(string)) {\n                                return [string, -1];\n                            } else {\n                                if (formatter instanceof Array) {\n                                    var options = formatter[2] || {};\n                                    result = [string, position < 0 ? 0 : position];\n                                    if (result[0].match(formatter[0])) {\n                                        if (options.loop) {\n                                            while (result[0].match(formatter[0])) {\n                                                result = $.terminal.tracking_replace(\n                                                    result[0],\n                                                    formatter[0],\n                                                    formatter[1],\n                                                    result[1]\n                                                );\n                                            }\n                                        } else {\n                                            result = $.terminal.tracking_replace(\n                                                result[0],\n                                                formatter[0],\n                                                formatter[1],\n                                                result[1]\n                                            );\n                                        }\n                                    }\n                                    if (position < 0) {\n                                        return [result[0], -1];\n                                    }\n                                } else if (typeof formatter === 'function') {\n                                    result = apply_function_formatter(formatter, [\n                                        string, position\n                                    ]);\n                                }\n                                if (typeof result !== 'undefined') {\n                                    // correct position becuase it's relative\n                                    // to partial and we need global for whole string\n                                    if (result[1] !== -1) {\n                                        result[1] += length_before;\n                                    }\n                                    return result;\n                                }\n                                return [string, -1];\n                            }\n                        });\n                        var position_partial = partials.filter(function(partial) {\n                            return partial[1] !== -1;\n                        })[0];\n                        var string = partials.map(function(partial) {\n                            return partial[0];\n                        }).join('');\n                        var position;\n                        if (typeof position_partial === 'undefined') {\n                            position = input[1];\n                        } else {\n                            position = position_partial[1];\n                        }\n                        // to make sure that output position is not outside the string\n                        var max = text(string).length;\n                        if (position > max) {\n                            position = max;\n                        }\n                        if (string === input[0]) {\n                            return input;\n                        }\n                        return [string, position];\n                    }\n                }, input);\n                if (typeof settings.position === 'number') {\n                    var codepoint_len = $.terminal.strip(result[0]).length;\n                    if ($.terminal.length(result[0]) < codepoint_len) {\n                        var position = result[1];\n                        position = normalize_position(result[0], position);\n                        var max = $.terminal.length(result[0]);\n                        if (position > max) {\n                            position = max;\n                        }\n                        result[1] = position;\n                    }\n                    return result;\n                } else {\n                    return result[0];\n                }\n            } catch (e) {\n                var msg = 'Error in formatter [' + (i - 1) + ']';\n                formatters.splice(i - 1);\n                throw new $.terminal.Exception('formatting', msg, e.stack);\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace terminal formatting with html\n        // ---------------------------------------------------------------------\n        format: function format(str, options) {\n            function safe_text(string) {\n                if (string.match(/\\\\]/)) {\n                    string = string.replace(/(\\\\+)]/g, function(_, slashes) {\n                        if (slashes.length % 2 === 1) {\n                            return ']';\n                        } else {\n                            return slashes.replace(/../, '\\\\');\n                        }\n                    });\n                }\n                return safe(string);\n            }\n            var settings = $.extend({}, {\n                linksNoReferrer: false,\n                linksNoFollow: false,\n                anyLinks: false\n            }, options || {});\n            if (typeof str === 'string') {\n                // support for formating foo[[u;;]bar]baz[[b;#fff;]quux]zzz\n                var splitted = $.terminal.format_split(str);\n                str = $.map(splitted, function(text) {\n                    if (text === '') {\n                        return text;\n                    } else if ($.terminal.is_formatting(text)) {\n                        // fix &nbsp; inside formatting because encode is called\n                        // before format\n                        text = text.replace(/\\[\\[[^\\]]+\\]/, function(text) {\n                            return text.replace(/&nbsp;/g, ' ');\n                        });\n                        return text.replace(format_parts_re, function(\n                            s,\n                            style,\n                            color,\n                            background,\n                            _class,\n                            data_text,\n                            text\n                        ) {\n                            if (text === '') {\n                                return ''; //'<span>&nbsp;</span>';\n                            }\n                            text = safe_text(text);\n                            var style_str = '';\n                            if (style.indexOf('b') !== -1) {\n                                style_str += 'font-weight:bold;';\n                            }\n                            var text_decoration = [];\n                            if (style.indexOf('u') !== -1) {\n                                text_decoration.push('underline');\n                            }\n                            if (style.indexOf('s') !== -1) {\n                                text_decoration.push('line-through');\n                            }\n                            if (style.indexOf('o') !== -1) {\n                                text_decoration.push('overline');\n                            }\n                            if (text_decoration.length) {\n                                style_str += 'text-decoration:' +\n                                    text_decoration.join(' ') + ';';\n                            }\n                            if (style.indexOf('i') !== -1) {\n                                style_str += 'font-style:italic;';\n                            }\n                            if ($.terminal.valid_color(color)) {\n                                style_str += 'color:' + color + ';' +\n                                    '--color:' + color + ';';\n                                if (style.indexOf('g') !== -1) {\n                                    style_str += 'text-shadow:0 0 5px ' + color + ';';\n                                }\n                            }\n                            if ($.terminal.valid_color(background)) {\n                                style_str += 'background-color:' + background;\n                            }\n                            var data;\n                            if (data_text === '') {\n                                data = text;\n                            } else {\n                                data = data_text.replace(/&#93;/g, ']')\n                                    .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n                            }\n                            var extra = extra_css(text, options);\n                            if (extra) {\n                                text = wide_characters(text, options);\n                                style_str += extra;\n                            }\n                            var result;\n                            if (style.indexOf('!') !== -1) {\n                                if (data.match(email_re)) {\n                                    result = '<a href=\"mailto:' + data + '\"';\n                                } else {\n                                    if (!settings.anyLinks &&\n                                        !data.match(/^(https?|ftp):\\/\\//)) {\n                                        data = '';\n                                    }\n                                    result = '<a target=\"_blank\" href=\"' + data + '\"';\n                                    var rel = [\"noopener\"];\n                                    if (settings.linksNoReferrer) {\n                                        rel.unshift(\"noreferrer\");\n                                    }\n                                    if (settings.linksNoFollow) {\n                                        rel.unshift(\"nofollow\");\n                                    }\n                                    result += ' rel=\"' + rel.join(' ') + '\"';\n                                }\n                                // make focus to terminal textarea that will enable\n                                // terminal when pressing tab and terminal is disabled\n                                result += ' tabindex=\"1000\"';\n                            } else {\n                                result = '<span';\n                            }\n                            if (style_str !== '') {\n                                result += ' style=\"' + style_str + '\"';\n                            }\n                            if (_class !== '') {\n                                result += ' class=\"' + _class + '\"';\n                            }\n                            if (style.indexOf('!') !== -1) {\n                                result += '>' + text + '</a>';\n                            } else {\n                                result += ' data-text=\"' +\n                                    data.replace(/\"/g, '&quote;') + '\">' +\n                                    text + '</span>';\n                            }\n                            return result;\n                        });\n                    } else {\n                        text = safe_text(text);\n                        var extra = extra_css(text, options);\n                        if (extra.length) {\n                            text = wide_characters(text, options);\n                            return '<span style=\"' + extra + '\">' + text + '</span>';\n                        } else {\n                            return '<span>' + text + '</span>';\n                        }\n                    }\n                }).join('');\n                return str.replace(/<span><br\\s*\\/?><\\/span>/gi, '<br/>');\n            } else {\n                return '';\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace brackets with html entities\n        // ---------------------------------------------------------------------\n        escape_brackets: function escape_brackets(string) {\n            return string.replace(/\\[/g, '&#91;').replace(/\\]/g, '&#93;');\n        },\n        // ---------------------------------------------------------------------\n        // :: complmentary function\n        // ---------------------------------------------------------------------\n        unescape_brackets: function unescape_brackets(string) {\n            return string.replace(/&#91;/g, '[').replace(/&#93;/g, ']');\n        },\n        // ---------------------------------------------------------------------\n        // :: return number of characters without formatting\n        // ---------------------------------------------------------------------\n        length: function(string) {\n            return $.terminal.split_characters(text(string)).length;\n        },\n        // ---------------------------------------------------------------------\n        // :: split characters handling emoji, surogate pairs and combine chars\n        // ---------------------------------------------------------------------\n        split_characters: function split_characters(string) {\n            var result = [];\n            while (string.length) {\n                var chr = get_next_character(string);\n                string = string.substring(chr.length);\n                result.push(chr);\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: return string where array items are in columns padded spaces\n        // ---------------------------------------------------------------------\n        columns: function(array, cols, space) {\n            var no_formatting = array.map(function(string) {\n                return $.terminal.strip(string);\n            });\n            var lengths = no_formatting.map(function(string) {\n                return strlen(string);\n            });\n            if (typeof space === 'undefined') {\n                space = 4;\n            }\n            var length = Math.max.apply(null, lengths) + space;\n            // we need value - 1 because index starts from 0\n            var column_limit = Math.floor(cols / length) - 1;\n            if (column_limit < 1) {\n                return array.join('\\n');\n            }\n            var lines = [];\n            for (var i = 0, len = array.length; i < len; i += column_limit) {\n                var line = array.slice(i, i + column_limit);\n                var last = line.pop();\n                lines.push(line.reduce(function(acc, string) {\n                    var stripped = $.terminal.strip(string);\n                    var pad = new Array(length - stripped.length + 1).join(' ');\n                    acc.push(string + pad);\n                    return acc;\n                }, []).join('') + last);\n            }\n            return lines.join('\\n');\n        },\n        // ---------------------------------------------------------------------\n        // :: Remove formatting from text\n        // ---------------------------------------------------------------------\n        strip: function strip(str) {\n            str = str.replace(format_parts_re, '$6');\n            return str.replace(/\\\\([[\\]])/g, function(whole, bracket) {\n                return bracket;\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Return active terminal\n        // ---------------------------------------------------------------------\n        active: function active() {\n            return terminals.front();\n        },\n        // ---------------------------------------------------------------------\n        // :: Implmentation detail id is always length of terminals Cycle\n        // ---------------------------------------------------------------------\n        last_id: function last_id() {\n            var len = terminals.length();\n            return len - 1;\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that works with strings like 'asd' 'asd\\' asd' \"asd asd\"\n        // :: asd\\ 123 -n -b / [^ ]+ / /\\s+/ asd\\ a it creates a regex and\n        // :: numbers and replaces escape characters in double quotes\n        // :: if strict is set to false it only strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        parse_argument: function parse_argument(arg, strict) {\n            function parse_string(string) {\n                // split string to string literals and non-strings\n                return string.split(string_re).map(function(string) {\n                    // remove quotes if before are even number of slashes\n                    // we don't remove slases becuase they are handled by JSON.parse\n                    if (string.match(/^['\"]/)) {\n                        // fixing regex to match empty string is not worth it\n                        if (string === '\"\"' || string === \"''\") {\n                            return '';\n                        }\n                        var quote = string[0];\n                        var re = new RegExp(\"(^|(?:\\\\\\\\(?:\\\\\\\\)*)?)\" + quote, \"g\");\n                        string = string.replace(re, \"$1\");\n                    }\n                    string = '\"' + string + '\"';\n                    // use build in function to parse rest of escaped characters\n                    return JSON.parse(string);\n                }).join('');\n            }\n            if (strict === false) {\n                if (arg[0] === \"'\" && arg[arg.length - 1] === \"'\") {\n                    return arg.replace(/^'|'$/g, '');\n                } else if (arg[0] === '\"' && arg[arg.length - 1] === '\"') {\n                    return arg.replace(/^\"|\"$/g, '').replace(/\\\\([\" ])/g, '$1');\n                } else if (arg.match(/\\/.*\\/[gimy]*$/)) {\n                    return arg;\n                } else if (arg.match(/['\"]]/)) {\n                    // part of arg is in quote\n                    return parse_string(arg);\n                } else {\n                    return arg.replace(/\\\\ /g, ' ');\n                }\n            }\n            var regex = arg.match(re_re);\n            if (regex) {\n                return new RegExp(regex[1], regex[2]);\n            } else if (arg.match(/['\"]/)) {\n                return parse_string(arg);\n            } else if (arg.match(/^-?[0-9]+$/)) {\n                return parseInt(arg, 10);\n            } else if (arg.match(float_re)) {\n                return parseFloat(arg);\n            } else {\n                return arg.replace(/\\\\(['\"() ])/g, '$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function split and parse arguments\n        // ---------------------------------------------------------------------\n        parse_arguments: function parse_arguments(string) {\n            return $.map(string.match(command_re) || [], $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Function split and strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        split_arguments: function split_arguments(string) {\n            return $.map(string.match(command_re) || [], function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that returns an object {name,args}. Arguments are parsed\n        // :: using the function parse_arguments\n        // ---------------------------------------------------------------------\n        parse_command: function parse_command(string) {\n            return process_command(string, $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Same as parse_command but arguments are parsed using split_arguments\n        // ---------------------------------------------------------------------\n        split_command: function split_command(string) {\n            return process_command(string, function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :; function that parse arguments like yargs library\n        // ---------------------------------------------------------------------\n        parse_options: function parse_options(arg, options) {\n            var settings = $.extend({}, {\n                boolean: []\n            }, options);\n            if (typeof arg === 'string') {\n                return parse_options($.terminal.split_arguments(arg), options);\n            }\n            var result = {\n                _: []\n            };\n            function token(value) {\n                this.value = value;\n            }\n            var rest = arg.reduce(function(acc, arg) {\n                if (typeof arg !== 'string') {\n                    arg = String(arg);\n                }\n                if (arg.match(/^-/) && acc instanceof token) {\n                    result[acc.value] = true;\n                }\n                if (arg.match(/^--/)) {\n                    var name = arg.replace(/^--/, '');\n                    if (settings.boolean.indexOf(name) === -1) {\n                        return new token(name);\n                    } else {\n                        result[name] = true;\n                    }\n                } else if (arg.match(/^-/)) {\n                    var single = arg.replace(/^-/, '').split('');\n                    if (settings.boolean.indexOf(single.slice(-1)[0]) === -1) {\n                        var last = single.pop();\n                    }\n                    single.forEach(function(single) {\n                        result[single] = true;\n                    });\n                    if (last) {\n                        return new token(last);\n                    }\n                } else if (acc instanceof token) {\n                    result[acc.value] = arg;\n                } else if (arg) {\n                    result._.push(arg);\n                }\n                return null;\n            }, null);\n            if (rest instanceof token) {\n                result[rest.value] = true;\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: function executed for each text inside [{ .... }]\n        // ---------------------------------------------------------------------\n        extended_command: function extended_command(term, string, options) {\n            var settings = $.extend({\n                invokeMethods: false\n            }, options);\n            try {\n                change_hash = false;\n                var m = string.match(extended_command_re);\n                if (m) {\n                    if (!settings.invokeMethods) {\n                        warn('To invoke terminal or cmd methods you need to enable ' +\n                             'invokeMethods option');\n                        return;\n                    }\n                    string = m[1];\n                    var obj = m[2] === 'terminal' ? term : term.cmd();\n                    var fn = m[3];\n                    try {\n                        var args = eval('[' + m[4] + ']');\n                        if (!obj[fn]) {\n                            term.error('Unknow function ' + fn);\n                        } else {\n                            obj[fn].apply(term, args);\n                        }\n                    } catch (e) {\n                        term.error('Invalid invocation in ' +\n                                   $.terminal.escape_brackets(string));\n                    }\n                } else {\n                    term.exec(string, true).done(function() {\n                        change_hash = true;\n                    });\n                }\n            } catch (e) {\n                // error is process in exec\n            }\n        },\n        // ---------------------------------------------------------------------\n        formatter: new (function() {\n            try {\n                this[Symbol.split] = function(string) {\n                    return $.terminal.format_split(string);\n                };\n                this[Symbol.match] = function(string) {\n                    return string.match(format_re);\n                };\n                this[Symbol.replace] = function(string, replacer) {\n                    return string.replace(format_parts_re, replacer);\n                };\n                this[Symbol.search] = function(string) {\n                    return string.search(format_re);\n                };\n            } catch (e) {\n            }\n        })(),\n        // ---------------------------------------------------------------------\n        // :: helper function that add formatter before nested_formatting\n        // ---------------------------------------------------------------------\n        new_formatter: function(formatter) {\n            var formatters = $.terminal.defaults.formatters;\n            for (var i = 0; i < formatters.length; ++i) {\n                if (formatters[i] === $.terminal.nested_formatting) {\n                    formatters.splice(i, 0, formatter);\n                    return;\n                }\n            }\n            formatters.push(formatter);\n        }\n    };\n    // -------------------------------------------------------------------------\n    $.terminal.Exception = function Terminal_Exception(type, message, stack) {\n        if (arguments.length === 1) {\n            this.message = arguments[0];\n            this.type = 'TERMINAL';\n        } else {\n            this.type = type;\n            this.message = message;\n            if (stack) {\n                this.stack = stack;\n            }\n        }\n    };\n    $.terminal.Exception.prototype = new Error();\n    // -----------------------------------------------------------------------\n    // Helper plugins and functions\n    // -----------------------------------------------------------------------\n    $.fn.visible = function() {\n        return this.css('visibility', 'visible');\n    };\n    $.fn.hidden = function() {\n        return this.css('visibility', 'hidden');\n    };\n    // -----------------------------------------------------------------------\n    var warnings = [];\n    function warn(msg) {\n        msg = '[jQuery Terminal] ' + msg;\n        if (warnings.indexOf(msg) === -1) {\n            warnings.push(msg);\n            /* eslint-disable */\n            if (console) {\n                if (console.warn) {\n                    console.warn(msg);\n                } else if (console.log) {\n                    console.log(msg);\n                }\n                /* eslint-enable */\n            } else {\n                // prevent catching in outer try..catch\n                setTimeout(function() {\n                    throw new Error('WARN: ' + msg);\n                }, 0);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // JSON-RPC CALL\n    // -----------------------------------------------------------------------\n    var ids = {}; // list of url based ids of JSON-RPC\n    $.jrpc = function(url, method, params, success, error) {\n        var deferred = new $.Deferred();\n        var options;\n        if ($.isPlainObject(url)) {\n            options = url;\n        } else {\n            options = {\n                url: url,\n                method: method,\n                params: params,\n                success: success,\n                error: error\n            };\n        }\n        function validJSONRPC(response) {\n            return $.isNumeric(response.id) &&\n                (typeof response.result !== 'undefined' ||\n                 typeof response.error !== 'undefined');\n        }\n        ids[options.url] = ids[options.url] || 0;\n        var request = {\n            'jsonrpc': '2.0',\n            'method': options.method,\n            'params': options.params,\n            'id': ++ids[options.url]\n        };\n        $.ajax({\n            url: options.url,\n            beforeSend: function beforeSend(jxhr, settings) {\n                if (is_function(options.request)) {\n                    options.request(jxhr, request);\n                }\n                settings.data = JSON.stringify(request);\n            },\n            success: function success(response, status, jqXHR) {\n                var content_type = jqXHR.getResponseHeader('Content-Type');\n                if (!content_type.match(/(application|text)\\/json/)) {\n                    warn('Response Content-Type is neither application/json' +\n                         ' nor text/json');\n                }\n                var json;\n                try {\n                    json = JSON.parse(response);\n                } catch (e) {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON', e);\n                    } else {\n                        throw new $.terminal.Exception('JSON', 'Invalid JSON', e.stack);\n                    }\n                    deferred.reject({message: 'Invalid JSON', response: response});\n                    return;\n                }\n                if (is_function(options.response)) {\n                    options.response(jqXHR, json);\n                }\n                if (validJSONRPC(json) || options.method === 'system.describe') {\n                    // don't catch errors in success callback\n                    if (options.success) {\n                        options.success(json, status, jqXHR);\n                    }\n                    deferred.resolve(json);\n                } else {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON-RPC');\n                    }\n                    deferred.reject({message: 'Invalid JSON-RPC', response: response});\n                }\n            },\n            error: options.error,\n            contentType: 'application/json',\n            dataType: 'text',\n            async: true,\n            cache: false,\n            // timeout: 1,\n            type: 'POST'\n        });\n        return deferred.promise();\n    };\n\n    // -----------------------------------------------------------------------\n    /*\n    function is_scrolled_into_view(elem) {\n        var docViewTop = $(window).scrollTop();\n        var docViewBottom = docViewTop + $(window).height();\n\n        var elemTop = $(elem).offset().top;\n        var elemBottom = elemTop + $(elem).height();\n\n        return ((elemBottom >= docViewTop) && (elemTop <= docViewBottom));\n    }\n    */\n    // -----------------------------------------------------------------------\n    // :: Create fake terminal to calcualte the dimention of one character\n    // :: this will make terminal work if terminal div is not added to the\n    // :: DOM at init like with:\n    // :: $('<div/>').terminal().echo('foo bar').appendTo('body');\n    // -----------------------------------------------------------------------\n    function get_char_size(div) {\n        var temp = $('<div class=\"terminal temp\"><div class=\"terminal-output\">' +\n                     '<div><div class=\"line\" style=\"float: left\"><span>&nbsp;</span>' +\n                     '</div></div></div></div>').appendTo('body');\n        temp.addClass(div.attr('class'));\n        if (div) {\n            var style = div.attr('style');\n            if (style) {\n                style = style.split(/\\s*;\\s*/).filter(function(s) {\n                    return !s.match(/display\\s*:\\s*none/i);\n                }).join(';');\n                temp.attr('style', style);\n            }\n        }\n        var rect = temp.find('.line')[0].getBoundingClientRect();\n        var result = {\n            width: rect.width,\n            height: rect.height\n        };\n        temp.remove();\n        return result;\n    }\n    // -----------------------------------------------------------------------\n    // :: calculate numbers of characters\n    // -----------------------------------------------------------------------\n    function get_num_chars(terminal, char_size) {\n        var width = terminal.find('.terminal-fill').width();\n        var result = Math.floor(width / char_size.width);\n        // random number to not get NaN in node.js but big enough to\n        // not wrap exception\n        return result || 1000;\n    }\n    // -----------------------------------------------------------------------\n    // :: Calculate number of lines that fit without scroll\n    // -----------------------------------------------------------------------\n    function get_num_rows(terminal, char_size) {\n        return Math.floor(terminal.find('.terminal-fill').height() / char_size.height);\n    }\n    // -----------------------------------------------------------------------\n    function all(array, fn) {\n        var same = array.filter(function(item) {\n            return item[fn]() === item;\n        });\n        return same.length === array.length;\n    }\n    // -----------------------------------------------------------------------\n    function string_case(string) {\n        var array = string.split('');\n        if (all(array, 'toLowerCase')) {\n            return 'lower';\n        } else if (all(array, 'toUpperCase')) {\n            return 'upper';\n        } else {\n            return 'mixed';\n        }\n    }\n    // -----------------------------------------------------------------------\n    function same_case(string) {\n        return string_case(string) !== 'mixed';\n    }\n    // -----------------------------------------------------------------------\n    // fix for jQuery bug\n    function is_function(object) {\n        return get_type(object) === 'function';\n    }\n    // -----------------------------------------------------------------------\n    function get_type(object) {\n        return typeof object === 'function' ? 'function' : $.type(object);\n    }\n    // -----------------------------------------------------------------------\n    // :: TERMINAL PLUGIN CODE\n    // -----------------------------------------------------------------------\n    var version_set = !$.terminal.version.match(/^\\{\\{/);\n    var copyright = 'Copyright (c) 2011-2018 Jakub Jankiewicz <http://jcubic' +\n        '.pl/me>';\n    var version_string = version_set ? ' v. ' + $.terminal.version : ' ';\n    // regex is for placing version string aligned to the right\n    var reg = new RegExp(' {' + version_string.length + '}$');\n    var name_ver = 'jQuery Terminal Emulator' +\n        (version_set ? version_string : '');\n    // -----------------------------------------------------------------------\n    // :: Terminal Signatures\n    // -----------------------------------------------------------------------\n    var signatures = [\n        ['jQuery Terminal', '(c) 2011-2018 jcubic'],\n        [name_ver, copyright.replace(/^Copyright | *<.*>/g, '')],\n        [name_ver, copyright.replace(/^Copyright /, '')],\n        [\n            '      _______                 ________                        __',\n            '     / / _  /_ ____________ _/__  ___/______________  _____  / /',\n            ' __ / / // / // / _  / _/ // / / / _  / _/     / /  \\\\/ / _ \\\\/ /',\n            '/  / / // / // / ___/ // // / / / ___/ // / / / / /\\\\  / // / /__',\n            '\\\\___/____ \\\\\\\\__/____/_/ \\\\__ / /_/____/_//_/_/_/_/_/  \\\\/\\\\__\\\\_\\\\___/',\n            '         \\\\/          /____/                                   '\n                .replace(reg, ' ') + version_string,\n            copyright\n        ],\n        [\n            '      __ _____                     ________                            ' +\n                '  __',\n            '     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ ' +\n                ' / /',\n            ' __ / // // // // // _  // _// // / / // _  // _//     // //  \\\\/ // _ ' +\n                '\\\\/ /',\n            '/  / // // // // // ___// / / // / / // ___// / / / / // // /\\\\  // // ' +\n                '/ /__',\n            '\\\\___//____ \\\\\\\\___//____//_/ _\\\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\\\' +\n                '__\\\\_\\\\___/',\n            ('          \\\\/              /____/                                     ' +\n             '     ').replace(reg, '') + version_string,\n            copyright\n        ]\n    ];\n    // -----------------------------------------------------------------------\n    // :: Default options\n    // -----------------------------------------------------------------------\n    $.terminal.nested_formatting.__meta__ = true;\n    // nested formatting will always return different length so we silent the warning\n    $.terminal.nested_formatting.__no_warn__ = true;\n    $.terminal.defaults = {\n        prompt: '> ',\n        history: true,\n        exit: true,\n        clear: true,\n        enabled: true,\n        maskChar: '*',\n        wrap: true,\n        checkArity: true,\n        raw: false,\n        invokeMethods: false,\n        exceptionHandler: null,\n        pauseEvents: true,\n        softPause: false,\n        memory: false,\n        cancelableAjax: true,\n        processArguments: true,\n        linksNoReferrer: false,\n        anyLinks: false,\n        linksNoFollow: false,\n        processRPCResponse: null,\n        completionEscape: true,\n        convertLinks: true,\n        extra: {},\n        tabs: 4,\n        historySize: 60,\n        scrollObject: null,\n        historyState: false,\n        importHistory: false,\n        historyFilter: null,\n        echoCommand: true,\n        scrollOnEcho: true,\n        login: null,\n        outputLimit: -1,\n        formatters: [$.terminal.nested_formatting],\n        onAjaxError: null,\n        pasteImage: true,\n        scrollBottomOffset: 20,\n        wordAutocomplete: true,\n        caseSensitiveAutocomplete: true,\n        caseSensitiveSearch: true,\n        clickTimeout: 200,\n        holdTimeout: 400,\n        holdRepeatTimeout: 200,\n        request: $.noop,\n        response: $.noop,\n        describe: 'procs',\n        onRPCError: null,\n        doubleTab: null,\n        completion: false,\n        onInit: $.noop,\n        onClear: $.noop,\n        onBlur: $.noop,\n        onFocus: $.noop,\n        onTerminalChange: $.noop,\n        onExit: $.noop,\n        onPush: $.noop,\n        onPop: $.noop,\n        keypress: $.noop,\n        keydown: $.noop,\n        onAfterRedraw: $.noop,\n        onEchoCommand: $.noop,\n        onFlush: $.noop,\n        strings: {\n            comletionParameters: 'From version 1.0.0 completion function need to' +\n                ' have two arguments',\n            wrongPasswordTryAgain: 'Wrong password try again!',\n            wrongPassword: 'Wrong password!',\n            ajaxAbortError: 'Error while aborting ajax call!',\n            wrongArity: \"Wrong number of arguments. Function '%s' expects %s got\" +\n                ' %s!',\n            commandNotFound: \"Command '%s' Not Found!\",\n            oneRPCWithIgnore: 'You can use only one rpc with describe == false ' +\n                'or rpc without system.describe',\n            oneInterpreterFunction: \"You can't use more than one function (rpc \" +\n                'without system.describe or with option describe == false count' +\n                 's as one)',\n            loginFunctionMissing: \"You didn't specify a login function\",\n            noTokenError: 'Access denied (no token)',\n            serverResponse: 'Server responded',\n            wrongGreetings: 'Wrong value of greetings parameter',\n            notWhileLogin: \"You can't call `%s' function while in login\",\n            loginIsNotAFunction: 'Authenticate must be a function',\n            canExitError: \"You can't exit from main interpreter\",\n            invalidCompletion: 'Invalid completion',\n            invalidSelector: 'Sorry, but terminal said that you use invalid ' +\n                'selector!',\n            invalidTerminalId: 'Invalid Terminal ID',\n            login: 'login',\n            password: 'password',\n            recursiveCall: 'Recursive call detected, skip',\n            notAString: '%s function: argument is not a string',\n            redrawError: 'Internal error, wrong position in cmd redraw',\n            invalidStrings: 'Command %s have unclosed strings',\n            defunctTerminal: \"You can't call method on terminal that was destroyed\"\n        }\n    };\n    // -------------------------------------------------------------------------\n    // :: All terminal globals\n    // -------------------------------------------------------------------------\n    var requests = []; // for canceling on CTRL+D\n    var terminals = new Cycle(); // list of terminals global in this scope\n    // state for all terminals, terminals can't have own array fo state because\n    // there is only one popstate event\n    var save_state = []; // hold objects returned by export_view by history API\n    var hash_commands;\n    var change_hash = false; // don't change hash on Init\n    var fire_hash_change = true;\n    var first_instance = true; // used by history state\n    $.fn.terminal = function(init_interpreter, options) {\n        function StorageHelper(memory) {\n            if (memory) {\n                this.storage = {};\n            }\n            this.set = function(key, value) {\n                if (memory) {\n                    this.storage[key] = value;\n                } else {\n                    $.Storage.set(key, value);\n                }\n            };\n            this.get = function(key) {\n                if (memory) {\n                    return this.storage[key];\n                } else {\n                    return $.Storage.get(key);\n                }\n            };\n            this.remove = function(key) {\n                if (memory) {\n                    delete this.storage[key];\n                } else {\n                    $.Storage.remove(key);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function\n        // ---------------------------------------------------------------------\n        function get_processed_command(command) {\n            if ($.terminal.unclosed_strings(command)) {\n                var string = $.terminal.escape_brackets(command);\n                var message = sprintf(strings().invalidStrings, \"`\" + string + \"`\");\n                throw new $.terminal.Exception(message);\n            } else if (is_function(settings.processArguments)) {\n                return process_command(command, settings.processArguments);\n            } else if (settings.processArguments) {\n                return $.terminal.parse_command(command);\n            } else {\n                return $.terminal.split_command(command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display object on terminal\n        // ---------------------------------------------------------------------\n        function display_object(object) {\n            if (typeof object === 'string') {\n                self.echo(object);\n            } else if (object instanceof Array) {\n                self.echo($.map(object, function(object) {\n                    return JSON.stringify(object);\n                }).join(' '));\n            } else if (typeof object === 'object') {\n                self.echo(JSON.stringify(object));\n            } else {\n                self.echo(object);\n            }\n        }\n        // Display line code in the file if line numbers are present\n        function print_line(url_spec) {\n            var re = /(.*):([0-9]+):([0-9]+)$/;\n            // google chrome have line and column after filename\n            var m = url_spec.match(re);\n            if (m) {\n                // TODO: do we need to call pause/resume or return promise?\n                self.pause(settings.softPause);\n                $.get(m[1], function(response) {\n                    var file = m[1];\n                    self.echo('[[b;white;]' + file + ']');\n                    var code = response.split('\\n');\n                    var n = +m[2] - 1;\n                    self.echo(code.slice(n - 2, n + 3).map(function(line, i) {\n                        if (i === 2) {\n                            line = '[[;#f00;]' +\n                                $.terminal.escape_brackets(line) + ']';\n                        }\n                        return '[' + (n + i - 1) + ']: ' + line;\n                    }).join('\\n')).resume();\n                }, 'text');\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function display_json_rpc_error(error) {\n            if (is_function(settings.onRPCError)) {\n                settings.onRPCError.call(self, error);\n            } else {\n                self.error('&#91;RPC&#93; ' + error.message);\n                if (error.error && error.error.message) {\n                    error = error.error;\n                    // more detailed error message\n                    var msg = '\\t' + error.message;\n                    if (error.file) {\n                        msg += ' in file \"' + error.file.replace(/.*\\//, '') + '\"';\n                    }\n                    if (error.at) {\n                        msg += ' at line ' + error.at;\n                    }\n                    self.error(msg);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from url string\n        // ---------------------------------------------------------------------\n        function make_basic_json_rpc(url, auth) {\n            var interpreter = function(method, params) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: params,\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(json) {\n                        if (json.error) {\n                            display_json_rpc_error(json.error);\n                        } else if (is_function(settings.processRPCResponse)) {\n                            settings.processRPCResponse.call(self, json.result, self);\n                        } else {\n                            display_object(json.result);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // this is the interpreter function\n            return function(command, terminal) {\n                if (command === '') {\n                    return;\n                }\n                try {\n                    command = get_processed_command(command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    display_exception(e, 'TERMINAL (get_processed_command)');\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                if (!auth || command.name === 'help') {\n                    // allows to call help without a token\n                    interpreter(command.name, command.args);\n                } else {\n                    var token = terminal.token();\n                    if (token) {\n                        interpreter(command.name, [token].concat(command.args));\n                    } else {\n                        // should never happen\n                        terminal.error('&#91;AUTH&#93; ' + strings().noTokenError);\n                    }\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from Object. If the value is object\n        // :: it will create nested interpreters\n        // ---------------------------------------------------------------------\n        function make_object_interpreter(object, arity, login, fallback) {\n            // function that maps commands to object methods\n            // it keeps terminal context\n            return function(user_command, terminal) {\n                if (user_command === '') {\n                    return;\n                }\n                // command = split_command_line(command);\n                var command;\n                try {\n                    command = get_processed_command(user_command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    if (is_function(settings.exception)) {\n                        settings.exception(e, self);\n                    } else {\n                        self.error(e.toString());\n                    }\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                /*\n                if (login) {\n                    var token = self.token(true);\n                    if (token) {\n                        command.args = [token].concat(command.args);\n                    } else {\n                        terminal.error('&#91;AUTH&#93; ' + strings.noTokenError);\n                        return;\n                    }\n                }*/\n                var val = object[command.name];\n                var type = get_type(val);\n                if (type === 'function') {\n                    if (arity && val.length !== command.args.length) {\n                        self.error(\n                            '&#91;Arity&#93; ' +\n                                sprintf(\n                                    strings().wrongArity,\n                                    command.name,\n                                    val.length,\n                                    command.args.length\n                                )\n                        );\n                    } else {\n                        return val.apply(self, command.args);\n                    }\n                } else if (type === 'object' || type === 'string') {\n                    var commands = [];\n                    if (type === 'object') {\n                        commands = Object.keys(val);\n                        val = make_object_interpreter(\n                            val,\n                            arity,\n                            login\n                        );\n                    }\n                    terminal.push(val, {\n                        prompt: command.name + '> ',\n                        name: command.name,\n                        completion: type === 'object' ? commands : undefined\n                    });\n                } else if (is_function(fallback)) {\n                    fallback(user_command, self);\n                } else if (is_function(settings.onCommandNotFound)) {\n                    settings.onCommandNotFound.call(self, user_command, self);\n                } else {\n                    terminal.error(sprintf(strings().commandNotFound, command.name));\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        function ajax_error(xhr, status, error) {\n            self.resume(); // onAjaxError can use pause/resume call it first\n            if (is_function(settings.onAjaxError)) {\n                settings.onAjaxError.call(self, xhr, status, error);\n            } else if (status !== 'abort') {\n                self.error('&#91;AJAX&#93; ' + status + ' - ' +\n                           strings().serverResponse + ':\\n' +\n                           $.terminal.escape_brackets(xhr.responseText));\n            }\n        }\n        // ---------------------------------------------------------------------\n        function make_json_rpc_object(url, auth, success) {\n            function jrpc_success(json) {\n                if (json.error) {\n                    display_json_rpc_error(json.error);\n                } else if (is_function(settings.processRPCResponse)) {\n                    settings.processRPCResponse.call(self, json.result, self);\n                } else {\n                    display_object(json.result);\n                }\n                self.resume();\n            }\n            function jrpc_request(jxhr, request) {\n                try {\n                    settings.request.call(self, jxhr, request, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function jrpc_response(jxhr, response) {\n                try {\n                    settings.response.call(self, jxhr, response, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function response(response) {\n                var procs = response;\n                // we check if it's false before we call this function but\n                // it don't hurt to be explicit here\n                if (settings.describe !== '') {\n                    settings.describe.split('.').forEach(function(field) {\n                        procs = procs[field];\n                    });\n                }\n                if (procs && procs.length) {\n                    var interpreter_object = {};\n                    $.each(procs, function(_, proc) {\n                        if ($.isPlainObject(proc) && typeof proc.name === 'string') {\n                            interpreter_object[proc.name] = function() {\n                                var append = auth && proc.name !== 'help';\n                                var args = Array.prototype.slice.call(arguments);\n                                var args_len = args.length + (append ? 1 : 0);\n                                if (settings.checkArity && proc.params &&\n                                    proc.params.length !== args_len) {\n                                    self.error(\n                                        '&#91;Arity&#93; ' +\n                                            sprintf(\n                                                strings().wrongArity,\n                                                proc.name,\n                                                proc.params.length,\n                                                args_len\n                                            )\n                                    );\n                                } else {\n                                    self.pause(settings.softPause);\n                                    if (append) {\n                                        var token = self.token(true);\n                                        if (token) {\n                                            args = [token].concat(args);\n                                        } else {\n                                            self.error('&#91;AUTH&#93; ' +\n                                                       strings().noTokenError);\n                                        }\n                                    }\n                                    $.jrpc({\n                                        url: url,\n                                        method: proc.name,\n                                        params: args,\n                                        request: jrpc_request,\n                                        response: jrpc_response,\n                                        success: jrpc_success,\n                                        error: ajax_error\n                                    });\n                                }\n                            };\n                        }\n                    });\n                    var login = typeof auth === 'string' ? auth : 'login';\n                    interpreter_object.help = interpreter_object.help || function(fn) {\n                        if (typeof fn === 'undefined') {\n                            var names = response.procs.map(function(proc) {\n                                return proc.name;\n                            }).join(', ') + ', help';\n                            self.echo('Available commands: ' + names);\n                        } else {\n                            var found = false;\n                            $.each(procs, function(_, proc) {\n                                if (proc.name === fn) {\n                                    found = true;\n                                    var msg = '';\n                                    msg += '[[bu;;]' + proc.name + ']';\n                                    if (proc.params) {\n                                        var params = proc.params;\n                                        if (auth && proc.name !== login) {\n                                            params = params.slice(1);\n                                        }\n                                        msg += ' ' + params.join(' ');\n                                    }\n                                    if (proc.help) {\n                                        msg += '\\n' + proc.help;\n                                    }\n                                    self.echo(msg);\n                                    return false;\n                                }\n                            });\n                            if (!found) {\n                                if (fn === 'help') {\n                                    self.echo('[[bu;;]help] [method]\\ndisplay help ' +\n                                              'for the method or list of methods if not' +\n                                              ' specified');\n                                } else {\n                                    var msg = 'Method `' + fn + \"' not found \";\n                                    self.error(msg);\n                                }\n                            }\n                        }\n                    };\n                    success(interpreter_object);\n                } else {\n                    success(null);\n                }\n            }\n            return $.jrpc({\n                url: url,\n                method: 'system.describe',\n                params: [],\n                success: response,\n                request: jrpc_request,\n                response: jrpc_response,\n                error: function error() {\n                    success(null);\n                }\n            });\n        }\n        // ---------------------------------------------------------------------\n        function make_interpreter(user_intrp, login, finalize) {\n            finalize = finalize || $.noop;\n            var type = get_type(user_intrp);\n            var object;\n            var result = {};\n            var rpc_count = 0; // only one rpc can be use for array\n            var fn_interpreter;\n            if (type === 'array') {\n                object = {};\n                // recur will be called when previous acync call is finished\n                (function recur(interpreters, success) {\n                    if (interpreters.length) {\n                        var first = interpreters[0];\n                        var rest = interpreters.slice(1);\n                        var type = get_type(first);\n                        if (type === 'string') {\n                            self.pause(settings.softPause);\n                            if (settings.describe === false) {\n                                if (++rpc_count === 1) {\n                                    fn_interpreter = make_basic_json_rpc(first, login);\n                                } else {\n                                    self.error(strings().oneRPCWithIgnore);\n                                }\n                                recur(rest, success);\n                            } else {\n                                make_json_rpc_object(first, login, function(new_obj) {\n                                    if (new_obj) {\n                                        $.extend(object, new_obj);\n                                    } else if (++rpc_count === 1) {\n                                        fn_interpreter = make_basic_json_rpc(\n                                            first,\n                                            login\n                                        );\n                                    } else {\n                                        self.error(strings().oneRPCWithIgnore);\n                                    }\n                                    self.resume();\n                                    recur(rest, success);\n                                });\n                            }\n                        } else if (type === 'function') {\n                            if (fn_interpreter) {\n                                self.error(strings().oneInterpreterFunction);\n                            } else {\n                                fn_interpreter = first;\n                            }\n                            recur(rest, success);\n                        } else if (type === 'object') {\n                            $.extend(object, first);\n                            recur(rest, success);\n                        }\n                    } else {\n                        success();\n                    }\n                })(user_intrp, function() {\n                    finalize({\n                        interpreter: make_object_interpreter(\n                            object,\n                            false,\n                            login,\n                            fn_interpreter.bind(self)\n                        ),\n                        completion: Object.keys(object)\n                    });\n                });\n            } else if (type === 'string') {\n                if (settings.ignoreSystemDescribe) {\n                    object = {\n                        interpreter: make_basic_json_rpc(user_intrp, login)\n                    };\n                    if ($.isArray(settings.completion)) {\n                        object.completion = settings.completion;\n                    }\n                    finalize(object);\n                } else {\n                    self.pause(settings.softPause);\n                    make_json_rpc_object(user_intrp, login, function(object) {\n                        if (object) {\n                            result.interpreter = make_object_interpreter(\n                                object,\n                                false,\n                                login\n                            );\n                            result.completion = Object.keys(object);\n                        } else {\n                            // no procs in system.describe\n                            result.interpreter = make_basic_json_rpc(user_intrp, login);\n                        }\n                        finalize(result);\n                        self.resume();\n                    });\n                }\n            } else if (type === 'object') {\n                finalize({\n                    interpreter: make_object_interpreter(\n                        user_intrp,\n                        settings.checkArity,\n                        login\n                    ),\n                    completion: Object.keys(user_intrp)\n                });\n            } else {\n                // allow $('<div/>').terminal();\n                if (type === 'undefined') {\n                    user_intrp = $.noop;\n                } else if (type !== 'function') {\n                    var msg = type + ' is invalid interpreter value';\n                    throw new $.terminal.Exception(msg);\n                }\n                // single function don't need bind\n                finalize({\n                    interpreter: user_intrp,\n                    completion: settings.completion\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create JSON-RPC authentication function\n        // ---------------------------------------------------------------------\n        function make_json_rpc_login(url, login) {\n            var method = get_type(login) === 'boolean' ? 'login' : login;\n            return function(user, passwd, callback) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: [user, passwd],\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(response) {\n                        if (!response.error && response.result) {\n                            callback(response.result);\n                        } else {\n                            // null will trigger message that login fail\n                            callback(null);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // default name is login so you can pass true\n        }\n        // ---------------------------------------------------------------------\n        // :: display Exception on terminal\n        // ---------------------------------------------------------------------\n        function display_exception(e, label, silent) {\n            if (is_function(settings.exceptionHandler)) {\n                settings.exceptionHandler.call(self, e, label);\n            } else {\n                self.exception(e, label);\n                if (!silent) {\n                    setTimeout(function() {\n                        throw e;\n                    }, 0);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: validating if object is a string or a function, call that function\n        // :: and display the exeption if any\n        // ---------------------------------------------------------------------\n        function validate(label, object) {\n            try {\n                if (is_function(object)) {\n                    object.call(self, $.noop, self);\n                } else if (typeof object !== 'string') {\n                    var msg = label + ' must be string or function';\n                    throw msg;\n                }\n            } catch (e) {\n                display_exception(e, label.toUpperCase());\n                return false;\n            }\n            return true;\n        }\n        // ---------------------------------------------------------------------\n        // :: Draw line - can have line breaks and be longer than the width of\n        // :: the terminal, there are 2 options raw and finalize\n        // :: raw - will not encode the string and finalize if a function that\n        // :: will have div container of the line as first argument\n        // :: NOTE: it formats and appends lines to output_buffer. The actual\n        // :: append to terminal output happens in the flush function\n        // ---------------------------------------------------------------------\n        var output_buffer = [];\n        var NEW_LINE = 1;\n        function buffer_line(string, index, options) {\n            // urls should always have formatting to keep url if split\n            var i, len;\n            output_buffer.push(NEW_LINE);\n            if (string === '') {\n                // ignore empty string, it can happen if line was a function\n                // that returned empty string in this case whe need to add container\n                // because on update/resize it can return content\n            } else if (!options.raw) {\n                var format_options = {\n                    linksNoReferrer: settings.linksNoReferrer,\n                    linksNoFollow: settings.linksNoFollow,\n                    anyLinks: settings.anyLinks,\n                    char_width: char_size.width\n                };\n                var cols = self.cols();\n                if ((strlen(string) > cols ||\n                     string.match(/\\n/)) &&\n                    ((settings.wrap === true && options.wrap === undefined) ||\n                     settings.wrap === false && options.wrap === true)) {\n                    var words = options.keepWords;\n                    var array = $.terminal.split_equal(string, cols, words);\n                    for (i = 0, len = array.length; i < len; ++i) {\n                        if (array[i] === '' || array[i] === '\\r') {\n                            output_buffer.push('<span></span>');\n                        } else {\n                            output_buffer.push($.terminal.format(\n                                array[i],\n                                format_options\n                            ));\n                        }\n                    }\n                } else {\n                    string = $.terminal.normalize(string);\n                    string = $.terminal.format(string, format_options);\n                    string.split(/\\n/).forEach(function(string) {\n                        output_buffer.push(string);\n                    });\n                }\n            } else {\n                output_buffer.push(string);\n            }\n            output_buffer.push({\n                finalize: options.finalize,\n                index: index\n            });\n        }\n        // ---------------------------------------------------------------------\n        function process_line(line) {\n            // prevent exception in display exception\n            try {\n                var line_settings = $.extend({\n                    exec: true,\n                    raw: false,\n                    finalize: $.noop\n                }, line.options || {});\n                var string;\n                var arg = line.string;\n                var is_fn = is_function(arg);\n                if (is_fn) {\n                    arg = arg();\n                }\n                if (get_type(arg) !== 'string') {\n                    if (is_function(settings.parseObject)) {\n                        var ret = settings.parseObject(arg);\n                        if (get_type(ret) === 'string') {\n                            string = ret;\n                        }\n                    } else if (arg instanceof Array) {\n                        string = $.terminal.columns(arg, self.cols(), settings.tabs);\n                    } else {\n                        string = String(arg);\n                    }\n                } else {\n                    string = arg;\n                }\n                if (string !== '') {\n                    // string can be empty after removing extended commands\n                    if (string !== '') {\n                        if (!line_settings.raw) {\n                            if (settings.convertLinks) {\n                                string = string.replace(email_re, '[[!;;]$1]').\n                                    replace(url_nf_re, '[[!;;]$1]');\n                            }\n                            if (line_settings.formatters) {\n                                try {\n                                    string = $.terminal.apply_formatters(\n                                        string,\n                                        settings\n                                    );\n                                } catch (e) {\n                                    display_exception(e, 'FORMATTING');\n                                }\n                            }\n                            var parts = string.split(format_exec_re);\n                            string = $.map(parts, function(string) {\n                                if (string && string.match(format_exec_re) &&\n                                    !$.terminal.is_formatting(string)) {\n                                    // redraw should not execute commands and it have\n                                    // and lines variable have all extended commands\n                                    string = string.replace(/^\\[\\[|\\]\\]$/g, '');\n                                    if (line_settings.exec) {\n                                        var prev_cmd;\n                                        if (prev_command) {\n                                            prev_command = prev_command.command.trim();\n                                        }\n                                        if (prev_cmd === string.trim()) {\n                                            self.error(strings().recursiveCall);\n                                        } else {\n                                            $.terminal.extended_command(self, string, {\n                                                invokeMethods: settings.invokeMethods\n                                            });\n                                        }\n                                    }\n                                    return '';\n                                } else {\n                                    return string;\n                                }\n                            }).join('');\n                            if (string !== '') {\n                                string = crlf($.terminal.normalize(string));\n                                string = $.terminal.encode(string, {\n                                    tabs: settings.tabs\n                                });\n                            }\n                        }\n                        if (string !== '') {\n                            buffer_line(string, line.index, line_settings);\n                        }\n                    }\n                }\n                if (string === '' && is_fn) {\n                    buffer_line(string, line.index, line_settings);\n                }\n            } catch (e) {\n                output_buffer = [];\n                // don't display exception if exception throw in terminal\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL');\n                } else {\n                    alert_exception('[Internal Exception(process_line)]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Update terminal lines\n        // ---------------------------------------------------------------------\n        function redraw(options) {\n            options = $.extend({}, {\n                // should be used when single line is updated\n                update: false,\n                // should be used if you want to scroll to bottom after redraw\n                scroll: true\n            }, options || {});\n            if (!options.update) {\n                command_line.resize(num_chars);\n                // we don't want reflow while processing lines\n                var detached_output = output.empty().detach();\n            }\n            var lines_to_show = [];\n            // Dead code\n            if (settings.outputLimit >= 0) {\n                // flush will limit lines but if there is lot of\n                // lines we don't need to show them and then remove\n                // them from terminal\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                lines.forEach(function(line, index) {\n                    var string = line[0];\n                    var options = line[1];\n                    if (get_type(string) === 'function') {\n                        string = string();\n                    }\n                    if (get_type(string) !== 'string') {\n                        string = String(string);\n                    }\n                    lines_to_show.push({\n                        string: string,\n                        index: index,\n                        options: options\n                    });\n                });\n                lines_to_show = lines_to_show.slice(lines_to_show.length - limit - 1);\n            } else {\n                lines_to_show = lines.map(function(line, index) {\n                    return {\n                        string: line[0],\n                        index: index,\n                        options: line[1]\n                    };\n                });\n            }\n            try {\n                output_buffer = [];\n                $.each(lines_to_show, function(i, line) {\n                    process_line(line);\n                });\n                if (!options.update) {\n                    command_line.before(detached_output); // reinsert output\n                }\n                self.flush(options);\n                try {\n                    settings.onAfterRedraw.call(self, self);\n                } catch (e) {\n                    settings.onAfterRedraw = $.noop;\n                    display_exception(e, 'onAfterRedraw');\n                }\n            } catch (e) {\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL (redraw)');\n                } else {\n                    alert_exception('[redraw]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function limit output lines based on outputLimit option\n        // ---------------------------------------------------------------------\n        function limit_lines() {\n            if (settings.outputLimit >= 0) {\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                var $lines = output.find('> div > div');\n                if ($lines.length + 1 > limit) {\n                    var max = $lines.length - limit + 1;\n                    var for_remove = $lines.slice(0, max);\n                    // you can't get parent if you remove the\n                    // element so we first get the parent\n                    var parents = for_remove.parent();\n                    for_remove.remove();\n                    parents.each(function() {\n                        var $self = $(this);\n                        if ($self.is(':empty')) {\n                            // there can be divs inside parent that\n                            // was not removed\n                            $self.remove();\n                        }\n                    });\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display user greetings or terminal signature\n        // ---------------------------------------------------------------------\n        function show_greetings() {\n            if (settings.greetings === undefined) {\n                // signature have ascii art so it's not suite for screen readers\n                self.echo(self.signature, {finalize: a11y_hide, formatters: false});\n            } else if (settings.greetings) {\n                var type = typeof settings.greetings;\n                if (type === 'string') {\n                    self.echo(settings.greetings);\n                } else if (type === 'function') {\n                    try {\n                        settings.greetings.call(self, self.echo);\n                    } catch (e) {\n                        settings.greetings = null;\n                        display_exception(e, 'greetings');\n                    }\n                } else {\n                    self.error(strings().wrongGreetings);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display prompt and last command\n        // ---------------------------------------------------------------------\n        function echo_command(command) {\n            if (typeof command === 'undefined') {\n                command = self.get_command();\n            }\n            var prompt = command_line.prompt();\n            var mask = command_line.mask();\n            switch (typeof mask) {\n                case 'string':\n                    command = command.replace(/./g, mask);\n                    break;\n                case 'boolean':\n                    if (mask) {\n                        command = command.replace(/./g, settings.maskChar);\n                    } else {\n                        command = $.terminal.escape_formatting(command);\n                    }\n                    break;\n            }\n            var options = {\n                finalize: function finalize(div) {\n                    a11y_hide(div.addClass('command'));\n                    try {\n                        settings.onEchoCommand.call(self, div, command);\n                    } catch (e) {\n                        settings.onEchoCommand = $.noop;\n                        self.exception(e);\n                    }\n                }\n            };\n            if (is_function(prompt)) {\n                var ret = prompt(function(string) {\n                    self.echo(string + command, options);\n                });\n                if (ret && is_function(ret.then)) {\n                    ret.then(function(string) {\n                        if (typeof string === 'string') {\n                            self.echo(string + command, options);\n                        }\n                    });\n                }\n            } else {\n                self.echo(prompt + command, options);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function have_scrollbar() {\n            if (self.is('body')) {\n                // source: https://stackoverflow.com/a/6639405/387194\n                // from comment by Šime Vidas\n                return window.innerWidth - document.documentElement.clientWidth > 0;\n            }\n            return fill.outerWidth() !== self.outerWidth();\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function that restore state. Call import_view or exec\n        // ---------------------------------------------------------------------\n        function restore_state(spec) {\n            // spec [terminal_id, state_index, command]\n            var terminal = terminals.get()[spec[0]];\n            if (!terminal) {\n                throw new $.terminal.Exception(strings().invalidTerminalId);\n            }\n            var command_idx = spec[1];\n            if (save_state[command_idx]) { // state exists\n                terminal.import_view(save_state[command_idx]);\n            } else {\n                // restore state\n                change_hash = false;\n                var command = spec[2];\n                if (command) {\n                    terminal.exec(command).done(function() {\n                        change_hash = true;\n                        save_state[command_idx] = terminal.export_view();\n                    });\n                }\n            }\n            /*if (spec[3].length) {\n                restore_state(spec[3]);\n            }*/\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function maybe_update_hash() {\n            if (change_hash) {\n                fire_hash_change = false;\n                location.hash = '#' + JSON.stringify(hash_commands);\n                setTimeout(function() {\n                    fire_hash_change = true;\n                }, 100);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Wrapper over interpreter, it implements exit and catches all\n        // :: exeptions from user code and displays them on the terminal\n        // ---------------------------------------------------------------------\n        var first_command = true;\n        var resume_callbacks = [];\n        function commands(command, silent, exec) {\n            function init_state() {\n                // execHash need first empty command too\n                if (settings.historyState || settings.execHash && exec) {\n                    if (!save_state.length) {\n                        // first command in first terminal don't have hash\n                        self.save_state();\n                    } else {\n                        self.save_state(null);\n                    }\n                }\n            }\n            // -----------------------------------------------------------------\n            function after_exec() {\n                // variables defined later in commands\n                if (!exec) {\n                    change_hash = true;\n                    if (settings.historyState) {\n                        self.save_state(command, false);\n                    }\n                    change_hash = saved_change_hash;\n                }\n                deferred.resolve();\n                if (is_function(settings.onAfterCommand)) {\n                    settings.onAfterCommand.call(self, self, command);\n                }\n            }\n            // -----------------------------------------------------------------\n            function show(result) {\n                if (typeof result !== 'undefined') {\n                    display_object(result);\n                }\n                after_exec();\n                self.resume();\n            }\n            // -----------------------------------------------------------------\n            function invoke() {\n                // Call user interpreter function\n                var result = interpreter.interpreter.call(self, command, self);\n                if (result) {\n                    // auto pause/resume when user return promises\n                    self.pause(settings.softPause);\n                    // when for native Promise object work only in jQuery 3.x\n                    if (is_function(result.done || result.then)) {\n                        (result.done || result.then).call(result, show);\n                    } else {\n                        return $.when(result).done(show);\n                    }\n                } else if (paused) {\n                    resume_callbacks.push(function() {\n                        // exec with resume/pause in user code\n                        after_exec();\n                    });\n                } else {\n                    after_exec();\n                }\n            }\n            // -----------------------------------------------------------------\n            // first command store state of the terminal before the command get\n            // executed\n            if (first_command) {\n                first_command = false;\n                init_state();\n            }\n            try {\n                // this callback can disable commands\n                if (is_function(settings.onBeforeCommand)) {\n                    if (settings.onBeforeCommand.call(self, self, command) === false) {\n                        return;\n                    }\n                }\n                if (!exec) {\n                    prev_command = $.terminal.split_command(command);\n                }\n                if (!ghost()) {\n                    // exec execute this function wihout the help of cmd plugin\n                    // that add command to history on enter\n                    if (exec && (is_function(settings.historyFilter) &&\n                                 settings.historyFilter(command) ||\n                                 command.match(settings.historyFilter))) {\n                        command_line.history().append(command);\n                    }\n                }\n                var interpreter = interpreters.top();\n                if (!silent && settings.echoCommand) {\n                    echo_command(command);\n                }\n                // new promise will be returned to exec that will resolve his\n                // returned promise\n                var deferred = new $.Deferred();\n                // we need to save sate before commands is deleyd because\n                // execute_extended_command disable it and it can be executed\n                // after delay\n                var saved_change_hash = change_hash;\n                if (command.match(/^\\s*login\\s*$/) && self.token(true)) {\n                    if (self.level() > 1) {\n                        self.logout(true);\n                    } else {\n                        self.logout();\n                    }\n                    after_exec();\n                } else if (settings.exit && command.match(/^\\s*exit\\s*$/) &&\n                           !in_login) {\n                    var level = self.level();\n                    if (level === 1 && self.get_token() || level > 1) {\n                        if (self.get_token(true)) {\n                            self.set_token(undefined, true);\n                        }\n                        self.pop();\n                    }\n                    after_exec();\n                } else if (settings.clear && command.match(/^\\s*clear\\s*$/) &&\n                           !in_login) {\n                    self.clear();\n                    after_exec();\n                } else {\n                    var ret = invoke();\n                    if (ret) {\n                        return ret;\n                    }\n                }\n                return deferred.promise();\n            } catch (e) {\n                display_exception(e, 'USER', exec);\n                self.resume();\n                if (exec) {\n                    throw e;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: The logout function removes Storage, disables history and runs\n        // :: the login function. This function is called only when options.login\n        // :: function is defined. The check for this is in the self.pop method\n        // ---------------------------------------------------------------------\n        function global_logout() {\n            if (is_function(settings.onBeforeLogout)) {\n                try {\n                    if (settings.onBeforeLogout.call(self, self) === false) {\n                        return;\n                    }\n                } catch (e) {\n                    settings.onBeforeLogout = $.noop;\n                    display_exception(e, 'onBeforeLogout');\n                }\n            }\n            clear_loging_storage();\n            if (is_function(settings.onAfterLogout)) {\n                try {\n                    settings.onAfterLogout.call(self, self);\n                } catch (e) {\n                    settings.onAfterLogout = $.noop;\n                    display_exception(e, 'onAfterlogout');\n                }\n            }\n            self.login(global_login_fn, true, initialize);\n        }\n        // ---------------------------------------------------------------------\n        function clear_loging_storage() {\n            var name = self.prefix_name(true) + '_';\n            storage.remove(name + 'token');\n            storage.remove(name + 'login');\n        }\n        // ---------------------------------------------------------------------\n        // :: Save the interpreter name for use with purge\n        // ---------------------------------------------------------------------\n        function maybe_append_name(interpreter_name) {\n            var storage_key = self.prefix_name() + '_interpreters';\n            var names = storage.get(storage_key);\n            if (names) {\n                names = JSON.parse(names);\n            } else {\n                names = [];\n            }\n            if ($.inArray(interpreter_name, names) === -1) {\n                names.push(interpreter_name);\n                storage.set(storage_key, JSON.stringify(names));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function enables history, sets prompt, runs interpreter function\n        // ---------------------------------------------------------------------\n        function prepare_top_interpreter(silent) {\n            var interpreter = interpreters.top();\n            var name = self.prefix_name(true);\n            if (!ghost()) {\n                maybe_append_name(name);\n            }\n            var login = self.login_name(true);\n            command_line.name(name + (login ? '_' + login : ''));\n            if (is_function(interpreter.prompt)) {\n                command_line.prompt(function(callback) {\n                    var ret = interpreter.prompt.call(self, callback, self);\n                    if (ret && is_function(ret.then)) {\n                        ret.then(function(string) {\n                            if (typeof string === 'string') {\n                                callback(string);\n                            }\n                        });\n                    }\n                });\n            } else {\n                command_line.prompt(interpreter.prompt);\n            }\n            if (typeof interpreter.history !== 'undefined') {\n                self.history().toggle(interpreter.history);\n            }\n            if ($.isPlainObject(interpreter.keymap)) {\n                command_line.keymap($.omap(interpreter.keymap, function(name, fun) {\n                    return function() {\n                        var args = [].slice.call(arguments);\n                        try {\n                            return fun.apply(self, args);\n                        } catch (e) {\n                            display_exception(e, 'USER KEYMAP');\n                        }\n                    };\n                }));\n            }\n            command_line.set('');\n            init_queue.resolve();\n            if (!silent && is_function(interpreter.onStart)) {\n                interpreter.onStart.call(self, self);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function hashchange() {\n            if (fire_hash_change && settings.execHash) {\n                try {\n                    if (location.hash) {\n                        var hash = location.hash.replace(/^#/, '');\n                        hash_commands = JSON.parse(decodeURIComponent(hash));\n                    } else {\n                        hash_commands = [];\n                    }\n                    if (hash_commands.length) {\n                        restore_state(hash_commands[hash_commands.length - 1]);\n                    } else if (save_state[0]) {\n                        self.import_view(save_state[0]);\n                    }\n                } catch (e) {\n                    display_exception(e, 'TERMINAL');\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function initialize() {\n            prepare_top_interpreter();\n            show_greetings();\n            if (lines.length) {\n                self.refresh(); // for case when showing long error before init\n            }\n            // was_paused flag is workaround for case when user call exec before\n            // login and pause in onInit, 3rd exec will have proper timing (will\n            // execute after onInit resume)\n            var was_paused = false;\n            if (is_function(settings.onInit)) {\n                onPause = function() { // local in terminal\n                    was_paused = true;\n                };\n                try {\n                    settings.onInit.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'OnInit');\n                    // throw e; // it will be catched by terminal\n                } finally {\n                    onPause = $.noop;\n                    if (!was_paused && self.enabled()) {\n                        // resume login if user didn't call pause in onInit\n                        // if user pause in onInit wait with exec until it\n                        // resume\n                        self.resume();\n                    }\n                }\n            }\n            if (first_instance) {\n                first_instance = false;\n                $(window).on('hashchange', hashchange);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: If Ghost don't store anything in localstorage\n        // ---------------------------------------------------------------------\n        function ghost() {\n            return in_login || command_line.mask() !== false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Keydown event handler\n        // ---------------------------------------------------------------------\n        function user_key_down(e) {\n            var result, top = interpreters.top();\n            if (is_function(top.keydown)) {\n                result = top.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            } else if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            }\n        }\n        var keymap = {\n            'CTRL+D': function(e, original) {\n                if (!in_login) {\n                    if (command_line.get() === '') {\n                        if (interpreters.size() > 1 ||\n                            is_function(global_login_fn)) {\n                            self.pop('');\n                        } else {\n                            self.resume();\n                            self.echo('');\n                        }\n                    } else {\n                        original();\n                    }\n                }\n                return false;\n            },\n            'CTRL+C': function() {\n                if (get_selected_text() === '') {\n                    var command = self.get_command();\n                    var position = self.get_position();\n                    command = command.substring(0, position) + '^C' +\n                        command.substring(position + 2);\n                    echo_command(command);\n                    self.set_command('');\n                }\n            },\n            'CTRL+L': function() {\n                self.clear();\n            },\n            'TAB': function(e, orignal) {\n                // TODO: move this to cmd plugin\n                //       add completion = array | function\n                //       !!! Problem complete more then one key need terminal\n                var top = interpreters.top(), completion, caseSensitive;\n                if (typeof top.caseSensitiveAutocomplete !== 'undefined') {\n                    caseSensitive = top.caseSensitiveAutocomplete;\n                } else {\n                    caseSensitive = settings.caseSensitiveAutocomplete;\n                }\n                if (settings.completion &&\n                    get_type(settings.completion) !== 'boolean' &&\n                    top.completion === undefined) {\n                    completion = settings.completion;\n                } else {\n                    completion = top.completion;\n                }\n                if (completion === 'settings') {\n                    completion = settings.completion;\n                }\n                function resolve(commands) {\n                    self.complete(commands, {\n                        echo: true,\n                        word: settings.wordAutocomplete,\n                        escape: settings.completionEscape,\n                        caseSensitive: caseSensitive,\n                        doubleTab: settings.doubleTab\n                    });\n                }\n                if (completion) {\n                    switch (get_type(completion)) {\n                        case 'function':\n                            var string = self.before_cursor(settings.wordAutocomplete);\n                            if (completion.length === 3) {\n                                var error = new Error(strings().comletionParameters);\n                                display_exception(error, 'USER');\n                                return false;\n                            }\n                            var result = completion.call(self, string, resolve);\n                            if (result && is_function(result.then)) {\n                                result.then(resolve);\n                            }\n                            break;\n                        case 'array':\n                            resolve(completion);\n                            break;\n                        default:\n                            throw new $.terminal.Exception(strings().invalidCompletion);\n                    }\n                } else {\n                    orignal();\n                }\n                return false;\n            },\n            'CTRL+V': function(e, original) {\n                original(e);\n                self.oneTime(200, function() {\n                    self.scroll_to_bottom();\n                });\n                return true;\n            },\n            'CTRL+TAB': function() {\n                if (terminals.length() > 1) {\n                    self.focus(false);\n                    return false;\n                }\n            },\n            'PAGEDOWN': function() {\n                self.scroll(self.height());\n            },\n            'PAGEUP': function() {\n                self.scroll(-self.height());\n            }\n        };\n        function key_down(e) {\n            // Prevent to be executed by cmd: CTRL+D, TAB, CTRL+TAB (if more\n            // then one terminal)\n            var result, i;\n            if (self.enabled()) {\n                if (!self.paused()) {\n                    result = user_key_down(e);\n                    if (result !== undefined) {\n                        return result;\n                    }\n                    if (e.which !== 9) { // not a TAB\n                        tab_count = 0;\n                    }\n                } else {\n                    if (!settings.pauseEvents) {\n                        result = user_key_down(e);\n                        if (result !== undefined) {\n                            return result;\n                        }\n                    }\n                    if (e.which === 68 && e.ctrlKey) { // CTRL+D (if paused)\n                        if (settings.pauseEvents) {\n                            result = user_key_down(e);\n                            if (result !== undefined) {\n                                return result;\n                            }\n                        }\n                        if (requests.length) {\n                            for (i = requests.length; i--;) {\n                                var r = requests[i];\n                                if (r.readyState !== 4) {\n                                    try {\n                                        r.abort();\n                                    } catch (error) {\n                                        if (is_function(settings.exceptionHandler)) {\n                                            settings.exceptionHandler.call(\n                                                self,\n                                                e,\n                                                'AJAX ABORT'\n                                            );\n                                        } else {\n                                            self.error(strings().ajaxAbortError);\n                                        }\n                                    }\n                                }\n                            }\n                            requests = [];\n                        }\n                        self.resume();\n                    }\n                    return false;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function key_press(e) {\n            var top = interpreters.top();\n            if (enabled && (!paused || !settings.pauseEvents)) {\n                if (is_function(top.keypress)) {\n                    return top.keypress.call(self, e, self);\n                } else if (is_function(settings.keypress)) {\n                    return settings.keypress.call(self, e, self);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function ready(queue) {\n            return function(fun) {\n                queue.add(fun);\n            };\n        }\n        // ---------------------------------------------------------------------\n        function strings() {\n            return $.extend(\n                {},\n                $.terminal.defaults.strings,\n                settings && settings.strings || {}\n            );\n        }\n        // ---------------------------------------------------------------------\n        var self = this;\n        if (this.length > 1) {\n            return this.each(function() {\n                $.fn.terminal.call(\n                    $(this),\n                    init_interpreter,\n                    $.extend({name: self.selector}, options)\n                );\n            });\n        }\n        // terminal already exists\n        if (self.data('terminal')) {\n            return self.data('terminal');\n        }\n        if (self.length === 0) {\n            var msg = sprintf(strings().invalidSelector);\n            throw new $.terminal.Exception(msg);\n        }\n        // var names = []; // stack if interpreter names\n        var scroll_object;\n        var prev_command; // used for name on the terminal if not defined\n        var tab_count = 0; // for tab completion\n        var output; // .terminal-output jquery object\n        var terminal_id = terminals.length();\n        var num_chars; // numer of chars in line\n        var num_rows; // number of lines that fit without scrollbar\n        var command; // for tab completion\n        var logins = new Stack(); // stack of logins\n        var command_queue = new DelayQueue();\n        var init_queue = new DelayQueue();\n        var when_ready = ready(init_queue);\n        var char_size = get_char_size(self);\n        var cmd_ready = ready(command_queue);\n        var in_login = false;// some Methods should not be called when login\n        // TODO: Try to use mutex like counter for pause/resume\n        var onPause = $.noop;// used to indicate that user call pause onInit\n        var old_width, old_height;\n        var delayed_commands = []; // used when exec commands while paused\n        var settings = $.extend(\n            {},\n            $.terminal.defaults,\n            {\n                name: self.selector,\n                exit: !!(options && options.login || !options)\n            },\n            options || {}\n        );\n        // so it's the same as in TypeScript definition for options\n        delete settings.formatters;\n        // used to throw error when calling methods on destroyed terminal\n        var defunct = false;\n        var lines = [];\n        var storage = new StorageHelper(settings.memory);\n        var enabled = settings.enabled;\n        var frozen = false;\n        var paused = false;\n        var autologin = true; // set to false if onBeforeLogin return false\n        var interpreters;\n        var command_line;\n        var old_enabled;\n        var visibility_observer;\n        var mutation_observer;\n        // -----------------------------------------------------------------\n        // TERMINAL METHODS\n        // -----------------------------------------------------------------\n        $.extend(self, $.omap({\n            id: function() {\n                return terminal_id;\n            },\n            // -------------------------------------------------------------\n            // :: Clear the output\n            // -------------------------------------------------------------\n            clear: function() {\n                output.html('');\n                lines = [];\n                try {\n                    settings.onClear.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'onClear');\n                }\n                self.attr({scrollTop: 0});\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return an object that can be used with import_view to\n            // :: restore the state\n            // -------------------------------------------------------------\n            export_view: function() {\n                var user_export = {};\n                if (is_function(settings.onExport)) {\n                    try {\n                        user_export = settings.onExport.call(self);\n                    } catch (e) {\n                        display_exception(e, 'onExport');\n                    }\n                }\n                return $.extend({}, {\n                    focus: enabled,\n                    mask: command_line.mask(),\n                    prompt: self.get_prompt(),\n                    command: self.get_command(),\n                    position: command_line.position(),\n                    lines: clone(lines),\n                    interpreters: interpreters.clone(),\n                    history: command_line.history().data\n                }, user_export);\n            },\n            // -------------------------------------------------------------\n            // :: Restore the state of the previous exported view\n            // -------------------------------------------------------------\n            import_view: function(view) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'import_view'));\n                }\n                if (is_function(settings.onImport)) {\n                    try {\n                        settings.onImport.call(self, view);\n                    } catch (e) {\n                        settings.onImport = $.noop;\n                        display_exception(e, 'onImport');\n                    }\n                }\n                when_ready(function ready() {\n                    self.set_prompt(view.prompt);\n                    self.set_command(view.command);\n                    command_line.position(view.position);\n                    command_line.mask(view.mask);\n                    if (view.focus) {\n                        self.focus();\n                    }\n                    lines = clone(view.lines).filter(function(line) {\n                        return line[0];\n                    });\n                    if (view.interpreters instanceof Stack) {\n                        interpreters = view.interpreters;\n                    }\n                    if (settings.importHistory) {\n                        command_line.history().set(view.history);\n                    }\n                    redraw();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Store current terminal state\n            // -------------------------------------------------------------\n            save_state: function(command, ignore_hash, index) {\n                // save_state.push({view:self.export_view(), join:[]});\n                if (typeof index !== 'undefined') {\n                    save_state[index] = self.export_view();\n                } else {\n                    save_state.push(self.export_view());\n                }\n                if (!$.isArray(hash_commands)) {\n                    hash_commands = [];\n                }\n                if (command !== undefined && !ignore_hash) {\n                    var state = [\n                        terminal_id,\n                        save_state.length - 1,\n                        command\n                    ];\n                    hash_commands.push(state);\n                    maybe_update_hash();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Execute a command, it will handle commands that do AJAX\n            // :: calls and have delays, if the second argument is set to\n            // :: true it will not echo executed command\n            // -------------------------------------------------------------\n            exec: function(command, silent, deferred) {\n                var d = deferred || new $.Deferred();\n                cmd_ready(function ready() {\n                    if ($.isArray(command)) {\n                        (function recur() {\n                            var cmd = command.shift();\n                            if (cmd) {\n                                self.exec(cmd, silent).done(recur);\n                            } else {\n                                d.resolve();\n                            }\n                        })();\n                    } else if (paused) {\n                        // both commands executed here (resume will call Term::exec)\n                        // delay command multiple time\n                        delayed_commands.push([command, silent, d]);\n                    } else {\n                        // commands may return promise from user code\n                        // it will resolve exec promise when user promise\n                        // is resolved\n                        var ret = commands(command, silent, true);\n                        if (ret && (ret.done || ret.then)) {\n                            (ret.done || ret.then).call(ret, function() {\n                                d.resolve(self);\n                            });\n                        }\n                    }\n                });\n                // while testing it didn't executed last exec when using this\n                // for resolved deferred\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: bypass login function that wait untill you type user/pass\n            // :: it hide implementation detail\n            // -------------------------------------------------------------\n            autologin: function(user, token, silent) {\n                self.trigger('terminal.autologin', [user, token, silent]);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function changes the prompt of the command line to login\n            // :: with a password and calls the user login function with\n            // :: the callback that expects a token. The login is successful\n            // :: if the user calls it with value that is truthy\n            // -------------------------------------------------------------\n            login: function(auth, infinite, success, error) {\n                logins.push([].slice.call(arguments));\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'login'));\n                }\n                if (!is_function(auth)) {\n                    throw new Error(strings().loginIsNotAFunction);\n                }\n                in_login = true;\n                if (self.token() && self.level() === 1 && !autologin) {\n                    in_login = false; // logout will call login\n                    self.logout(true);\n                } else if (self.token(true) && self.login_name(true)) {\n                    in_login = false;\n                    if (is_function(success)) {\n                        success();\n                    }\n                    return self;\n                }\n                // don't store login data in history\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                // so we know how many times call pop\n                var level = self.level();\n                function login_callback(user, token, silent) {\n                    if (token) {\n                        while (self.level() > level) {\n                            self.pop(undefined, true);\n                        }\n                        if (settings.history) {\n                            command_line.history().enable();\n                        }\n                        var name = self.prefix_name(true) + '_';\n                        storage.set(name + 'token', token);\n                        storage.set(name + 'login', user);\n                        in_login = false;\n                        if (is_function(success)) {\n                            // will be used internaly since users know\n                            // when login success (they decide when\n                            // it happen by calling the callback -\n                            // this funtion)\n                            success();\n                        }\n                    } else {\n                        if (infinite) {\n                            if (!silent) {\n                                self.error(strings().wrongPasswordTryAgain);\n                            }\n                            self.pop(undefined, true).set_mask(false);\n                        } else {\n                            in_login = false;\n                            if (!silent) {\n                                self.error(strings().wrongPassword);\n                            }\n                            self.pop(undefined, true).pop(undefined, true);\n                        }\n                        // used only to call pop in push\n                        if (is_function(error)) {\n                            error();\n                        }\n                    }\n                    self.off('terminal.autologin');\n                }\n                self.on('terminal.autologin', function(event, user, token, silent) {\n                    login_callback(user, token, silent);\n                });\n                self.push(function(user) {\n                    self.set_mask(settings.maskChar).push(function(pass) {\n                        try {\n                            var ret = auth.call(self, user, pass, function(\n                                token,\n                                silent) {\n                                login_callback(user, token, silent);\n                            });\n                            if (ret && is_function(ret.then)) {\n                                self.pause();\n                                ret.then(function(token) {\n                                    login_callback(user, token);\n                                    self.resume();\n                                });\n                            }\n                        } catch (e) {\n                            display_exception(e, 'AUTH');\n                        }\n                    }, {\n                        prompt: strings().password + ': ',\n                        name: 'password'\n                    });\n                }, {\n                    prompt: strings().login + ': ',\n                    name: 'login'\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: User defined settings and defaults as well\n            // -------------------------------------------------------------\n            settings: function() {\n                return settings;\n            },\n            // -------------------------------------------------------------\n            // :: Get string before cursor\n            // -------------------------------------------------------------\n            before_cursor: function(word) {\n                var pos = command_line.position();\n                var command = command_line.get().substring(0, pos);\n                var cmd_strings = command.split(' ');\n                var string; // string before cursor that will be completed\n                if (word) {\n                    if (cmd_strings.length === 1) {\n                        string = cmd_strings[0];\n                    } else {\n                        var m = command.match(/(\\\\?\")/g);\n                        var double_quotes = m ? m.filter(function(chr) {\n                            return !chr.match(/^\\\\/);\n                        }).length : 0;\n                        m = command.match(/'/g);\n                        var single_quote = m ? m.length : 0;\n                        if (single_quote % 2 === 1) {\n                            string = command.match(/('[^']*)$/)[0];\n                        } else if (double_quotes % 2 === 1) {\n                            string = command.match(/(\"(?:[^\"]|\\\\\")*)$/)[0];\n                        } else {\n                            string = cmd_strings[cmd_strings.length - 1];\n                            for (i = cmd_strings.length - 1; i > 0; i--) {\n                                // treat escape space as part of the string\n                                var prev_string = cmd_strings[i - 1];\n                                if (prev_string[prev_string.length - 1] === '\\\\') {\n                                    string = cmd_strings[i - 1] + ' ' + string;\n                                } else {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    string = command;\n                }\n                return string;\n            },\n            // -------------------------------------------------------------\n            // :: complete word or command based on array of words\n            // -------------------------------------------------------------\n            complete: function(commands, options) {\n                options = $.extend({\n                    word: true,\n                    echo: false,\n                    escape: true,\n                    caseSensitive: true,\n                    doubleTab: null\n                }, options || {});\n                var sensitive = options.caseSensitive;\n                // cursor can be in the middle of the command\n                // so we need to get the text before the cursor\n                var string = self.before_cursor(options.word).replace(/\\\\\"/g, '\"');\n                var quote = false;\n                if (options.word) {\n                    if (string.match(/^\"/)) {\n                        quote = '\"';\n                    } else if (string.match(/^'/)) {\n                        quote = \"'\";\n                    }\n                    if (quote) {\n                        string = string.replace(/^[\"']/, '');\n                    }\n                }\n                // local copy\n                commands = commands.slice();\n                if (settings.clear && $.inArray('clear', commands) === -1) {\n                    commands.push('clear');\n                }\n                if (settings.exit && $.inArray('exit', commands) === -1) {\n                    commands.push('exit');\n                }\n                if (tab_count % 2 === 0) {\n                    command = self.before_cursor(options.word);\n                } else {\n                    var test = self.before_cursor(options.word);\n                    if (test !== command) {\n                        // command line changed between TABS - ignore\n                        return;\n                    }\n                }\n                var safe = $.terminal.escape_regex(string);\n                if (options.escape) {\n                    safe = safe.replace(/(\\\\+)([\"'() ])/g, function(_, slash, chr) {\n                        if (chr.match(/[()]/)) {\n                            return slash + '\\\\?\\\\' + chr;\n                        } else {\n                            return slash + '?' + chr;\n                        }\n                    });\n                }\n                function matched_strings() {\n                    var matched = [];\n                    for (var i = commands.length; i--;) {\n                        if (regex.test(commands[i])) {\n                            var match = commands[i];\n                            if (quote === '\"') {\n                                match = match.replace(/\"/g, '\\\\\"');\n                            }\n                            if (!quote && options.escape) {\n                                match = match.replace(/([\"'() ])/g, '\\\\$1');\n                            }\n                            if (!sensitive && same_case(match)) {\n                                if (string.toLowerCase() === string) {\n                                    match = match.toLowerCase();\n                                } else if (string.toUpperCase() === string) {\n                                    match = match.toUpperCase();\n                                }\n                            }\n                            matched.push(match);\n                        }\n                    }\n                    return matched;\n                }\n                var flags = sensitive ? '' : 'i';\n                var regex = new RegExp('^' + safe, flags);\n                var matched = matched_strings();\n                function replace(input, replacement) {\n                    var text = self.get_command();\n                    var pos = self.get_position();\n                    var re = new RegExp('^' + input, 'i');\n                    var pre = text.substring(0, pos);\n                    var post = text.substring(pos);\n                    var to_insert = replacement.replace(re, '') + (quote || '');\n                    self.set_command(pre + to_insert + post);\n                    self.set_position((pre + to_insert).length);\n                }\n                if (matched.length === 1) {\n                    if (options.escape) {\n                        replace(safe, matched[0]);\n                    } else {\n                        self.insert(matched[0].replace(regex, '') + (quote || ''));\n                    }\n                    command = self.before_cursor(options.word);\n                    return true;\n                } else if (matched.length > 1) {\n                    if (++tab_count >= 2) {\n                        tab_count = 0;\n                        if (options.echo) {\n                            if (is_function(options.doubleTab)) {\n                                var ret = options.doubleTab.call(\n                                    self,\n                                    string,\n                                    matched,\n                                    echo_command\n                                );\n                                if (typeof ret === 'undefined') {\n                                    return true;\n                                } else {\n                                    return ret;\n                                }\n                            } else if (options.doubleTab !== false) {\n                                echo_command();\n                                var text = matched.reverse().join('\\t');\n                                self.echo($.terminal.escape_brackets(text), {\n                                    keepWords: true,\n                                    formatters: false\n                                });\n                            }\n                            return true;\n                        }\n                    } else {\n                        var common = common_string(string, matched, sensitive);\n                        if (common) {\n                            replace(string, common);\n                            command = self.before_cursor(options.word);\n                            return true;\n                        }\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return commands function from top interpreter\n            // -------------------------------------------------------------\n            commands: function() {\n                return interpreters.top().interpreter;\n            },\n            // -------------------------------------------------------------\n            // :: Low Level method that overwrites interpreter\n            // -------------------------------------------------------------\n            set_interpreter: function(user_intrp, login) {\n                function overwrite_interpreter() {\n                    self.pause(settings.softPause);\n                    make_interpreter(user_intrp, login, function(result) {\n                        self.resume();\n                        var top = interpreters.top();\n                        $.extend(top, result);\n                        prepare_top_interpreter(true);\n                    });\n                }\n                if (is_function(login)) {\n                    self.login(login, true, overwrite_interpreter);\n                } else if (get_type(user_intrp) === 'string' && login) {\n                    self.login(\n                        make_json_rpc_login(user_intrp, login),\n                        true,\n                        overwrite_interpreter\n                    );\n                } else {\n                    overwrite_interpreter();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Show user greetings or terminal signature\n            // -------------------------------------------------------------\n            greetings: function() {\n                show_greetings();\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return true if terminal is paused false otherwise\n            // -------------------------------------------------------------\n            paused: function() {\n                return paused;\n            },\n            // -------------------------------------------------------------\n            // :: Pause the terminal, it should be used for ajax calls\n            // -------------------------------------------------------------\n            pause: function(visible) {\n                cmd_ready(function ready() {\n                    onPause();\n                    paused = true;\n                    command_line.disable(visible || is_android);\n                    if (!visible) {\n                        command_line.find('.prompt').hidden();\n                    }\n                    if (is_function(settings.onPause)) {\n                        settings.onPause.call(self);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Resume the previously paused terminal\n            // -------------------------------------------------------------\n            resume: function() {\n                cmd_ready(function ready() {\n                    paused = false;\n                    if (enabled && terminals.front() === self) {\n                        command_line.enable();\n                    }\n                    command_line.find('.prompt').visible();\n                    var original = delayed_commands;\n                    delayed_commands = [];\n                    for (var i = 0; i < original.length; ++i) {\n                        self.exec.apply(self, original[i]);\n                    }\n                    self.trigger('resume');\n                    var fn = resume_callbacks.shift();\n                    if (fn) {\n                        fn();\n                    }\n                    self.scroll_to_bottom();\n                    if (is_function(settings.onResume)) {\n                        settings.onResume.call(self);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of characters that fit into the width of\n            // :: the terminal\n            // -------------------------------------------------------------\n            cols: function() {\n                if (settings.numChars) {\n                    return settings.numChars;\n                }\n                if (typeof num_chars === 'undefined' || num_chars === 1000) {\n                    num_chars = get_num_chars(self, char_size);\n                }\n                return num_chars;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of lines that fit into the height of the\n            // :: terminal\n            // -------------------------------------------------------------\n            rows: function() {\n                if (settings.numRows) {\n                    return settings.numRows;\n                }\n                if (typeof num_rows === 'undefined') {\n                    num_rows = get_num_rows(self, char_size);\n                }\n                return num_rows;\n            },\n            // -------------------------------------------------------------\n            // :: Return the History object\n            // -------------------------------------------------------------\n            history: function() {\n                return command_line.history();\n            },\n            // -------------------------------------------------------------\n            // :: toggle recording of history state\n            // -------------------------------------------------------------\n            history_state: function(toggle) {\n                function run() {\n                    settings.historyState = true;\n                    if (!save_state.length) {\n                        self.save_state();\n                    } else if (terminals.length() > 1) {\n                        self.save_state(null);\n                    }\n                }\n                if (toggle) {\n                    // if set to true and if set from user command we need\n                    // not to include the command\n                    if (typeof window.setImmediate === 'undefined') {\n                        setTimeout(run, 0);\n                    } else {\n                        setImmediate(run);\n                    }\n                } else {\n                    settings.historyState = false;\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: clear the history state\n            // -------------------------------------------------------------\n            clear_history_state: function() {\n                hash_commands = [];\n                save_state = [];\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Switch to the next terminal\n            // -------------------------------------------------------------\n            next: function() {\n                if (terminals.length() === 1) {\n                    return self;\n                } else {\n                    terminals.front().disable();\n                    var next = terminals.rotate().enable();\n                    // 50 provides buffer in viewport\n                    var x = next.offset().top - 50;\n                    $('html,body').animate({scrollTop: x}, 500);\n                    try {\n                        trigger_terminal_change(next);\n                    } catch (e) {\n                        display_exception(e, 'onTerminalChange');\n                    }\n                    return next;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Make the terminal in focus or blur depending on the first\n            // :: argument. If there is more then one terminal it will\n            // :: switch to next one, if the second argument is set to true\n            // :: the events will be not fired. Used on init\n            // -------------------------------------------------------------\n            focus: function(toggle, silent) {\n                cmd_ready(function ready() {\n                    if (terminals.length() === 1) {\n                        if (toggle === false) {\n                            self.disable(silent);\n                        } else {\n                            self.enable(silent);\n                        }\n                    } else if (toggle === false) {\n                        self.next();\n                    } else {\n                        var front = terminals.front();\n                        if (front !== self) {\n                            // there should be only from terminal enabled but tests\n                            // sometime fail because there where more them one\n                            // where cursor have blink class\n                            terminals.forEach(function(terminal) {\n                                if (terminal !== self && terminal.enabled()) {\n                                    terminal.disable(silent);\n                                }\n                            });\n                            if (!silent) {\n                                try {\n                                    trigger_terminal_change(self);\n                                } catch (e) {\n                                    display_exception(e, 'onTerminalChange');\n                                }\n                            }\n                        }\n                        terminals.set(self);\n                        self.enable(silent);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable/Enable terminal that can be enabled by click\n            // -------------------------------------------------------------\n            freeze: function(freeze) {\n                when_ready(function ready() {\n                    if (freeze) {\n                        self.disable();\n                        frozen = true;\n                    } else {\n                        frozen = false;\n                        self.enable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: check if terminal is frozen\n            // -------------------------------------------------------------\n            frozen: function() {\n                return frozen;\n            },\n            // -------------------------------------------------------------\n            // :: Enable the terminal\n            // -------------------------------------------------------------\n            enable: function(silent) {\n                if (!enabled && !frozen) {\n                    if (num_chars === undefined) {\n                        // enabling first time\n                        self.resize();\n                    }\n                    cmd_ready(function ready() {\n                        var ret;\n                        if (!silent && !enabled) {\n                            try {\n                                ret = settings.onFocus.call(self, self);\n                            } catch (e) {\n                                settings.onFocus = $.noop;\n                                display_exception(e, 'onFocus');\n                            }\n                        }\n                        if (!silent && ret === undefined || silent) {\n                            enabled = true;\n                            if (!self.paused()) {\n                                command_line.enable();\n                            }\n                        }\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable the terminal\n            // -------------------------------------------------------------\n            disable: function(silent) {\n                cmd_ready(function ready() {\n                    var ret;\n                    if (!silent && enabled) {\n                        try {\n                            ret = settings.onBlur.call(self, self);\n                        } catch (e) {\n                            settings.onBlur = $.noop;\n                            display_exception(e, 'onBlur');\n                        }\n                    }\n                    if (!silent && ret === undefined || silent) {\n                        enabled = false;\n                        command_line.disable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if the terminal is enabled\n            // -------------------------------------------------------------\n            enabled: function() {\n                return enabled;\n            },\n            // -------------------------------------------------------------\n            // :: Return the terminal signature depending on the size of the terminal\n            // -------------------------------------------------------------\n            signature: function() {\n                var cols = self.cols();\n                for (var i = signatures.length; i--;) {\n                    var lenghts = signatures[i].map(function(line) {\n                        return line.length;\n                    });\n                    if (Math.max.apply(null, lenghts) <= cols) {\n                        return signatures[i].join('\\n') + '\\n';\n                    }\n                }\n                return '';\n            },\n            // -------------------------------------------------------------\n            // :: Return the version number\n            // -------------------------------------------------------------\n            version: function() {\n                return $.terminal.version;\n            },\n            // -------------------------------------------------------------\n            // :: Return actual command line object (jquery object with cmd\n            // :: methods)\n            // -------------------------------------------------------------\n            cmd: function() {\n                return command_line;\n            },\n            // -------------------------------------------------------------\n            // :: Return the current command entered by terminal\n            // -------------------------------------------------------------\n            get_command: function() {\n                return command_line.get();\n            },\n            // -------------------------------------------------------------\n            // :: Change the command line to the new one\n            // -------------------------------------------------------------\n            set_command: function(command, silent) {\n                when_ready(function ready() {\n                    // TODO: refactor to use options - breaking change\n                    if (typeof command !== 'string') {\n                        command = JSON.stringify(command);\n                    }\n                    command_line.set(command, undefined, silent);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change position of the command line\n            // -------------------------------------------------------------\n            set_position: function(position, relative) {\n                when_ready(function ready() {\n                    command_line.position(position, relative);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return position of the command line\n            // -------------------------------------------------------------\n            get_position: function() {\n                return command_line.position();\n            },\n            // -------------------------------------------------------------\n            // :: Insert text into the command line after the cursor\n            // -------------------------------------------------------------\n            insert: function(string, stay) {\n                if (typeof string === 'string') {\n                    when_ready(function ready() {\n                        var bottom = self.is_bottom();\n                        command_line.insert(string, stay);\n                        if (settings.scrollOnEcho || bottom) {\n                            self.scroll_to_bottom();\n                        }\n                    });\n                    return self;\n                } else {\n                    throw new Error(sprintf(strings().notAString, 'insert'));\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Set the prompt of the command line\n            // -------------------------------------------------------------\n            set_prompt: function(prompt) {\n                when_ready(function ready() {\n                    if (validate('prompt', prompt)) {\n                        if (is_function(prompt)) {\n                            command_line.prompt(function(callback) {\n                                prompt(callback, self);\n                            });\n                        } else {\n                            command_line.prompt(prompt);\n                        }\n                        interpreters.top().prompt = prompt;\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the prompt used by the terminal\n            // -------------------------------------------------------------\n            get_prompt: function() {\n                return interpreters.top().prompt;\n                // command_line.prompt(); - can be a wrapper\n                //return command_line.prompt();\n            },\n            // -------------------------------------------------------------\n            // :: Enable or Disable mask depedning on the passed argument\n            // :: the mask can also be character (in fact it will work with\n            // :: strings longer then one)\n            // -------------------------------------------------------------\n            set_mask: function(mask) {\n                when_ready(function ready() {\n                    command_line.mask(mask === true ? settings.maskChar : mask);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the ouput of the terminal as text\n            // -------------------------------------------------------------\n            get_output: function(raw) {\n                if (raw) {\n                    return lines;\n                } else {\n                    return $.map(lines, function(item) {\n                        return is_function(item[0]) ? item[0]() : item[0];\n                    }).join('\\n');\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Recalculate and redraw everything\n            // -------------------------------------------------------------\n            resize: function(width, height) {\n                if (!self.is(':visible')) {\n                    // delay resize if terminal not visible\n                    self.stopTime('resize');\n                    self.oneTime(500, 'resize', function() {\n                        self.resize(width, height);\n                    });\n                } else {\n                    if (width && height) {\n                        self.width(width);\n                        self.height(height);\n                    }\n                    width = self.width();\n                    height = self.height();\n                    if (typeof settings.numChars !== 'undefined' ||\n                        typeof settings.numRows !== 'undefined') {\n                        command_line.resize(settings.numChars);\n                        self.refresh();\n                        return;\n                    }\n                    var new_num_chars = get_num_chars(self, char_size);\n                    var new_num_rows = get_num_rows(self, char_size);\n                    // only if number of chars changed\n                    if (new_num_chars !== num_chars ||\n                        new_num_rows !== num_rows) {\n                        num_chars = new_num_chars;\n                        num_rows = new_num_rows;\n                        command_line.resize(num_chars);\n                        self.refresh();\n                        var top = interpreters.top();\n                        if (is_function(top.resize)) {\n                            top.resize.call(self, self);\n                        } else if (is_function(settings.onResize)) {\n                            settings.onResize.call(self, self);\n                        }\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: redraw the terminal\n            // -------------------------------------------------------------\n            refresh: function() {\n                if (char_size.width !== 0) {\n                    self[0].style.setProperty('--char-width', char_size.width);\n                }\n                redraw({\n                    scroll: false,\n                    update: true\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Flush the output to the terminal\n            // -------------------------------------------------------------\n            flush: function(options) {\n                options = $.extend({}, {\n                    update: false,\n                    scroll: true\n                }, options || {});\n                try {\n                    var bottom = self.is_bottom();\n                    var wrapper;\n                    // print all lines\n                    // var output_buffer = lines.flush();\n                    $.each(output_buffer, function(i, line) {\n                        if (line === NEW_LINE) {\n                            wrapper = $('<div></div>');\n                        } else if ($.isPlainObject(line) && is_function(line.finalize)) {\n                            // this is finalize function from echo\n                            if (options.update) {\n                                var selector = '> div[data-index=' + line.index + ']';\n                                var node = output.find(selector);\n                                if (node.html() !== wrapper.html()) {\n                                    node.replaceWith(wrapper);\n                                }\n                            } else {\n                                wrapper.appendTo(output);\n                            }\n                            line.finalize(wrapper.attr('data-index', line.index));\n                        } else {\n                            $('<div/>').html(line)\n                                .appendTo(wrapper).width('100%');\n                        }\n                    });\n                    limit_lines();\n                    try {\n                        settings.onFlush.call(self, self);\n                    } catch (e) {\n                        settings.onFlush = $.noop;\n                        display_exception(e, 'onFlush');\n                    }\n                    //num_rows = get_num_rows(self, char_size);\n                    if ((settings.scrollOnEcho && options.scroll) || bottom) {\n                        self.scroll_to_bottom();\n                    }\n                    output_buffer = [];\n                } catch (e) {\n                    if (is_function(settings.exceptionHandler)) {\n                        settings.exceptionHandler.call(self, e, 'TERMINAL (Flush)');\n                    } else {\n                        alert_exception('[Flush]', e);\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Update the output line - line number can be negative\n            // -------------------------------------------------------------\n            update: function(line, string, options) {\n                when_ready(function ready() {\n                    if (line < 0) {\n                        line = lines.length + line; // yes +\n                    }\n                    if (!lines[line]) {\n                        self.error('Invalid line number ' + line);\n                    } else if (string === null) {\n                        lines.splice(line, 1);\n                        output.find('[data-index=' + line + ']').remove();\n                    } else {\n                        lines[line][0] = string;\n                        if (options) {\n                            lines[line][1] = options;\n                        }\n                        process_line({\n                            string: string,\n                            index: line,\n                            options: options\n                        });\n                        self.flush({\n                            scroll: false,\n                            update: true\n                        });\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: convenience method for removing selected line\n            // -------------------------------------------------------------\n            remove_line: function(line) {\n                return self.update(line, null);\n            },\n            // -------------------------------------------------------------\n            // :: return index of last line in case when you need to update\n            // :: after something is echo on the terminal\n            // -------------------------------------------------------------\n            last_index: function() {\n                return lines.length - 1;\n            },\n            // -------------------------------------------------------------\n            // :: Print data to the terminal output. It can have two options\n            // :: a function that is called with the container div that\n            // :: holds the output (as a jquery object) every time the\n            // :: output is printed (including resize and scrolling)\n            // :: If the line is a function it will be called for every\n            // :: redraw.\n            // :: it use $.when so you can echo a promise\n            // -------------------------------------------------------------\n            echo: function(arg, options) {\n                function echo(arg) {\n                    try {\n                        var locals = $.extend({\n                            flush: true,\n                            raw: settings.raw,\n                            finalize: $.noop,\n                            keepWords: false,\n                            formatters: true\n                        }, options || {});\n                        (function(finalize) {\n                            locals.finalize = function(div) {\n                                if (locals.raw) {\n                                    div.addClass('raw');\n                                }\n                                try {\n                                    if (is_function(finalize)) {\n                                        finalize(div);\n                                    }\n                                } catch (e) {\n                                    display_exception(e, 'USER:echo(finalize)');\n                                    finalize = null;\n                                }\n                            };\n                        })(locals.finalize);\n                        if (locals.flush) {\n                            // flush buffer if there was no flush after previous echo\n                            if (output_buffer.length) {\n                                self.flush();\n                            }\n                            output_buffer = [];\n                        }\n                        if (typeof arg === 'function') {\n                            arg = arg.bind(self);\n                        }\n                        process_line({\n                            string: arg,\n                            options: locals,\n                            index: lines.length\n                        });\n                        // extended commands should be processed only\n                        // once in echo and not on redraw\n                        lines.push([arg, $.extend(locals, {\n                            exec: false\n                        })]);\n                        if (locals.flush) {\n                            self.flush();\n                        }\n                    } catch (e) {\n                        // if echo throw exception we can't use error to\n                        // display that exception\n                        if (is_function(settings.exceptionHandler)) {\n                            settings.exceptionHandler.call(self, e, 'TERMINAL (echo)');\n                        } else {\n                            alert_exception('[Terminal.echo]', e);\n                        }\n                    }\n                }\n                if (arg !== undefined && is_function(arg.then)) {\n                    $.when(arg).done(echo);\n                } else {\n                    echo(arg);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: echo red text\n            // -------------------------------------------------------------\n            error: function(message, options) {\n                options = $.extend({}, options, {raw: false, formatters: false});\n                function format(string) {\n                    if (typeof string !== 'string') {\n                        string = String(string);\n                    }\n                    // quick hack to fix trailing backslash\n                    var str = $.terminal.escape_brackets(string).\n                        replace(/\\\\$/, '&#92;').\n                        replace(url_re, ']$1[[;;;error]');\n                    return '[[;;;error]' + str + ']';\n                }\n                if (typeof message === 'function') {\n                    return self.echo(function() {\n                        return format(message.call(self));\n                    }, options);\n                }\n                if (message && message.then) {\n                    message.then(function(string) {\n                        self.echo(format(string));\n                    });\n                    return self;\n                }\n                return self.echo(format(message), options);\n            },\n            // -------------------------------------------------------------\n            // :: Display Exception on terminal\n            // -------------------------------------------------------------\n            exception: function(e, label) {\n                var message = exception_message(e);\n                if (label) {\n                    message = '&#91;' + label + '&#93;: ' + message;\n                }\n                if (message) {\n                    self.error(message, {\n                        finalize: function(div) {\n                            div.addClass('exception message');\n                        },\n                        keepWords: true\n                    });\n                }\n                if (typeof e.fileName === 'string') {\n                    // display filename and line which throw exeption\n                    self.pause(settings.softPause);\n                    $.get(e.fileName, function(file) {\n                        var num = e.lineNumber - 1;\n                        var line = file.split('\\n')[num];\n                        if (line) {\n                            self.error('[' + e.lineNumber + ']: ' + line);\n                        }\n                        self.resume();\n                    }, 'text');\n                }\n                if (e.stack) {\n                    var stack = $.terminal.escape_brackets(e.stack);\n                    self.echo(stack.split(/\\n/g).map(function(trace) {\n                        return '[[;;;error]' + trace.replace(url_re, function(url) {\n                            return ']' + url + '[[;;;error]';\n                        }) + ']';\n                    }).join('\\n'), {\n                        finalize: function(div) {\n                            div.addClass('exception stack-trace');\n                        },\n                        formatters: false\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Scroll Div that holds the terminal\n            // -------------------------------------------------------------\n            scroll: function(amount) {\n                var pos;\n                amount = Math.round(amount);\n                if (scroll_object.prop) { // work with jQuery > 1.6\n                    if (amount > scroll_object.prop('scrollTop') && amount > 0) {\n                        scroll_object.prop('scrollTop', 0);\n                    }\n                    pos = scroll_object.prop('scrollTop');\n                    scroll_object.scrollTop(pos + amount);\n                } else {\n                    if (amount > scroll_object.attr('scrollTop') && amount > 0) {\n                        scroll_object.attr('scrollTop', 0);\n                    }\n                    pos = scroll_object.attr('scrollTop');\n                    scroll_object.scrollTop(pos + amount);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Exit all interpreters and logout. The function will throw\n            // :: exception if there is no login provided\n            // -------------------------------------------------------------\n            logout: function(local) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'logout'));\n                }\n                when_ready(function ready() {\n                    if (local) {\n                        var login = logins.pop();\n                        self.set_token(undefined, true);\n                        self.login.apply(self, login);\n                    } else if (interpreters.size() === 1 && self.token()) {\n                        self.logout(true);\n                    } else {\n                        while (interpreters.size() > 1) {\n                            // pop will call global_logout that will call login\n                            // and size will be > 0; this is workaround the problem\n                            if (self.token()) {\n                                self.logout(true).pop().pop();\n                            } else {\n                                self.pop();\n                            }\n                        }\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the token returned by callback function\n            // :: in login function. It does nothing (return undefined) if\n            // :: there is no login\n            // -------------------------------------------------------------\n            token: function(local) {\n                return storage.get(self.prefix_name(local) + '_token');\n            },\n            // -------------------------------------------------------------\n            // :: Function sets the token to the supplied value. This function\n            // :: works regardless of wherer settings.login is supplied\n            // -------------------------------------------------------------\n            set_token: function(token, local) {\n                var name = self.prefix_name(local) + '_token';\n                if (typeof token === 'undefined') {\n                    storage.remove(name);\n                } else {\n                    storage.set(name, token);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function get the token either set by the login method or\n            // :: by the set_token method.\n            // -------------------------------------------------------------\n            get_token: function(local) {\n                return self.token(local);\n            },\n            // -------------------------------------------------------------\n            // :: Function return Login name entered by the user\n            // -------------------------------------------------------------\n            login_name: function(local) {\n                return storage.get(self.prefix_name(local) + '_login');\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the name of current interpreter\n            // -------------------------------------------------------------\n            name: function() {\n                return interpreters.top().name;\n            },\n            // -------------------------------------------------------------\n            // :: Function return prefix name for login/token\n            // -------------------------------------------------------------\n            prefix_name: function(local) {\n                var name = (settings.name ? settings.name + '_' : '') +\n                    terminal_id;\n                if (local && interpreters.size() > 1) {\n                    var local_name = interpreters.map(function(intrp) {\n                        return intrp.name || '';\n                    }).slice(1).join('_');\n                    if (local_name) {\n                        name += '_' + local_name;\n                    }\n                }\n                return name;\n            },\n            // -------------------------------------------------------------\n            // :: wrapper for common use case\n            // -------------------------------------------------------------\n            read: function(message, success, cancel) {\n                var defer = jQuery.Deferred();\n                var read = false;\n                self.push(function(string) {\n                    read = true;\n                    defer.resolve(string);\n                    if (is_function(success)) {\n                        success(string);\n                    }\n                    self.pop();\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }, {\n                    name: 'read',\n                    history: false,\n                    prompt: message || '',\n                    onExit: function() {\n                        if (!read) {\n                            defer.reject();\n                            if (is_function(cancel)) {\n                                cancel();\n                            }\n                        }\n                    }\n                });\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Push a new interenter on the Stack\n            // -------------------------------------------------------------\n            push: function(interpreter, options) {\n                cmd_ready(function ready() {\n                    options = options || {};\n                    var defaults = {\n                        infiniteLogin: false\n                    };\n                    var push_settings = $.extend({}, defaults, options);\n                    if (!push_settings.name && prev_command) {\n                        // push is called in login\n                        push_settings.name = prev_command.name;\n                    }\n                    if (push_settings.prompt === undefined) {\n                        push_settings.prompt = (push_settings.name || '>') + ' ';\n                    }\n                    // names.push(options.name);\n                    var top = interpreters.top();\n                    if (top) {\n                        top.mask = command_line.mask();\n                    }\n                    var was_paused = paused;\n                    function init() {\n                        settings.onPush.call(self, top, interpreters.top(), self);\n                        prepare_top_interpreter();\n                    }\n                    // self.pause();\n                    make_interpreter(interpreter, options.login, function(ret) {\n                        // result is object with interpreter and completion properties\n                        interpreters.push($.extend({}, ret, push_settings));\n                        if (push_settings.completion === true) {\n                            if ($.isArray(ret.completion)) {\n                                interpreters.top().completion = ret.completion;\n                            } else if (!ret.completion) {\n                                interpreters.top().completion = false;\n                            }\n                        }\n                        if (push_settings.login) {\n                            var error;\n                            var type = get_type(push_settings.login);\n                            if (type === 'function') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    push_settings.login,\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            } else if (get_type(interpreter) === 'string' &&\n                                       type === 'string' || type === 'boolean') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    make_json_rpc_login(\n                                        interpreter,\n                                        push_settings.login\n                                    ),\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            }\n                        } else {\n                            init();\n                        }\n                        if (!was_paused && self.enabled()) {\n                            self.resume();\n                        }\n                    });\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove the last interpreter from the Stack\n            // -------------------------------------------------------------\n            pop: function(string, silent) {\n                if (string !== undefined) {\n                    echo_command(string);\n                }\n                var token = self.token(true);\n                var top;\n                if (interpreters.size() === 1) {\n                    top = interpreters.top();\n                    if (settings.login) {\n                        if (!silent) {\n                            settings.onPop.call(self, top, null, self);\n                        }\n                        global_logout();\n                        if (is_function(settings.onExit)) {\n                            try {\n                                settings.onExit.call(self, self);\n                            } catch (e) {\n                                settings.onExit = $.noop;\n                                display_exception(e, 'onExit');\n                            }\n                        }\n                    } else {\n                        self.error(strings().canExitError);\n                    }\n                } else {\n                    if (token) {\n                        clear_loging_storage();\n                    }\n                    var current = interpreters.pop();\n                    top = interpreters.top();\n                    prepare_top_interpreter();\n                    if (!silent) {\n                        settings.onPop.call(self, current, top);\n                    }\n                    // we check in case if you don't pop from password interpreter\n                    if (in_login && self.get_prompt() !== strings().login + ': ') {\n                        in_login = false;\n                    }\n                    if (is_function(current.onExit)) {\n                        try {\n                            current.onExit.call(self, self);\n                        } catch (e) {\n                            current.onExit = $.noop;\n                            display_exception(e, 'onExit');\n                        }\n                    }\n                    // restore mask\n                    self.set_mask(top.mask);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change terminal option(s) at runtime\n            // -------------------------------------------------------------\n            option: function(object_or_name, value) {\n                if (typeof value === 'undefined') {\n                    if (typeof object_or_name === 'string') {\n                        return settings[object_or_name];\n                    } else if (typeof object_or_name === 'object') {\n                        $.each(object_or_name, function(key, value) {\n                            settings[key] = value;\n                        });\n                    }\n                } else {\n                    settings[object_or_name] = value;\n                    if (object_or_name.match(/^num(Chars|Rows)$/)) {\n                        redraw();\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: invoke keydown shorcut\n            // -------------------------------------------------------------\n            invoke_key: function(shortcut) {\n                var keys = shortcut.toUpperCase().split('+');\n                var key = keys.pop();\n                var ctrl = keys.indexOf('CTRL') !== -1;\n                var shift = keys.indexOf('SHIFT') !== -1;\n                var alt = keys.indexOf('ALT') !== -1;\n                var meta = keys.indexOf('META') !== -1;\n                var e = $.Event(\"keydown\", {\n                    ctrlKey: ctrl,\n                    shiftKey: shift,\n                    altKey: alt,\n                    metaKey: meta,\n                    which: reversed_keycodes[key],\n                    key: key\n                });\n                var doc = $(document.documentElement || window);\n                doc.trigger(e);\n                e = $.Event(\"keypress\");\n                e.key = key;\n                e.which = e.keyCode = 0;\n                doc.trigger(e);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: change terminal keymap at runtime\n            // -------------------------------------------------------------\n            keymap: function(keymap, fn) {\n                if (arguments.length === 0) {\n                    return command_line.keymap();\n                }\n                if (typeof fn === 'undefined') {\n                    if (typeof keymap === 'string') {\n                        return command_line.keymap(keymap);\n                    } else if ($.isPlainObject(keymap)) {\n                        // argument is an object\n                        keymap = $.omap(keymap || {}, function(key, fn) {\n                            if (!new_keymap[key]) {\n                                return fn.bind(self);\n                            }\n                            return function(e, original) {\n                                // new keymap function will get default as 2nd argument\n                                return fn.call(self, e, function() {\n                                    return new_keymap[key](e, original);\n                                });\n                            };\n                        });\n                        command_line.keymap(keymap);\n                    }\n                } else if (typeof fn === 'function') {\n                    var key = keymap;\n                    if (!new_keymap[key]) {\n                        command_line.keymap(key, fn.bind(self));\n                    } else {\n                        command_line.keymap(key, function(e, original) {\n                            return fn.call(self, e, function() {\n                                return new_keymap[key](e, original);\n                            });\n                        });\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return how deep you are in nested interpreters\n            // -------------------------------------------------------------\n            level: function() {\n                return interpreters.size();\n            },\n            // -------------------------------------------------------------\n            // :: Reinitialize the terminal\n            // -------------------------------------------------------------\n            reset: function() {\n                when_ready(function ready() {\n                    self.clear();\n                    while (interpreters.size() > 1) {\n                        interpreters.pop();\n                    }\n                    initialize();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all local storage left by terminal, it will not\n            // :: logout you until you refresh the browser\n            // -------------------------------------------------------------\n            purge: function() {\n                when_ready(function ready() {\n                    var prefix = self.prefix_name() + '_';\n                    var names = storage.get(prefix + 'interpreters');\n                    if (names) {\n                        $.each(JSON.parse(names), function(_, name) {\n                            storage.remove(name + '_commands');\n                            storage.remove(name + '_token');\n                            storage.remove(name + '_login');\n                        });\n                    }\n                    command_line.purge();\n                    storage.remove(prefix + 'interpreters');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all events and DOM nodes left by terminal, it will\n            // :: not purge the terminal so you will have the same state\n            // :: when you refresh the browser\n            // -------------------------------------------------------------\n            destroy: function() {\n                when_ready(function ready() {\n                    command_line.destroy().remove();\n                    output.remove();\n                    wrapper.remove();\n                    $(document).unbind('.terminal_' + self.id());\n                    $(window).unbind('.terminal_' + self.id());\n                    self.unbind('click wheel mousewheel mousedown mouseup');\n                    self.removeData('terminal').removeClass('terminal').\n                        unbind('.terminal');\n                    if (settings.width) {\n                        self.css('width', '');\n                    }\n                    if (settings.height) {\n                        self.css('height', '');\n                    }\n                    $(window).off('blur', blur_terminal).\n                        off('focus', focus_terminal);\n                    self.find('.terminal-fill').remove();\n                    self.stopTime();\n                    terminals.remove(terminal_id);\n                    if (visibility_observer) {\n                        visibility_observer.unobserve(self[0]);\n                    }\n                    if (mutation_observer) {\n                        mutation_observer.disconnect();\n                    }\n                    self.resizer('unbind');\n                    font_resizer.resizer('unbind').remove();\n                    if (!terminals.length()) {\n                        $(window).off('hashchange');\n                    }\n                    defunct = true;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            scroll_to_bottom: function() {\n                var scrollHeight;\n                if (scroll_object.prop) {\n                    scrollHeight = scroll_object.prop('scrollHeight');\n                } else {\n                    scrollHeight = scroll_object.attr('scrollHeight');\n                }\n                scroll_object.scrollTop(scrollHeight);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if terminal div or body is at the bottom\n            // :: is use scrollBottomOffset option as margin for the check\n            // -------------------------------------------------------------\n            is_bottom: function() {\n                if (settings.scrollBottomOffset === -1) {\n                    return false;\n                } else {\n                    var scroll_height, scroll_top, height;\n                    if (self.is('body')) {\n                        scroll_height = $(document).height();\n                        scroll_top = $(window).scrollTop();\n                        height = window.innerHeight;\n                    } else {\n                        scroll_height = scroll_object[0].scrollHeight;\n                        scroll_top = scroll_object.scrollTop();\n                        height = scroll_object.outerHeight();\n                    }\n                    var limit = scroll_height - settings.scrollBottomOffset;\n                    return scroll_top + height > limit;\n                }\n            }\n        }, function(name, fun) {\n            // wrap all functions and display execptions\n            return function() {\n                if (defunct) {\n                    if (!settings.exceptionHandler) {\n                        throw new $.terminal.Exception(strings().defunctTerminal);\n                    }\n                }\n                try {\n                    return fun.apply(self, [].slice.apply(arguments));\n                } catch (e) {\n                    // exec catch by command (resume call exec)\n                    if (name !== 'exec' && name !== 'resume') {\n                        display_exception(e, e.type || 'TERMINAL', true);\n                    }\n                    if (!settings.exceptionHandler) {\n                        throw e;\n                    }\n                }\n            };\n        }));\n        // for invoking shortcuts using terminal::keydown\n        // taken from https://github.com/cvan/keyboardevent-key-polyfill/\n        var keycodes = {\n            3: 'Cancel',\n            6: 'Help',\n            8: 'Backspace',\n            9: 'Tab',\n            12: 'Clear',\n            13: 'Enter',\n            16: 'Shift',\n            17: 'Control',\n            18: 'Alt',\n            19: 'Pause',\n            20: 'CapsLock',\n            27: 'Escape',\n            28: 'Convert',\n            29: 'NonConvert',\n            30: 'Accept',\n            31: 'ModeChange',\n            32: ' ',\n            33: 'PageUp',\n            34: 'PageDown',\n            35: 'End',\n            36: 'Home',\n            37: 'ArrowLeft',\n            38: 'ArrowUp',\n            39: 'ArrowRight',\n            40: 'ArrowDown',\n            41: 'Select',\n            42: 'Print',\n            43: 'Execute',\n            44: 'PrintScreen',\n            45: 'Insert',\n            46: 'Delete',\n            48: ['0', ')'],\n            49: ['1', '!'],\n            50: ['2', '@'],\n            51: ['3', '#'],\n            52: ['4', '$'],\n            53: ['5', '%'],\n            54: ['6', '^'],\n            55: ['7', '&'],\n            56: ['8', '*'],\n            57: ['9', '('],\n            91: 'OS',\n            93: 'ContextMenu',\n            144: 'NumLock',\n            145: 'ScrollLock',\n            181: 'VolumeMute',\n            182: 'VolumeDown',\n            183: 'VolumeUp',\n            186: [';', ':'],\n            187: ['=', '+'],\n            188: [',', '<'],\n            189: ['-', '_'],\n            190: ['.', '>'],\n            191: ['/', '?'],\n            192: ['`', '~'],\n            219: ['[', '{'],\n            220: ['\\\\', '|'],\n            221: [']', '}'],\n            222: [\"'\", '\"'],\n            224: 'Meta',\n            225: 'AltGraph',\n            246: 'Attn',\n            247: 'CrSel',\n            248: 'ExSel',\n            249: 'EraseEof',\n            250: 'Play',\n            251: 'ZoomOut'\n        };\n        // Function keys (F1-24).\n        for (i = 1; i < 25; i++) {\n            keycodes[111 + i] = 'F' + i;\n        }\n        // Printable ASCII characters.\n        var letter = '';\n        for (i = 65; i < 91; i++) {\n            letter = String.fromCharCode(i);\n            keycodes[i] = [letter.toLowerCase(), letter.toUpperCase()];\n        }\n        var reversed_keycodes = {};\n        Object.keys(keycodes).forEach(function(which) {\n            if (keycodes[which] instanceof Array) {\n                keycodes[which].forEach(function(key) {\n                    reversed_keycodes[key.toUpperCase()] = which;\n                });\n            } else {\n                reversed_keycodes[keycodes[which].toUpperCase()] = which;\n            }\n        });\n\n        // -----------------------------------------------------------------\n        // INIT CODE\n        // -----------------------------------------------------------------\n        // backward compatibility\n        if (settings.ignoreSystemDescribe === true) {\n            settings.describe = false;\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        if (settings.height) {\n            self.height(settings.height);\n        }\n        // scrollTop need be on html but scrollHeight taken from body\n        // on Safari both on body it's easier to just put both in selector and it works\n        if (settings.scrollObject !== null) {\n            scroll_object = $(settings.scrollObject);\n        } else {\n            scroll_object = self;\n        }\n        if (scroll_object.is('body') && !is_safari) {\n            scroll_object = $('html,body');\n        }\n        // register ajaxSend for cancel requests on CTRL+D\n        $(document).bind('ajaxSend.terminal_' + self.id(), function(e, xhr) {\n            requests.push(xhr);\n        });\n        var wrapper = $('<div class=\"terminal-wrapper\"/>').appendTo(self);\n        var font_resizer = $('<div class=\"font\">&nbsp;</div>').appendTo(self);\n        var fill = $('<div class=\"terminal-fill\"/>').appendTo(self);\n        output = $('<div>').addClass('terminal-output').attr('role', 'log')\n            .appendTo(wrapper);\n        self.addClass('terminal');\n        // before login event\n        if (settings.login && is_function(settings.onBeforeLogin)) {\n            try {\n                if (settings.onBeforeLogin.call(self, self) === false) {\n                    autologin = false;\n                }\n            } catch (e) {\n                settings.onBeforeLogin = $.noop;\n                display_exception(e, 'onBeforeLogin');\n            }\n        }\n        // create json-rpc authentication function\n        var base_interpreter;\n        if (typeof init_interpreter === 'string') {\n            base_interpreter = init_interpreter;\n        } else if (init_interpreter instanceof Array) {\n            // first JSON-RPC\n            for (var i = 0, len = init_interpreter.length; i < len; ++i) {\n                if (typeof init_interpreter[i] === 'string') {\n                    base_interpreter = init_interpreter[i];\n                    break;\n                }\n            }\n        }\n        var global_login_fn;\n        if (is_function(settings.login)) {\n            global_login_fn = settings.login;\n        } else if (base_interpreter &&\n            (typeof settings.login === 'string' || settings.login === true)) {\n            global_login_fn = make_json_rpc_login(base_interpreter, settings.login);\n        }\n        terminals.append(self);\n        function focus_terminal() {\n            if (old_enabled) {\n                self.focus();\n            }\n        }\n        function blur_terminal() {\n            old_enabled = enabled;\n            self.disable().find('.cmd textarea').trigger('blur', [true]);\n        }\n        // paste event is not testable in node\n        // istanbul ignore next\n        function paste_event(e) {\n            e = e.originalEvent;\n            // we don't care about browser that don't support clipboard data\n            // those browser simple will not have this feature normal paste\n            // is cross-browser and it's handled by cmd plugin\n            function is_type(item, type) {\n                return item.type.indexOf(type) !== -1;\n            }\n            if (e.clipboardData) {\n                if (self.enabled()) {\n                    var items = e.clipboardData.items;\n                    if (items) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (is_type(items[i], 'image') && settings.pasteImage) {\n                                var blob = items[i].getAsFile();\n                                var URL = window.URL || window.webkitURL;\n                                var source = URL.createObjectURL(blob);\n                                self.echo('<img src=\"' + source + '\"/>', {raw: true});\n                            } else if (is_type(items[i], 'text/plain')) {\n                                items[i].getAsString(self.insert);\n                            }\n                        }\n                    } else if (e.clipboardData.getData) {\n                        var text = e.clipboardData.getData('text/plain');\n                        self.insert(text);\n                    }\n                    return false;\n                }\n            }\n        }\n        $(document).on('paste.terminal_' + self.id(), paste_event);\n        var new_keymap = $.extend(\n            {},\n            keymap,\n            $.omap(settings.keymap || {}, function(key, fn) {\n                if (!keymap[key]) {\n                    return fn.bind(self);\n                }\n                return function(e, original) {\n                    // new keymap function will get default as 2nd argument\n                    return fn.call(self, e, function() {\n                        return keymap[key](e, original);\n                    });\n                };\n            })\n        );\n        make_interpreter(init_interpreter, settings.login, function(itrp) {\n            if (settings.completion && typeof settings.completion !== 'boolean' ||\n                !settings.completion) {\n                // overwrite interpreter completion by global setting #224\n                // we use string to indicate that it need to be taken from settings\n                // so we are able to change it using option API method\n                itrp.completion = 'settings';\n            }\n            interpreters = new Stack($.extend({}, settings.extra, {\n                name: settings.name,\n                prompt: settings.prompt,\n                keypress: settings.keypress,\n                keydown: settings.keydown,\n                resize: settings.onResize,\n                greetings: settings.greetings,\n                mousewheel: settings.mousewheel,\n                history: settings.history,\n                keymap: new_keymap\n            }, itrp));\n            // CREATE COMMAND LINE\n            command_line = $('<div/>').appendTo(wrapper).cmd({\n                prompt: settings.prompt,\n                history: settings.memory ? 'memory' : settings.history,\n                historyFilter: settings.historyFilter,\n                historySize: settings.historySize,\n                caseSensitiveSearch: settings.caseSensitiveSearch,\n                width: '100%',\n                enabled: false,\n                char_width: char_size.width,\n                keydown: key_down,\n                keymap: new_keymap,\n                clickTimeout: settings.clickTimeout,\n                holdTimeout: settings.holdTimeout,\n                holdRepeatTimeout: settings.holdRepeatTimeout,\n                keypress: key_press,\n                tabs: settings.tabs,\n                onCommandChange: function(command) {\n                    if (is_function(settings.onCommandChange)) {\n                        try {\n                            settings.onCommandChange.call(self, command, self);\n                        } catch (e) {\n                            settings.onCommandChange = $.noop;\n                            display_exception(e, 'onCommandChange');\n                        }\n                    }\n                    self.scroll_to_bottom();\n                },\n                commands: commands\n            });\n            function disable(e) {\n                e = e.originalEvent;\n                if (e) {\n                    // e.terget is body when click outside of context menu to close it\n                    // even if you click on terminal\n                    var node = document.elementFromPoint(e.clientX, e.clientY);\n                    if (!$(node).closest('.terminal').length && self.enabled()) {\n                        // we only need to disable when click outside of terminal\n                        // click on other terminal is handled by focus event\n                        self.disable();\n                    }\n                }\n            }\n            self.oneTime(100, function() {\n                $(document).bind('click.terminal_' + self.id(), disable).\n                    bind('contextmenu.terminal_' + self.id(), disable);\n            });\n            var $win = $(window);\n            // cordova application, if keyboard was open and we resume it will be\n            // closed so we need to disable terminal so you can enable it with tap\n            document.addEventListener(\"resume\", function() {\n                self.disable();\n            });\n            // istanbul ignore next\n            if (is_mobile) {\n                self.click(function() {\n                    if (!frozen) {\n                        if (!self.enabled()) {\n                            self.focus();\n                            command_line.enable();\n                        } else {\n                            self.disable();\n                        }\n                    }\n                });\n            } else {\n                // work weird on mobile\n                $win.on('focus.terminal_' + self.id(), focus_terminal).\n                    on('blur.terminal_' + self.id(), blur_terminal);\n                // detect mouse drag\n                (function() {\n                    var count = 0;\n                    var $target;\n                    var name = 'click_' + self.id();\n                    var textarea = self.find('.cmd textarea');\n                    function click() {\n                        if ($target.is('.terminal') ||\n                            $target.is('.terminal-wrapper')) {\n                            var len = self.get_command().length;\n                            self.set_position(len);\n                        } else if ($target.closest('.prompt').length) {\n                            self.set_position(0);\n                        }\n                        if (!textarea.is(':focus')) {\n                            textarea.focus();\n                        }\n                        reset();\n                    }\n                    function reset() {\n                        count = 0;\n                        $target = null;\n                    }\n                    // hack for weird jumping on Chrome/windows #402\n                    var scroll_top;\n                    self.find('.cmd textarea').on('focus', function() {\n                        if (typeof scroll_top !== 'undefined') {\n                            scroll_object.scrollTop(scroll_top);\n                        }\n                    }).on('blur', function() {\n                        scroll_top = scroll_object.scrollTop();\n                    });\n                    self.mousedown(function(e) {\n                        if (!scrollbar_event(e, fill)) {\n                            $target = $(e.target);\n                        }\n                    }).mouseup(function() {\n                        if (get_selected_text() === '' && $target) {\n                            if (++count === 1) {\n                                if (!frozen) {\n                                    if (!enabled) {\n                                        self.focus();\n                                    } else {\n                                        var timeout = settings.clickTimeout;\n                                        self.oneTime(timeout, name, click);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                self.stopTime(name);\n                            }\n                        }\n                        reset();\n                    }).dblclick(function() {\n                        reset();\n                        self.stopTime(name);\n                    });\n                })();\n                (function() {\n                    var clip = self.find('.cmd textarea');\n                    self.on('contextmenu.terminal', function(e) {\n                        if (get_selected_text() === '') {\n                            if (!$(e.target).is('img,value,audio,object,canvas,a')) {\n                                if (!self.enabled()) {\n                                    self.enable();\n                                }\n                                var offset = command_line.offset();\n                                clip.css({\n                                    left: e.pageX - offset.left - 20,\n                                    top: e.pageY - offset.top - 20,\n                                    width: '5em',\n                                    height: '4em'\n                                });\n                                if (!clip.is(':focus')) {\n                                    clip.focus();\n                                }\n                                self.stopTime('textarea');\n                                self.oneTime(100, 'textarea', function() {\n                                    clip.css({\n                                        left: '',\n                                        top: '',\n                                        width: '',\n                                        height: ''\n                                    });\n                                });\n                                self.stopTime('selection');\n                                self.everyTime(20, 'selection', function() {\n                                    if (clip[0].selection !== clip[0].value) {\n                                        if (get_textarea_selection(clip[0])) {\n                                            clear_textarea_selection(clip[0]);\n                                            select(\n                                                self.find('.terminal-output')[0],\n                                                self.find('.cmd div:last-of-type')[0]\n                                            );\n                                            self.stopTime('selection');\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                })();\n            }\n            self.on('click', 'a', function(e) {\n                var $this = $(this);\n                if ($this.closest('.exception').length) {\n                    var href = $this.attr('href');\n                    if (href.match(/:[0-9]+$/)) { // display line if specified\n                        e.preventDefault();\n                        print_line(href);\n                    }\n                }\n                // refocus because links have tabindex in case where user want\n                // tab change urls, we can ignore this function on click\n                if (enabled) {\n                    self.find('.cmd textarea').focus();\n                }\n            });\n            function calculate_char_size() {\n                var width = char_size.width;\n                char_size = get_char_size(self);\n                if (width !== char_size.width) {\n                    command_line.option('char_width', char_size.width).refresh();\n                }\n            }\n            resize();\n            function resize() {\n                if (self.is(':visible')) {\n                    var width = fill.width();\n                    var height = fill.height();\n                    // prevent too many calculations in IE\n                    if (old_height !== height || old_width !== width) {\n                        self.resize();\n                    }\n                    old_height = height;\n                    old_width = width;\n                }\n            }\n            function create_resizers() {\n                self.resizer('unbind').resizer(resize);\n                font_resizer.resizer('unbind').resizer(function() {\n                    calculate_char_size();\n                    self.resize();\n                });\n            }\n            if (self.is(':visible')) {\n                create_resizers();\n            }\n            function observe_visibility() {\n                if (visibility_observer) {\n                    visibility_observer.unobserve(self[0]);\n                }\n                var was_enabled = self.enabled();\n                var visible = self.is(':visible');\n                if (visible) {\n                    create_resizers();\n                }\n                visibility_observer = new window.IntersectionObserver(function() {\n                    if (self.is(':visible') && !visible) {\n                        visible = true;\n                        create_resizers();\n                        calculate_char_size();\n                        resize();\n                        if (was_enabled) {\n                            self.enable();\n                        }\n                    } else if (visible && !self.is(':visible')) {\n                        visible = false;\n                        was_enabled = $.terminal.active() === self && self.enabled();\n                        self.disable();\n                    }\n                }, {\n                    root: document.body\n                });\n                visibility_observer.observe(self[0]);\n            }\n            var in_dom = !!self.closest('body').length;\n            var MutationObsrv = window.MutationObserver || window.WebKitMutationObserver;\n            if (MutationObsrv) {\n                mutation_observer = new MutationObsrv(function() {\n                    if (self.closest('body').length) {\n                        if (!in_dom) {\n                            self.scroll_to_bottom();\n                            if (window.IntersectionObserver) {\n                                observe_visibility();\n                            }\n                            resize();\n                        }\n                        in_dom = true;\n                    } else if (in_dom) {\n                        in_dom = false;\n                    }\n                });\n                mutation_observer.observe(document.body, {childList: true});\n            }\n            if (window.IntersectionObserver && in_dom) {\n                // check if element is in the DOM if not running IntersectionObserver\n                // don't make sense\n                observe_visibility();\n            }\n            command_queue.resolve();\n            // touch devices need touch event to get virtual keyboard\n            if (enabled && self.is(':visible') && !is_mobile) {\n                self.focus(undefined, true);\n            } else {\n                self.disable();\n            }\n            // -------------------------------------------------------------\n            // Run Login\n            if (is_function(global_login_fn)) {\n                self.login(global_login_fn, true, initialize);\n            } else {\n                initialize();\n            }\n            // -------------------------------------------------------------\n            // :: helper\n            function exec_spec(spec) {\n                var terminal = terminals.get()[spec[0]];\n                // execute if belong to this terminal\n                if (terminal && terminal_id === terminal.id()) {\n                    if (!spec[2]) {\n                        defer.resolve();\n                        return defer.promise();\n                    } else if (paused) {\n                        var defer = $.Deferred();\n                        resume_callbacks.push(function() {\n                            return terminal.exec(spec[2]).done(function() {\n                                terminal.save_state(spec[2], true, spec[1]);\n                                defer.resolve();\n                            });\n                        });\n                        return defer.promise();\n                    } else {\n                        return terminal.exec(spec[2]).done(function() {\n                            terminal.save_state(spec[2], true, spec[1]);\n                        });\n                    }\n                }\n            }\n            // exec from hash called in each terminal instance\n            if (settings.execHash) {\n                if (location.hash) {\n                    // wait until login is initialized\n                    setTimeout(function() {\n                        try {\n                            var hash = location.hash.replace(/^#/, '');\n                            // yes no var - local inside terminal\n                            hash_commands = JSON.parse(decodeURIComponent(hash));\n                            var i = 0;\n                            (function recur() {\n                                var spec = hash_commands[i++];\n                                if (spec) {\n                                    exec_spec(spec).done(recur);\n                                } else {\n                                    change_hash = true;\n                                }\n                            })();// */\n                        } catch (e) {\n                            // invalid json - ignore\n                        }\n                    });\n                } else {\n                    change_hash = true;\n                }\n            } else {\n                change_hash = true; // if enabled later\n            }\n            // change_hash = true; // exec can now change hash\n            // -------------------------------------------------------------\n            /* istanbul ignore next */\n            (function() {\n                var shift = false;\n                $(document).bind('keydown.terminal_' + self.id(), function(e) {\n                    if (e.shiftKey) {\n                        shift = true;\n                    }\n                }).bind('keyup.terminal_' + self.id(), function(e) {\n                    // in Google Chromium/Linux shiftKey is false\n                    if (e.shiftKey || e.which === 16) {\n                        shift = false;\n                    }\n                });\n                // this could work without calling scroll on wheel event but we\n                // need it for cases where you have mouse wheel work differently\n                // like with less command that scroll text\n                function mousewheel(event, delta) {\n                    if (!shift) {\n                        var interpreter = interpreters.top();\n                        var ret;\n                        if (is_function(interpreter.mousewheel)) {\n                            ret = interpreter.mousewheel(event, delta, self);\n                        } else if (is_function(settings.mousewheel)) {\n                            ret = settings.mousewheel(event, delta, self);\n                        }\n                        if (have_scrollbar() || ret === false) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                        if (ret === false) {\n                            return false;\n                        } else if (ret === true) {\n                            return;\n                        }\n                        if (delta > 0) {\n                            self.scroll(-40);\n                        } else {\n                            self.scroll(40);\n                        }\n                    }\n                }\n                if ($.event.special.mousewheel) {\n                    // we keep mousewheel plugin just in case\n                    self.on('mousewheel', mousewheel);\n                } else {\n                    // detection take from:\n                    // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n                    var event;\n                    var div = document.createElement(\"div\");\n                    if (\"onwheel\" in div) {\n                        event = \"wheel\"; // Modern browsers support \"wheel\"\n                    } else if (document.onmousewheel !== undefined) {\n                        // Webkit and IE support at least \"mousewheel\"\n                        event = \"mousewheel\";\n                    } else {\n                        // let's assume that remaining browsers are older Firefox\n                        event = \"DOMMouseScroll\";\n                    }\n                    div = null;\n                    self.on(event, function(e) {\n                        var delta;\n                        if (event === 'mousewheel') {\n                            delta = - 1 / 40 * e.originalEvent.wheelDelta;\n                        } else {\n                            delta = e.originalEvent.deltaY || e.originalEvent.detail;\n                        }\n                        mousewheel(e, -delta);\n                    });\n                }\n            })();\n        }); // make_interpreter\n        self.data('terminal', self);\n        return self;\n    }; // terminal plugin\n});\n"]}