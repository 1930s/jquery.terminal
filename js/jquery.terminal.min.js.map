{"version":3,"sources":["js/jquery.terminal.js"],"names":["ctx","sprintf","cache","hasOwnProperty","arguments","parse","format","call","parse_tree","argv","cursor","tree_length","length","node_type","arg","output","i","k","match","pad","pad_character","pad_length","get_type","push","test","toString","String","fromCharCode","parseInt","toExponential","parseFloat","toFixed","substring","toUpperCase","charAt","str_repeat","join","fmt","_fmt","arg_names","exec","field_list","replacement_field","field_match","vsprintf","_argv","slice","splice","apply","variable","Object","prototype","toLowerCase","input","multiplier","global","window","factory","undefined","root","define","amd","module","exports","jQuery","wcwidth","require","$","debug","str","console","log","DelayQueue","callbacks","Callbacks","resolved","this","resolve","fire","add","fn","omap","o","result","each","v","text_length","map","text","get","reduce","a","b","Clone","clone_object","object","tmp","isArray","clone_array","key","array","is_function","Array","Error","item","bind","clone","localStorage","hasLS","testKey","storage","setItem","removeItem","error","hasCookies","document","cookie","split","e","isLS","wls","n","c","wc","dt","Date","setTime","getTime","toGMTString","rls","rc","nn","ca","indexOf","dls","dc","extend","Storage","set","remove","everyTime","interval","label","times","belay","timer","oneTime","stopTime","guid","regex","powers","ms","cs","ds","s","das","hs","ks","timeParse","value","trim","num","mult","element","counter","isFunction","isNaN","constructor","Number","$timers","$timerID","handler","inProgress","setInterval","timers","ret","lab","clearInterval","_fn","navigator","userAgent","one","els","undef","nativeSplit","compliantExecNpcg","self","separator","limit","flags","ignoreCase","multiline","extended","sticky","lastLastIndex","separator2","lastIndex","lastLength","RegExp","source","index","replace","caret","pos","target","isContentEditable","contentEditable","getSelection","focus","range1","getRangeAt","range2","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","selectionStart","selection","createRange","body","createTextRange","moveToElementText","setEndPoint","range","duplicate","bookmark","getBookmark","moveToBookmark","moveStart","collapse","firstChild","setSelectionRange","select","is","resizer","callback","unbind","$this","iframe","resize_handler","data","has","removeData","ResizeObserver","observer","unobserve","find","contentWindow","off","first","observe","on","addClass","appendTo","a11y_hide","attr","role","aria-hidden","excepctions","alert_exception","message","exception_message","setTimeout","scrollbar_event","node","left","offset","outerWidth","clientX","fileName","Cycle","rotate","skip","defined","filter","append","front","restart","Boolean","forEach","Stack","init","size","pop","concat","top","History","name","memory","enabled","storage_key","JSON","stringify","new_data","reset","last","end","position","current","next","old","previous","clear","purge","enable","disable","toggle","cmd_index","cmd","defaults","mask","caseSensitiveSearch","historySize","prompt","history","onPositionChange","noop","onCommandChange","clickTimeout","holdTimeout","holdRepeatTimeout","repeatTimeoutKeys","tabs","options","settings","maybe_data","id","clip","autocapitalize","spellcheck","tabindex","val","width","num_chars","last_rendered_prompt","prompt_last_line","prompt_len","prompt_node","reverse_search","rev_search_str","reverse_search_position","backup_prompt","command","last_command","kill_text","formatted_position","animation","restart_animation","paste_count","get_char_pos","closest","parent","prevAll","prevUntil","nextUntil","key_mapping","SPACEBAR","UP","DOWN","LEFT","RIGHT","DEL","MULTIPLY","DIVIDE","SUBTRACT","ADD","get_key","combo","ctrlKey","metaKey","shiftKey","altKey","keymap","default_keymap","ALT+D","delete_word","HOLD+DELETE","HOLD+SHIFT+DELETE","ENTER","historyFilter","prev_command","no_keydown","commands","draw_prompt","SHIFT+ENTER","insert","BACKSPACE","backspace_key","SHIFT+BACKSPACE","TAB","CTRL+D","DELETE","ARROWUP","prev_history","CTRL+P","ARROWDOWN","next_history","CTRL+N","ARROWLEFT","HOLD+ARROWLEFT","CTRL+B","CTRL+ARROWLEFT","len","CTRL+R","reverse_history_search","draw_reverse_prompt","redraw","CTRL+G","ARROWRIGHT","right","HOLD+ARROWRIGHT","CTRL+F","CTRL+ARROWRIGHT","re","F12","return_true","END","CTRL+E","HOME","home","CTRL+A","SHIFT+INSERT","paste_event","CTRL+SHIFT+T","CTRL+W","delete_word_backward","HOLD+BACKSPACE","HOLD+SHIFT+BACKSPACE","CTRL+H","CTRL+X","CTRL+C","CTRL+T","CTRL+Y","CTRL+V","META+V","CTRL+K","text_to_clipboard","CTRL+U","CTRL+TAB","META+`","META+R","META+L","clipboard","m","isenabled","trigger","paste","first_up_history","mobile_focus","is_mobile","fix_cursor","animation_supported","style","getComputedStyle","animationName","getPropertyValue","_class","className","fix_textarea","position_only","is_android","removeClass","new_cursor","insertBefore","animating","blink","toggleClass","clear_reverse_state","history_data","save_string","j","terminal","escape_regex","change_num_chars","$prompt","html","W","w","getBoundingClientRect","Math","floor","get_splitted_command_line","string","split_equal","skip_empty","line","strip","escape_brackets","first_len","strlen","splitted","formatting","skip_formatted_position","escape_formatting","unixFormattingEscapeBrackets","formatted","apply_formatters","max","normalize","stack","before","encoded","encode","wrap","char_width","is_formatting","start","prev","after","cursor_line","draw_cursor_line","before_str","c_before","noselect","cursor_len","setProperty","div","lines_after","lines","last_ins","insertAfter","lines_before","original_string","from_last","last_len","new_pos","line_index","current_len","msg","strings","redrawError","find_position","cmp","search_pos","opts","guess","codepoint_len","binary_search","chars","split_characters","crlf","encoded_last_line","last_line","fire_change_command","clean","option","delete","stay","removed","silent","new_keymap","original","bare_command","destroy","doc","keypress_event","keydown_event","input_event","user_prompt","relative","refresh","display_position","command_len","new_formatted_pos","visible","show","resize","silient","new_mask","prevent_keypress","dead_key","single_key","no_keypress","no_key","backspace","process","hold","hold_pause","skip_insert","is_backspace","which","is_single","clear_reverse_search_key","fake","exception","keydown","clear_hold","documentElement","keypress","is_key_native","normalized","inArray","keyCode","event","type","chr","Event","keycode","charCodeAt","abs","was_down","count","$target","down","button","originalEvent","get_selected_text","KeyboardEvent","combine_chr_re","astral_symbols_re","emoji_re","mobile_re","tablet_re","format_split_re","format_parts_re","format_re","format_exist_re","format_full_re","color_hex_re","url_re","url_nf_re","email_re","command_re","extended_command_re","format_begin_re","format_start_re","format_end_re","format_exec_re","float_re","re_re","string_re","unclosed_strings_re","domPrefixes","elm","createElement","is_ch_unit_supported","agent","is_css_variables_supported","CSS","supports","proto","getOwnPropertyDescriptor","check","substr","vendor","opera","bare_text","safe","get_next_character","match_emoji","match_combo","normalize_position","acc","char_width_prop","extra_css","bare","wide_characters","specs","arr","spec","sum","compare_fn","mid","container","$div","select_all","execCommand","get_textarea_selection","textarea","selectionEnd","clear_textarea_selection","common_string","matchCase","string_case","candidate","candidateLower","currentLower","trigger_terminal_change","terminals","term","onTerminalChange","setBaseAndExtent","setStart","childNodes","removeAllRanges","addRange","process_command","shift","args","quotes","rest","args_quotes","version","date","color_names","valid_color","color","unclosed_strings","special","have_formatting","format_split","tracking_replace","rex","replacement","new_string","rep_string","new_position","last_index","c0","iterate_formatting","is_space","entity_re","match_entity","is_open_formatting","is_escape_bracket","is_text","not_formatting","opening","in_text","space","prev_space","braket","char","start_index","end_index","start_formatting","end_formatting","prev_index","_","semicolons","keep_words","prev_format","first_index","line_length","last_char","last_bracket","last_iteraction","can_break","stripped","text_len","new_index","closed_formatting","matched","amp","sp","nested_formatting","test_lengths","formatter","__no_warn__","warn","formatters","apply_function_formatter","__meta__","found_position","partials","this_len","length_before","loop","position_partial","partial","Exception","safe_text","slashes","linksNoReferrer","linksNoFollow","anyLinks","background","data_text","style_str","text_decoration","extra","rel","unshift","unescape_brackets","columns","cols","no_formatting","lengths","column_limit","whole","bracket","active","last_id","parse_argument","strict","parse_string","quote","parse_arguments","split_arguments","parse_command","split_command","parse_options","boolean","token","single","extended_command","invokeMethods","change_hash","obj","eval","done","iterator","Symbol","replacer","search","new_formatter","Terminal_Exception","css","hidden","warnings","ids","jrpc","url","method","params","success","deferred","Deferred","isPlainObject","validJSONRPC","response","isNumeric","request","jsonrpc","ajax","beforeSend","jxhr","status","jqXHR","content_type","getResponseHeader","json","reject","contentType","dataType","async","promise","get_char_size","temp","rect","height","get_num_chars","char_size","get_num_rows","all","same","same_case","version_set","copyright","version_string","reg","name_ver","signatures","exit","maskChar","checkArity","raw","exceptionHandler","pauseEvents","softPause","cancelableAjax","processArguments","processRPCResponse","completionEscape","convertLinks","scrollObject","historyState","importHistory","echoCommand","scrollOnEcho","login","outputLimit","onAjaxError","pasteImage","scrollBottomOffset","wordAutocomplete","caseSensitiveAutocomplete","describe","onRPCError","doubleTab","completion","onInit","onClear","onBlur","onFocus","onExit","onPush","onPop","onAfterRedraw","onEchoCommand","onFlush","comletionParameters","wrongPasswordTryAgain","wrongPassword","ajaxAbortError","wrongArity","commandNotFound","oneRPCWithIgnore","oneInterpreterFunction","loginFunctionMissing","noTokenError","serverResponse","wrongGreetings","notWhileLogin","loginIsNotAFunction","canExitError","invalidCompletion","invalidSelector","invalidTerminalId","password","recursiveCall","notAString","invalidStrings","defunctTerminal","requests","save_state","hash_commands","fire_hash_change","first_instance","init_interpreter","StorageHelper","get_processed_command","display_object","echo","print_line","url_spec","pause","file","code","resume","display_json_rpc_error","at","make_basic_json_rpc","auth","interpreter","display_exception","ajax_error","make_object_interpreter","arity","fallback","user_command","keys","onCommandNotFound","xhr","responseText","make_json_rpc_object","jrpc_success","jrpc_request","jrpc_response","procs","field","interpreter_object","proc","args_len","help","names","found","make_interpreter","user_intrp","finalize","rpc_count","fn_interpreter","recur","interpreters","new_obj","ignoreSystemDescribe","make_json_rpc_login","user","passwd","output_buffer","NEW_LINE","buffer_line","format_options","words","keepWords","process_line","line_settings","is_fn","parseObject","parts","prev_cmd","update","scroll","command_line","detached_output","empty","detach","lines_to_show","rows","flush","limit_lines","$lines","for_remove","parents","$self","show_greetings","greetings","signature","echo_command","get_command","then","have_scrollbar","innerWidth","clientWidth","fill","restore_state","command_idx","import_view","export_view","maybe_update_hash","location","hash","first_command","resume_callbacks","init_state","execHash","after_exec","saved_change_hash","onAfterCommand","invoke","when","paused","onBeforeCommand","ghost","level","logout","in_login","get_token","set_token","global_logout","onBeforeLogout","clear_loging_storage","onAfterLogout","global_login_fn","initialize","prefix_name","maybe_append_name","interpreter_name","prepare_top_interpreter","login_name","fun","init_queue","onStart","hashchange","decodeURIComponent","was_paused","onPause","user_key_down","get_position","set_command","CTRL+L","orignal","caseSensitive","complete","word","escape","before_cursor","scroll_to_bottom","PAGEDOWN","PAGEUP","key_down","tab_count","r","readyState","abort","key_press","ready","queue","selector","terminal_id","num_rows","logins","command_queue","when_ready","cmd_ready","old_width","old_height","delayed_commands","defunct","frozen","autologin","old_enabled","visibility_observer","mutation_observer","scrollTop","user_export","onExport","get_prompt","view","onImport","set_prompt","ignore_hash","state","d","infinite","login_callback","set_mask","pass","cmd_strings","double_quotes","single_quote","prev_string","sensitive","slash","matched_strings","pre","post","to_insert","set_position","reverse","common","set_interpreter","overwrite_interpreter","onResume","numChars","numRows","history_state","run","setImmediate","clear_history_state","x","animate","freeze","lenghts","bottom","is_bottom","get_output","new_num_chars","new_num_rows","onResize","wrapper","replaceWith","remove_line","locals","lineNumber","trace","amount","round","prop","local","local_name","intrp","read","cancel","defer","infiniteLogin","push_settings","object_or_name","invoke_key","shortcut","ctrl","alt","meta","reversed_keycodes","prefix","blur_terminal","focus_terminal","disconnect","font_resizer","scrollHeight","scroll_height","scroll_top","outerHeight","keycodes","3","6","8","9","12","13","16","17","18","19","20","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","48","49","50","51","52","53","54","55","56","57","91","93","144","145","181","182","183","186","187","188","189","190","191","192","219","220","221","222","224","225","246","247","248","249","250","251","letter","onBeforeLogin","base_interpreter","is_type","clipboardData","items","blob","getAsFile","URL","webkitURL","createObjectURL","getAsString","getData","itrp","mousewheel","elementFromPoint","clientY","$win","addEventListener","click","mousedown","mouseup","timeout","dblclick","pageX","pageY","href","preventDefault","calculate_char_size","create_resizers","observe_visibility","was_enabled","visibility_checker","IntersectionObserver","in_dom","MutationObsrv","MutationObserver","WebKitMutationObserver","childList","exec_spec","delta","stopPropagation","onmousewheel","wheelDelta","deltaY","detail"],"mappings":"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","sourcesContent":["/**@license\n *       __ _____                     ________                              __\n *      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /\n *  __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /\n * /  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__\n * \\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/\n *           \\/              /____/                              version DEV\n *\n * This file is part of jQuery Terminal. http://terminal.jcubic.pl\n *\n * Copyright (c) 2010-2018 Jakub Jankiewicz <http://jcubic.pl/me>\n * Released under the MIT license\n *\n * Contains:\n *\n * Storage plugin Distributed under the MIT License\n * modified to work from Data URIs that block storage and cookies in Chrome\n * Copyright (c) 2010 Dave Schindler\n *\n * jQuery Timers licenced with the WTFPL\n * <http://jquery.offput.ca/timers/>\n *\n * Cross-Browser Split 1.1.1\n * Copyright 2007-2012 Steven Levithan <stevenlevithan.com>\n * Available under the MIT License\n *\n * jQuery Caret\n * Copyright (c) 2009, Gideon Sireling\n * 3 clause BSD License\n *\n * sprintf.js\n * Copyright (c) 2007-2013 Alexandru Marasteanu <hello at alexei dot ro>\n * licensed under 3 clause BSD license\n *\n * emoji regex v7.0.1 by Mathias Bynens\n * MIT license\n *\n * Date: Sun, 14 Oct 2018 17:35:27 +0000\n */\n\n/* TODO:\n *\n * Debug interpreters names in LocalStorage\n *\n * TEST: login + promises/exec\n *       json-rpc/object + promises\n *\n * NOTE: json-rpc don't need promises and delegate resume/pause because only\n *       exec can call it and exec call interpreter that work with resume/pause\n */\n/* global location, jQuery, setTimeout, window, global, localStorage, sprintf,\n         setImmediate, IntersectionObserver, MutationObserver, ResizeObserver,\n         module, require, define, setInterval, clearInterval */\n/* eslint-disable */\n/* istanbul ignore next */\n(function(ctx) {\n    var sprintf = function() {\n        if (!sprintf.cache.hasOwnProperty(arguments[0])) {\n            sprintf.cache[arguments[0]] = sprintf.parse(arguments[0]);\n        }\n        return sprintf.format.call(null, sprintf.cache[arguments[0]], arguments);\n    };\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i]);\n            if (node_type === 'string') {\n                output.push(parse_tree[i]);\n            }\n            else if (node_type === 'array') {\n                match = parse_tree[i]; // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor];\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]));\n                        }\n                        arg = arg[match[2][k]];\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]];\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++];\n                }\n\n                if (/[^s]/.test(match[8]) && (get_type(arg) !== 'number')) {\n                    throw(sprintf('[sprintf] expecting number but found %s', get_type(arg)));\n                }\n                switch (match[8]) {\n                    case 'b': arg = arg.toString(2); break;\n                    case 'c': arg = String.fromCharCode(arg); break;\n                    case 'd': arg = parseInt(arg, 10); break;\n                    case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n                    case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n                    case 'o': arg = arg.toString(8); break;\n                    case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;\n                    case 'u': arg = arg >>> 0; break;\n                    case 'x': arg = arg.toString(16); break;\n                    case 'X': arg = arg.toString(16).toUpperCase(); break;\n                }\n                arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? ' +' + arg : arg);\n                pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' ';\n                pad_length = match[6] - String(arg).length;\n                pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n                output.push(match[5] ? arg + pad : pad + arg);\n            }\n        }\n        return output.join('');\n    };\n\n    sprintf.cache = {};\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n        while (_fmt) {\n            if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n                parse_tree.push(match[0]);\n            }\n            else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n                parse_tree.push('%');\n            }\n            else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1;\n                    var field_list = [], replacement_field = match[2], field_match = [];\n                    if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1]);\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1]);\n                            }\n                            else {\n                                throw('[sprintf] huh?');\n                            }\n                        }\n                    }\n                    else {\n                        throw('[sprintf] huh?');\n                    }\n                    match[2] = field_list;\n                }\n                else {\n                    arg_names |= 2;\n                }\n                if (arg_names === 3) {\n                    throw('[sprintf] mixing positional and named placeholders is not (yet) supported');\n                }\n                parse_tree.push(match);\n            }\n            else {\n                throw('[sprintf] huh?');\n            }\n            _fmt = _fmt.substring(match[0].length);\n        }\n        return parse_tree;\n    };\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = argv.slice(0);\n        _argv.splice(0, 0, fmt);\n        return sprintf.apply(null, _argv);\n    };\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    function str_repeat(input, multiplier) {\n        for (var output = []; multiplier > 0; output[--multiplier] = input) {/* do nothing */}\n        return output.join('');\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    ctx.sprintf = sprintf;\n    ctx.vsprintf = vsprintf;\n})(typeof global !== \"undefined\" ? global : window);\n/* eslint-enable */\n// UMD taken from https://github.com/umdjs/umd\n(function(factory, undefined) {\n    var root = typeof window !== 'undefined' ? window : global;\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        // istanbul ignore next\n        define(['jquery', 'wcwidth'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = function(root, jQuery, wcwidth) {\n            if (jQuery === undefined) {\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if (window !== undefined) {\n                    jQuery = require('jquery');\n                } else {\n                    jQuery = require('jquery')(root);\n                }\n            }\n            if (wcwidth === undefined) {\n                wcwidth = require('wcwidth');\n            }\n            factory(jQuery, wcwidth);\n            return jQuery;\n        };\n    } else {\n        // Browser\n        // istanbul ignore next\n        factory(root.jQuery, root.wcwidth);\n    }\n})(function($, wcwidth, undefined) {\n    'use strict';\n    // -----------------------------------------------------------------------\n    // :: debug functions\n    // -----------------------------------------------------------------------\n    /* eslint-disable */\n    function debug(str) {\n        if (false) {\n            console.log(str);\n            //$.terminal.active().echo(str);\n        }\n    }\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Replacemenet for jQuery 2 deferred objects\n    // -----------------------------------------------------------------------\n    function DelayQueue() {\n        var callbacks = $.Callbacks();\n        var resolved = false;\n        this.resolve = function() {\n            callbacks.fire();\n            resolved = true;\n        };\n        this.add = function(fn) {\n            if (resolved) {\n                fn();\n            } else {\n                callbacks.add(fn);\n            }\n        };\n    }\n    // -----------------------------------------------------------------------\n    // :: map object to object\n    // -----------------------------------------------------------------------\n    $.omap = function(o, fn) {\n        var result = {};\n        $.each(o, function(k, v) {\n            result[k] = fn.call(o, k, v);\n        });\n        return result;\n    };\n    $.fn.text_length = function() {\n        return this.map(function() {\n            return $(this).text().length;\n        }).get().reduce(function(a, b) {\n            return a + b;\n        }, 0);\n    };\n    // -----------------------------------------------------------------------\n    // :: Deep clone of objects and arrays\n    // -----------------------------------------------------------------------\n    var Clone = {\n        clone_object: function(object) {\n            var tmp = {};\n            if (typeof object === 'object') {\n                if ($.isArray(object)) {\n                    return this.clone_array(object);\n                } else if (object === null) {\n                    return object;\n                } else {\n                    for (var key in object) {\n                        if ($.isArray(object[key])) {\n                            tmp[key] = this.clone_array(object[key]);\n                        } else if (typeof object[key] === 'object') {\n                            tmp[key] = this.clone_object(object[key]);\n                        } else {\n                            tmp[key] = object[key];\n                        }\n                    }\n                }\n            }\n            return tmp;\n        },\n        clone_array: function(array) {\n            if (!is_function(Array.prototype.map)) {\n                throw new Error(\"Your browser don't support ES5 array map \" +\n                                'use es5-shim');\n            }\n            return array.slice(0).map(function(item) {\n                if (typeof item === 'object') {\n                    return this.clone_object(item);\n                } else {\n                    return item;\n                }\n            }.bind(this));\n        }\n    };\n    var clone = function(object) {\n        return Clone.clone_object(object);\n    };\n\n    /* eslint-disable */\n    // -----------------------------------------------------------------------\n    // :: Storage plugin\n    // -----------------------------------------------------------------------\n    var localStorage;\n    /* istanbul ignore next */\n    (function() {\n        var hasLS = function() {\n            try {\n                var testKey = 'test', storage = window.localStorage;\n                storage.setItem(testKey, '1');\n                storage.removeItem(testKey);\n                return true;\n            } catch (error) {\n                return false;\n            }\n        };\n        var hasCookies = function() {\n            try {\n                document.cookie.split(';');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        };\n        // Private data\n        var isLS = hasLS();\n        // Private functions\n        function wls(n, v) {\n            var c;\n            if (typeof n === 'string' && typeof v === 'string') {\n                localStorage[n] = v;\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        localStorage[c] = n[c];\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function wc(n, v) {\n            var dt, e, c;\n            dt = new Date();\n            dt.setTime(dt.getTime() + 31536000000);\n            e = '; expires=' + dt.toGMTString();\n            if (typeof n === 'string' && typeof v === 'string') {\n                document.cookie = n + '=' + v + e + '; path=/';\n                return true;\n            } else if (typeof n === 'object' && typeof v === 'undefined') {\n                for (c in n) {\n                    if (n.hasOwnProperty(c)) {\n                        document.cookie = c + '=' + n[c] + e + '; path=/';\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n        function rls(n) {\n            return localStorage[n];\n        }\n        function rc(n) {\n            var nn, ca, i, c;\n            nn = n + '=';\n            ca = document.cookie.split(';');\n            for (i = 0; i < ca.length; i++) {\n                c = ca[i];\n                while (c.charAt(0) === ' ') {\n                    c = c.substring(1, c.length);\n                }\n                if (c.indexOf(nn) === 0) {\n                    return c.substring(nn.length, c.length);\n                }\n            }\n            return null;\n        }\n        function dls(n) {\n            return delete localStorage[n];\n        }\n        function dc(n) {\n            return wc(n, '', -1);\n        }\n        /**\n         * Public API\n         * $.Storage.set(\"name\", \"value\")\n         * $.Storage.set({\"name1\":\"value1\", \"name2\":\"value2\", etc})\n         * $.Storage.get(\"name\")\n         * $.Storage.remove(\"name\")\n         */\n        if (!hasCookies() && !isLS) {\n            localStorage = {};\n            $.extend({\n                Storage: {\n                    set: wls,\n                    get: rls,\n                    remove: dls\n                }\n            });\n        } else {\n            if (isLS) {\n                localStorage = window.localStorage;\n            }\n            $.extend({\n                Storage: {\n                    set: isLS ? wls : wc,\n                    get: isLS ? rls : rc,\n                    remove: isLS ? dls : dc\n                }\n            });\n        }\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Timers\n    // -----------------------------------------------------------------------\n    var jQuery = $;\n    /* istanbul ignore next */\n    (function($) {\n        jQuery.fn.extend({\n            everyTime: function(interval, label, fn, times, belay) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, times, belay);\n                });\n            },\n            oneTime: function(interval, label, fn) {\n                return this.each(function() {\n                    jQuery.timer.add(this, interval, label, fn, 1);\n                });\n            },\n            stopTime: function(label, fn) {\n                return this.each(function() {\n                    jQuery.timer.remove(this, label, fn);\n                });\n            }\n        });\n\n        jQuery.extend({\n            timer: {\n                guid: 1,\n                global: {},\n                regex: /^([0-9]+)\\s*(.*s)?$/,\n                powers: {\n                    // Yeah this is major overkill...\n                    'ms': 1,\n                    'cs': 10,\n                    'ds': 100,\n                    's': 1000,\n                    'das': 10000,\n                    'hs': 100000,\n                    'ks': 1000000\n                },\n                timeParse: function(value) {\n                    if (value === undefined || value === null) {\n                        return null;\n                    }\n                    var result = this.regex.exec(jQuery.trim(value.toString()));\n                    if (result[2]) {\n                        var num = parseInt(result[1], 10);\n                        var mult = this.powers[result[2]] || 1;\n                        return num * mult;\n                    } else {\n                        return value;\n                    }\n                },\n                add: function(element, interval, label, fn, times, belay) {\n                    var counter = 0;\n\n                    if (jQuery.isFunction(label)) {\n                        if (!times) {\n                            times = fn;\n                        }\n                        fn = label;\n                        label = interval;\n                    }\n\n                    interval = jQuery.timer.timeParse(interval);\n\n                    if (typeof interval !== 'number' ||\n                        isNaN(interval) ||\n                        interval <= 0) {\n                        return;\n                    }\n                    if (times && times.constructor !== Number) {\n                        belay = !!times;\n                        times = 0;\n                    }\n\n                    times = times || 0;\n                    belay = belay || false;\n\n                    if (!element.$timers) {\n                        element.$timers = {};\n                    }\n                    if (!element.$timers[label]) {\n                        element.$timers[label] = {};\n                    }\n                    fn.$timerID = fn.$timerID || this.guid++;\n\n                    var handler = function() {\n                        if (belay && handler.inProgress) {\n                            return;\n                        }\n                        handler.inProgress = true;\n                        if ((++counter > times && times !== 0) ||\n                            fn.call(element, counter) === false) {\n                            jQuery.timer.remove(element, label, fn);\n                        }\n                        handler.inProgress = false;\n                    };\n\n                    handler.$timerID = fn.$timerID;\n\n                    if (!element.$timers[label][fn.$timerID]) {\n                        element.$timers[label][fn.$timerID] = window.setInterval(handler, interval);\n                    }\n\n                    if (!this.global[label]) {\n                        this.global[label] = [];\n                    }\n                    this.global[label].push(element);\n\n                },\n                remove: function(element, label, fn) {\n                    var timers = element.$timers, ret;\n\n                    if (timers) {\n\n                        if (!label) {\n                            for (var lab in timers) {\n                                if (timers.hasOwnProperty(lab)) {\n                                    this.remove(element, lab, fn);\n                                }\n                            }\n                        } else if (timers[label]) {\n                            if (fn) {\n                                if (fn.$timerID) {\n                                    window.clearInterval(timers[label][fn.$timerID]);\n                                    delete timers[label][fn.$timerID];\n                                }\n                            } else {\n                                for (var _fn in timers[label]) {\n                                    if (timers[label].hasOwnProperty(_fn)) {\n                                        window.clearInterval(timers[label][_fn]);\n                                        delete timers[label][_fn];\n                                    }\n                                }\n                            }\n\n                            for (ret in timers[label]) {\n                                if (timers[label].hasOwnProperty(ret)) {\n                                    break;\n                                }\n                            }\n                            if (!ret) {\n                                ret = null;\n                                delete timers[label];\n                            }\n                        }\n\n                        for (ret in timers) {\n                            if (timers.hasOwnProperty(ret)) {\n                                break;\n                            }\n                        }\n                        if (!ret) {\n                            element.$timers = null;\n                        }\n                    }\n                }\n            }\n        });\n        if (/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())) {\n            $(window).one('unload', function() {\n                var global = jQuery.timer.global;\n                for (var label in global) {\n                    if (global.hasOwnProperty(label)) {\n                        var els = global[label], i = els.length;\n                        while (--i) {\n                            jQuery.timer.remove(els[i], label);\n                        }\n                    }\n                }\n            });\n        }\n    })(jQuery);\n    // -----------------------------------------------------------------------\n    // :: CROSS BROWSER SPLIT\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    (function(undef) {\n\n        // prevent double include\n\n        if (!String.prototype.split.toString().match(/\\[native/)) {\n            return;\n        }\n\n        var nativeSplit = String.prototype.split,\n        compliantExecNpcg = /()??/.exec(\"\")[1] === undef, // NPCG: nonparticipating capturing group\n        self;\n\n        self = function(str, separator, limit) {\n            // If `separator` is not a regex, use `nativeSplit`\n            if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\n                return nativeSplit.call(str, separator, limit);\n            }\n            var output = [],\n            flags = (separator.ignoreCase ? \"i\" : \"\") +\n                (separator.multiline  ? \"m\" : \"\") +\n                (separator.extended   ? \"x\" : \"\") + // Proposed for ES6\n                (separator.sticky     ? \"y\" : \"\"), // Firefox 3+\n                lastLastIndex = 0,\n            // Make `global` and avoid `lastIndex` issues by working with a copy\n            separator2, match, lastIndex, lastLength;\n            separator = new RegExp(separator.source, flags + \"g\");\n            str += \"\"; // Type-convert\n            if (!compliantExecNpcg) {\n                // Doesn't need flags gy, but they don't hurt\n                separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\n            }\n            /* Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules\n             */\n            // ? Math.pow(2, 32) - 1 : ToUint32(limit)\n            limit = limit === undef ? -1 >>> 0 : limit >>> 0;\n            while (match = separator.exec(str)) {\n                    // `separator.lastIndex` is not reliable cross-browser\n                    lastIndex = match.index + match[0].length;\n                    if (lastIndex > lastLastIndex) {\n                        output.push(str.slice(lastLastIndex, match.index));\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                        // nonparticipating capturing groups\n                        if (!compliantExecNpcg && match.length > 1) {\n                            match[0].replace(separator2, function() {\n                                for (var i = 1; i < arguments.length - 2; i++) {\n                                    if (arguments[i] === undef) {\n                                        match[i] = undef;\n                                    }\n                                }\n                            });\n                        }\n                        if (match.length > 1 && match.index < str.length) {\n                            Array.prototype.push.apply(output, match.slice(1));\n                        }\n                        lastLength = match[0].length;\n                        lastLastIndex = lastIndex;\n                        if (output.length >= limit) {\n                            break;\n                        }\n                    }\n                    if (separator.lastIndex === match.index) {\n                        separator.lastIndex++; // Avoid an infinite loop\n                    }\n                }\n            if (lastLastIndex === str.length) {\n                if (lastLength || !separator.test(\"\")) {\n                    output.push(\"\");\n                }\n            } else {\n                output.push(str.slice(lastLastIndex));\n            }\n            return output.length > limit ? output.slice(0, limit) : output;\n        };\n\n        // For convenience\n        String.prototype.split = function(separator, limit) {\n            return self(this, separator, limit);\n        };\n\n        return self;\n\n    })();\n    // -----------------------------------------------------------------------\n    // :: jQuery Caret\n    // -----------------------------------------------------------------------\n    /* istanbul ignore next */\n    $.fn.caret = function(pos) {\n        var target = this[0];\n        var isContentEditable = target.contentEditable === 'true';\n        //get\n        if (arguments.length === 0) {\n            //HTML5\n            if (window.getSelection) {\n                //contenteditable\n                if (isContentEditable) {\n                    target.focus();\n                    var range1 = window.getSelection().getRangeAt(0),\n                    range2 = range1.cloneRange();\n                    range2.selectNodeContents(target);\n                    range2.setEnd(range1.endContainer, range1.endOffset);\n                    return range2.toString().length;\n                }\n                //textarea\n                return target.selectionStart;\n            }\n            //IE<9\n            if (document.selection) {\n                target.focus();\n                //contenteditable\n                if (isContentEditable) {\n                    var range1 = document.selection.createRange(),\n                    range2 = document.body.createTextRange();\n                    range2.moveToElementText(target);\n                    range2.setEndPoint('EndToEnd', range1);\n                    return range2.text.length;\n                }\n                //textarea\n                var pos = 0,\n                range = target.createTextRange(),\n                range2 = document.selection.createRange().duplicate(),\n                bookmark = range2.getBookmark();\n                range.moveToBookmark(bookmark);\n                while (range.moveStart('character', -1) !== 0) pos++;\n                return pos;\n            }\n            //not supported\n            return 0;\n        }\n        //set\n        if (pos === -1)\n            pos = this[isContentEditable? 'text' : 'val']().length;\n        //HTML5\n        if (window.getSelection) {\n            //contenteditable\n            if (isContentEditable) {\n                target.focus();\n                window.getSelection().collapse(target.firstChild, pos);\n            }\n            //textarea\n            else\n                target.setSelectionRange(pos, pos);\n        }\n        //IE<9\n        else if (document.body.createTextRange) {\n            var range = document.body.createTextRange();\n            range.moveToElementText(target);\n            range.moveStart('character', pos);\n            range.collapse(true);\n            range.select();\n        }\n        if (!isContentEditable && !this.is(':focus')) {\n            target.focus();\n        }\n        return pos;\n    };\n    /* eslint-enable */\n    // -----------------------------------------------------------------------\n    // :: Cross-browser resize element plugin using sentinel iframe or\n    // :: resizeObserver\n    // -----------------------------------------------------------------------\n    $.fn.resizer = function(callback) {\n        var unbind = arguments[0] === \"unbind\";\n        if (!unbind && !is_function(callback)) {\n            throw new Error(\n                'Invalid argument, it need to a function or string \"unbind\".'\n            );\n        }\n        if (unbind) {\n            callback = is_function(arguments[1]) ? arguments[1] : null;\n        }\n        return this.each(function() {\n            var $this = $(this);\n            var iframe;\n            var callbacks;\n            function resize_handler() {\n                callbacks.fire();\n            }\n            if (unbind) {\n                callbacks = $this.data('callbacks');\n                if (callback && callbacks) {\n                    callbacks.remove(callback);\n                    if (!callbacks.has()) {\n                        callbacks = null;\n                    }\n                } else {\n                    callbacks = null;\n                }\n                if (!callbacks) {\n                    $this.removeData('callbacks');\n                    if (window.ResizeObserver) {\n                        var observer = $this.data('observer');\n                        if (observer) {\n                            observer.unobserve(this);\n                            $this.removeData('observer');\n                        }\n                    } else {\n                        iframe = $this.find('> iframe');\n                        if (iframe.length) {\n                            // just in case of memory leaks in IE\n                            $(iframe[0].contentWindow).off('resize').remove();\n                            iframe.remove();\n                        } else if ($this.is('body')) {\n                            $(window).off('resize.resizer');\n                        }\n                    }\n                }\n            } else if ($this.data('callbacks')) {\n                $(this).data('callbacks').add(callback);\n            } else {\n                callbacks = $.Callbacks();\n                callbacks.add(callback);\n                $this.data('callbacks', callbacks);\n                var resizer;\n                var first = true;\n                if (window.ResizeObserver) {\n                    resizer = new ResizeObserver(function() {\n                        if (!first) {\n                            resize_handler();\n                        }\n                        first = false;\n                    });\n                    resizer.observe(this);\n                    $this.data('observer', resizer);\n                } else if ($this.is('body')) {\n                    $(window).on('resize.resizer', resize_handler);\n                } else {\n                    iframe = $('<iframe/>').addClass('resizer').appendTo(this)[0];\n\n                    $(iframe.contentWindow).on('resize', resize_handler);\n                }\n            }\n        });\n    };\n    // -----------------------------------------------------------------------\n    // :: hide elements from screen readers\n    // -----------------------------------------------------------------------\n    function a11y_hide(element) {\n        element.attr({\n            role: 'presentation',\n            'aria-hidden': 'true'\n        });\n    }\n    // ---------------------------------------------------------------------\n    // :: alert only first exception of type\n    // ---------------------------------------------------------------------\n    var excepctions = [];\n    function alert_exception(label, e) {\n        var message = (label ? label + ': ' : '') + exception_message(e);\n        if (excepctions.indexOf(message) === -1) {\n            excepctions.push(message);\n            setTimeout(function() {\n                throw e;\n            }, 0);\n            //alert(message + (e.stack ? '\\n' + e.stack : ''));\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :; detect if mouse event happen on scrollbar\n    // ---------------------------------------------------------------------\n    function scrollbar_event(e, node) {\n        var left = node.offset().left;\n        return node.outerWidth() <= e.clientX - left;\n    }\n    // ---------------------------------------------------------------------\n    // :: Return exception message as string\n    // ---------------------------------------------------------------------\n    function exception_message(e) {\n        if (typeof e === 'string') {\n            return e;\n        } else if (typeof e.fileName === 'string') {\n            return e.fileName + ': ' + e.message;\n        } else {\n            return e.message;\n        }\n    }\n    // -----------------------------------------------------------------------\n    // :: CYCLE DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Cycle() {\n        var data = [].slice.call(arguments);\n        var pos = 0;\n        $.extend(this, {\n            get: function() {\n                return data;\n            },\n            index: function() {\n                return pos;\n            },\n            rotate: function(skip) {\n                if (!skip) {\n                    var defined = data.filter(function(item) {\n                        return typeof item !== 'undefined';\n                    });\n                    if (!defined.length) {\n                        return;\n                    }\n                }\n                if (!data.length) {\n                    return;\n                }\n                if (data.length === 1) {\n                    return data[0];\n                } else {\n                    if (pos === data.length - 1) {\n                        pos = 0;\n                    } else {\n                        ++pos;\n                    }\n                    if (typeof data[pos] !== 'undefined') {\n                        return data[pos];\n                    } else {\n                        return this.rotate(true);\n                    }\n                }\n            },\n            length: function() {\n                return data.length;\n            },\n            remove: function(index) {\n                delete data[index];\n            },\n            set: function(item) {\n                for (var i = data.length; i--;) {\n                    if (data[i] === item) {\n                        pos = i;\n                        return;\n                    }\n                }\n                this.append(item);\n                pos = data.length - 1;\n            },\n            front: function() {\n                if (data.length) {\n                    var index = pos;\n                    var restart = false;\n                    while (!data[index]) {\n                        index++;\n                        if (index > data.length) {\n                            if (restart) {\n                                break;\n                            }\n                            index = 0;\n                            restart = true;\n                        }\n                    }\n                    return data[index];\n                }\n            },\n            map: function(fn) {\n                return data.map(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        return fn(item, i);\n                    }\n                    return null;\n                }).filter(Boolean);\n            },\n            forEach: function(fn) {\n                return data.forEach(function(item, i) {\n                    if (typeof item !== 'undefined') {\n                        fn(item, i);\n                    }\n                });\n            },\n            append: function(item) {\n                data.push(item);\n            }\n        });\n    }\n    // -----------------------------------------------------------------------\n    // :: STACK DATA STRUCTURE\n    // -----------------------------------------------------------------------\n    function Stack(init) {\n        var data = init instanceof Array ? init : init ? [init] : [];\n        $.extend(this, {\n            data: function() {\n                return data;\n            },\n            map: function(fn) {\n                return $.map(data, fn);\n            },\n            size: function() {\n                return data.length;\n            },\n            pop: function() {\n                if (data.length === 0) {\n                    return null;\n                } else {\n                    var value = data[data.length - 1];\n                    data = data.slice(0, data.length - 1);\n                    return value;\n                }\n            },\n            push: function(value) {\n                data = data.concat([value]);\n                return value;\n            },\n            top: function() {\n                return data.length > 0 ? data[data.length - 1] : null;\n            },\n            clone: function() {\n                return new Stack(data.slice(0));\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: HISTORY CLASS\n    // -------------------------------------------------------------------------\n    function History(name, size, memory) {\n        var enabled = true;\n        var storage_key = '';\n        if (typeof name === 'string' && name !== '') {\n            storage_key = name + '_';\n        }\n        storage_key += 'commands';\n        var data;\n        if (memory) {\n            data = [];\n        } else {\n            data = $.Storage.get(storage_key);\n            data = data ? JSON.parse(data) : [];\n        }\n        var pos = data.length - 1;\n        $.extend(this, {\n            append: function(item) {\n                if (enabled) {\n                    if (data[data.length - 1] !== item) {\n                        data.push(item);\n                        if (size && data.length > size) {\n                            data = data.slice(-size);\n                        }\n                        pos = data.length - 1;\n                        if (!memory) {\n                            $.Storage.set(storage_key, JSON.stringify(data));\n                        }\n                    }\n                }\n            },\n            set: function(new_data) {\n                if (new_data instanceof Array) {\n                    data = new_data;\n                    if (!memory) {\n                        $.Storage.set(storage_key, JSON.stringify(data));\n                    }\n                }\n            },\n            data: function() {\n                return data;\n            },\n            reset: function() {\n                pos = data.length - 1;\n            },\n            last: function() {\n                return data[data.length - 1];\n            },\n            end: function() {\n                return pos === data.length - 1;\n            },\n            position: function() {\n                return pos;\n            },\n            current: function() {\n                return data[pos];\n            },\n            next: function() {\n                var old = pos;\n                if (pos < data.length - 1) {\n                    ++pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            previous: function() {\n                var old = pos;\n                if (pos > 0) {\n                    --pos;\n                }\n                if (old !== pos) {\n                    return data[pos];\n                }\n            },\n            clear: function() {\n                data = [];\n                this.purge();\n            },\n            enabled: function() {\n                return enabled;\n            },\n            enable: function() {\n                enabled = true;\n            },\n            purge: function() {\n                if (!memory) {\n                    $.Storage.remove(storage_key);\n                }\n            },\n            disable: function() {\n                enabled = false;\n            },\n            toggle: function(value) {\n                if (typeof value === 'undefined') {\n                    enabled = !enabled;\n                } else {\n                    enabled = value;\n                }\n            }\n        });\n    }\n    // -------------------------------------------------------------------------\n    // :: COMMAND LINE PLUGIN\n    // -------------------------------------------------------------------------\n    var cmd_index = 0;\n    $.cmd = {\n        defaults: {\n            mask: false,\n            caseSensitiveSearch: true,\n            historySize: 60,\n            prompt: '> ',\n            enabled: true,\n            history: true,\n            onPositionChange: $.noop,\n            onCommandChange: $.noop,\n            clickTimeout: 200,\n            holdTimeout: 400,\n            holdRepeatTimeout: 200,\n            repeatTimeoutKeys: ['HOLD+BACKSPACE'],\n            tabs: 4\n        }\n    };\n    $.fn.cmd = function(options) {\n        var settings = $.extend({}, $.cmd.defaults, options);\n        var self = this;\n        var maybe_data = self.data('cmd');\n        if (maybe_data) {\n            return maybe_data;\n        }\n        var id = cmd_index++;\n        self.addClass('cmd');\n        self.append('<span class=\"prompt\"></span>');\n        self.append('<div class=\"cursor-line\">' +\n                    '<span></span>' +\n                    '<span class=\"cursor\">&nbsp;</span>' +\n                    '<span></span>' +\n                    '</div>');\n        // a11y: don't read command it's in textarea that's in focus\n        a11y_hide(self.find('.cursor-line'));\n        // on mobile the only way to hide textarea on desktop it's needed because\n        // textarea show up after focus\n        //self.append('<span class=\"mask\"></mask>');\n        var clip = $('<textarea>').attr({\n            autocapitalize: 'off',\n            spellcheck: 'false',\n            tabindex: 1\n        }).addClass('clipboard').appendTo(self).val(' ');\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        var num_chars; // calculated by draw_prompt\n        var last_rendered_prompt;\n        var prompt_last_line;\n        var prompt_len;\n        var prompt_node = self.find('.prompt');\n        var reverse_search = false;\n        var rev_search_str = '';\n        var reverse_search_position = null;\n        var backup_prompt;\n        var command = '';\n        var last_command;\n        // text from selection using CTRL+SHIFT+C (as in Xterm)\n        var kill_text = ''; // text from command that kill part of the command\n        var position = 0;\n        var prompt;\n        var enabled;\n        var formatted_position = 0;\n        var name, history;\n        var cursor = self.find('.cursor');\n        var animation;\n        var restart_animation;\n        var paste_count = 0;\n        function get_char_pos(e) {\n            var node = $(e.target);\n            if (node.is('span')) {\n                node = node.closest('[data-text]');\n                return node.index() +\n                    node.parent('span').prevAll().find('[data-text]').length +\n                    node.closest('[role=\"presentation\"]')\n                        .prevUntil('.prompt').find('[data-text]').length;\n            } else if (node.is('div[role=\"presentation\"]')) {\n                var last = !node.nextUntil('textarea').length;\n                return node.find('span[data-text]').length +\n                    node.prevUntil('.prompt').find('span[data-text]').length -\n                    (last ? 0 : 1);\n            }\n        }\n        // IE mapping\n        var key_mapping = {\n            'SPACEBAR': ' ',\n            'UP': 'ARROWUP',\n            'DOWN': 'ARROWDOWN',\n            'LEFT': 'ARROWLEFT',\n            'RIGHT': 'ARROWRIGHT',\n            'DEL': 'DELETE',\n            'MULTIPLY': '*',\n            'DIVIDE': '/',\n            'SUBTRACT': '-',\n            'ADD': '+'\n        };\n        function get_key(e) {\n            if (e.key) {\n                var key = e.key.toUpperCase();\n                if (key_mapping[key]) {\n                    key = key_mapping[key];\n                }\n                if (key === 'CONTROL') {\n                    return 'CTRL';\n                } else {\n                    var combo = [];\n                    if (e.ctrlKey) {\n                        combo.push('CTRL');\n                    }\n                    if (e.metaKey && key !== 'META') {\n                        combo.push('META');\n                    }\n                    if (e.shiftKey && key !== 'SHIFT') {\n                        combo.push('SHIFT');\n                    }\n                    if (e.altKey && key !== 'ALT') {\n                        combo.push('ALT');\n                    }\n                    if (combo.length && key === ' ') {\n                        key = 'SPACEBAR';\n                    }\n                    if (e.key) {\n                        combo.push(key);\n                    }\n                    return combo.join('+');\n                }\n            }\n        }\n        var keymap;\n        var default_keymap = {\n            'ALT+D': delete_word(true),\n            'HOLD+DELETE': delete_word(false),\n            'HOLD+SHIFT+DELETE': delete_word(false),\n            'ENTER': function() {\n                if (history && command && !settings.mask &&\n                    (is_function(settings.historyFilter) &&\n                     settings.historyFilter(command)) ||\n                    (settings.historyFilter instanceof RegExp &&\n                     command.match(settings.historyFilter)) ||\n                    !settings.historyFilter) {\n                    history.append(command);\n                }\n                var tmp = command;\n                history.reset();\n\n                // for next input event on firefox/android with google keyboard\n                prev_command = '';\n                no_keydown = true;\n\n                self.set('');\n                if (settings.commands) {\n                    settings.commands.call(self, tmp);\n                }\n                if (is_function(prompt)) {\n                    draw_prompt();\n                }\n                clip.val('');\n                return false;\n            },\n            'SHIFT+ENTER': function() {\n                self.insert('\\n');\n                return true;\n            },\n            'BACKSPACE': backspace_key,\n            'SHIFT+BACKSPACE': backspace_key,\n            'TAB': function() {\n                self.insert('\\t');\n            },\n            'CTRL+D': function() {\n                self['delete'](1);\n                return false;\n            },\n            'DELETE': function() {\n                self['delete'](1);\n                return true;\n            },\n            'ARROWUP': prev_history,\n            'CTRL+P': prev_history,\n            'ARROWDOWN': next_history,\n            'CTRL+N': next_history,\n            'ARROWLEFT': left,\n            'HOLD+ARROWLEFT': left,\n            'CTRL+B': left,\n            'CTRL+ARROWLEFT': function() {\n                // jump to one character after last space before prevoius word\n                var len = position - 1;\n                var pos = 0;\n                if (command[len] === ' ') {\n                    --len;\n                }\n                for (var i = len; i > 0; --i) {\n                    if (command[i] === ' ' && command[i + 1] !== ' ') {\n                        pos = i + 1;\n                        break;\n                    } else if (command[i] === '\\n' &&\n                               command[i + 1] !== '\\n') {\n                        pos = i;\n                        break;\n                    }\n                }\n                self.position(pos);\n            },\n            'CTRL+R': function() {\n                if (reverse_search) {\n                    reverse_history_search(true);\n                } else {\n                    backup_prompt = prompt;\n                    draw_reverse_prompt();\n                    last_command = command;\n                    self.set('');\n                    redraw();\n                    reverse_search = true;\n                }\n                return false;\n            },\n            'CTRL+G': function() {\n                if (reverse_search) {\n                    prompt = backup_prompt;\n                    draw_prompt();\n                    self.set(last_command);\n                    redraw();\n                    reverse_search = false;\n                    rev_search_str = '';\n                    return false;\n                }\n            },\n            'ARROWRIGHT': right,\n            'HOLD+ARROWRIGHT': right,\n            'CTRL+F': right,\n            'CTRL+ARROWRIGHT': function() {\n                // jump to beginning or end of the word\n                if (command[position] === ' ') {\n                    ++position;\n                }\n                var re = /\\S[\\n\\s]{2,}|[\\n\\s]+\\S?/;\n                var match = command.slice(position).match(re);\n                if (!match || match[0].match(/^\\s+$/)) {\n                    self.position(text(command).length);\n                } else if (match[0][0] !== ' ') {\n                    position += match.index + 1;\n                } else {\n                    position += match.index + match[0].length - 1;\n                    if (match[0][match[0].length - 1] !== ' ') {\n                        --position;\n                    }\n                }\n                redraw();\n            },\n            'F12': return_true, // Allow Firebug\n            'END': end,\n            'CTRL+E': end,\n            'HOME': home,\n            'CTRL+A': home,\n            'SHIFT+INSERT': paste_event,\n            'CTRL+SHIFT+T': return_true, // open closed tab\n            'CTRL+W': delete_word_backward(true),\n            'HOLD+BACKSPACE': delete_word_backward(false),\n            'HOLD+SHIFT+BACKSPACE': delete_word_backward(false),\n            'CTRL+H': function() {\n                if (command !== '' && position > 0) {\n                    self['delete'](-1);\n                }\n                return false;\n            },\n            'CTRL+X': return_true,\n            'CTRL+C': return_true,\n            'CTRL+T': return_true,\n            'CTRL+Y': function() {\n                if (kill_text !== '') {\n                    self.insert(kill_text);\n                }\n            },\n            'CTRL+V': paste_event,\n            'META+V': paste_event,\n            'CTRL+K': function() {\n                var len = text(command).length;\n                if (len > position) {\n                    kill_text = self['delete'](len - position);\n                    text_to_clipboard(self, kill_text);\n                }\n                return false;\n            },\n            'CTRL+U': function() {\n                if (command !== '' && position !== 0) {\n                    kill_text = self['delete'](-position);\n                    text_to_clipboard(self, kill_text);\n                }\n                return false;\n            },\n            'CTRL+TAB': function() {\n                return false;\n            },\n            'META+`': return_true, // CMD+` switch browser window on Mac\n            'META+R': return_true, // CMD+R page reload in Chrome Mac\n            'META+L': return_true // CLD+L jump into Ominbox on Chrome Mac\n        };\n        // -------------------------------------------------------------------------------\n        function delete_word(clipboard) {\n            return function delete_word() {\n                var re = / *[^ ]+ *(?= )|[^ ]+$/;\n                var substring = command.slice(position);\n                var m = substring.match(re);\n                if (m) {\n                    kill_text = m[0];\n                    if (clipboard) {\n                        text_to_clipboard(self, kill_text);\n                    }\n                }\n                self.set(\n                    command.slice(0, position) +\n                        command.slice(position).replace(re, ''),\n                    true\n                );\n                // chrome jump to address bar\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function delete_word_backward(clipboard) {\n            return function delete_word_backward() {\n                // don't work in Chromium (can't prevent close tab)\n                if (command !== '' && position !== 0) {\n                    var m = command.slice(0, position).match(/([^ ]+ *$)/);\n                    if (m[0].length) {\n                        kill_text = self['delete'](-m[0].length);\n                        if (clipboard) {\n                            text_to_clipboard(self, kill_text);\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        // -------------------------------------------------------------------------------\n        function return_true() {\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function paste_event() {\n            clip.val('');\n            paste_count = 0;\n            if (self.isenabled() && !clip.is(':focus')) {\n                clip.trigger('focus', [true]);\n            }\n            clip.one('input', paste);\n            return true;\n        }\n        // -------------------------------------------------------------------------------\n        function prev_history() {\n            if (first_up_history) {\n                last_command = command;\n                self.set(history.current());\n            } else {\n                self.set(history.previous());\n            }\n            first_up_history = false;\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function next_history() {\n            self.set(history.end() ? last_command : history.next());\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function backspace_key() {\n            if (reverse_search) {\n                rev_search_str = rev_search_str.slice(0, -1);\n                draw_reverse_prompt();\n            } else if (command !== '' && position > 0) {\n                self['delete'](-1);\n            }\n            // for next input after naitve backspace\n            // we need timeout because we don't want it to trigger\n            // for current input but next one\n            self.oneTime(1, function() {\n                no_keydown = true;\n            });\n        }\n        // -------------------------------------------------------------------------------\n        function left() {\n            if (position > 0) {\n                self.position(-1, true);\n                redraw();\n            }\n        }\n        // -------------------------------------------------------------------------------\n        function right() {\n            if (position < text(command).length) {\n                self.position(1, true);\n            }\n            return false;\n        }\n        // -------------------------------------------------------------------------------\n        function home() {\n            self.position(0);\n        }\n        // -------------------------------------------------------------------------------\n        function end() {\n            self.position(text(command).length);\n        }\n        // -------------------------------------------------------------------------------\n        function mobile_focus() {\n            //if (is_touch) {\n            var focus = clip.is(':focus');\n            if (enabled) {\n                if (!focus) {\n                    //clip.trigger('focus', [true]);\n                }\n                self.oneTime(10, function() {\n                    if (!clip.is(':focus') && enabled) {\n                        clip.trigger('focus', [true]);\n                    }\n                });\n            } else if (focus && (is_mobile || !enabled)) {\n                clip.trigger('blur', [true]);\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // fix for .cursor span animation that should only be applied when\n        // animation is equal to terminal-blink\n        // -------------------------------------------------------------------------------\n        function fix_cursor() {\n            if (animation_supported) {\n                var style = window.getComputedStyle(cursor[0]);\n                var animationName = style.getPropertyValue('--animation');\n                animationName = animationName.replace(/^\\s*|\\s*$/g, '');\n                var _class = self.attr('class');\n                if (_class.match(/-animation/)) {\n                    _class = _class.replace(/[a-z]+-animation/g, '');\n                }\n                if (animationName && !animationName.match(/blink/)) {\n                    var className = animationName.replace(/terminal-/, '') + '-animation';\n                    if (!_class.match(className)) {\n                        _class += ' ' + className;\n                    }\n                }\n                if (_class !== self.attr('class')) {\n                    self.attr('class', _class);\n                }\n            }\n        }\n        // -------------------------------------------------------------------------------\n        // on mobile you can't delete character if input is empty (event\n        // will not fire) so we fake text entry, we could just put dummy\n        // data but we put real command and position\n        // -------------------------------------------------------------------------------\n        function fix_textarea(position_only) {\n            if (!self.isenabled()) {\n                return;\n            }\n            // delay worked while experimenting\n            self.oneTime(10, function() {\n                // we use space before command to show select all context menu\n                // idea taken from CodeMirror\n                if (clip.val() !== command && !position_only) {\n                    clip.val(' ' + command);\n                }\n                if (enabled) {\n                    self.oneTime(10, function() {\n                        try {\n                            // we check first to improve performance\n                            if (clip.caret() !== position + 1) {\n                                clip.caret(position + 1);\n                            }\n                        } catch (e) {\n                            // firefox throw NS_ERROR_FAILURE ignore\n                        }\n                    });\n                }\n            });\n        }\n        // -------------------------------------------------------------------------------\n        // terminal animation don't work on android because they animate\n        // 2 properties\n        // -------------------------------------------------------------------------------\n        if (animation_supported && !is_android) {\n            animation = function(toggle) {\n                if (toggle) {\n                    cursor.addClass('blink');\n                } else {\n                    cursor.removeClass('blink');\n                }\n            };\n            restart_animation = function() {\n                var new_cursor = cursor.clone();\n                new_cursor.insertBefore(cursor);\n                cursor.remove();\n                cursor = new_cursor;\n            };\n        } else {\n            var animating = false;\n            animation = function(toggle) {\n                if (toggle && !animating) {\n                    animating = true;\n                    cursor.addClass('inverted blink');\n                    self.everyTime(500, 'blink', blink);\n                } else if (animating && !toggle) {\n                    animating = false;\n                    self.stopTime('blink', blink);\n                    cursor.removeClass('inverted blink');\n                }\n            };\n            restart_animation = function() {\n                animation(false);\n                animation(true);\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Blinking cursor function\n        // ---------------------------------------------------------------------\n        function blink() {\n            cursor.toggleClass('inverted');\n        }\n        // ---------------------------------------------------------------------\n        // :: Set prompt for reverse search\n        // ---------------------------------------------------------------------\n        function draw_reverse_prompt() {\n            prompt = '(reverse-i-search)`' + rev_search_str + \"': \";\n            draw_prompt();\n        }\n        // ---------------------------------------------------------------------\n        // :: Disable reverse search\n        // ---------------------------------------------------------------------\n        function clear_reverse_state() {\n            prompt = backup_prompt;\n            reverse_search = false;\n            reverse_search_position = null;\n            rev_search_str = '';\n        }\n        // ---------------------------------------------------------------------\n        // :: Search through command line history. If next is not defined or\n        // :: false it searches for the first item from the end. If true it\n        // :: search for the next item\n        // ---------------------------------------------------------------------\n        function reverse_history_search(next) {\n            var history_data = history.data();\n            var regex, save_string;\n            var len = history_data.length;\n            if (next && reverse_search_position > 0) {\n                len -= reverse_search_position;\n            }\n            if (rev_search_str.length > 0) {\n                for (var j = rev_search_str.length; j > 0; j--) {\n                    save_string = $.terminal.escape_regex(rev_search_str.substring(0, j));\n                    if (settings.caseSensitiveSearch) {\n                        regex = new RegExp(save_string);\n                    } else {\n                        regex = new RegExp(save_string, 'i');\n                    }\n                    for (var i = len; i--;) {\n                        if (regex.test(history_data[i])) {\n                            reverse_search_position = history_data.length - i;\n                            self.position(history_data[i].indexOf(save_string));\n                            self.set(history_data[i], true);\n                            redraw();\n                            if (rev_search_str.length !== j) {\n                                rev_search_str = rev_search_str.substring(0, j);\n                                draw_reverse_prompt();\n                            }\n                            return;\n                        }\n                    }\n                }\n            }\n            rev_search_str = ''; // clear if not found any\n        }\n        // ---------------------------------------------------------------------\n        // :: Recalculate number of characters in command line\n        // ---------------------------------------------------------------------\n        function change_num_chars() {\n            var $prompt = self.find('.prompt').html('<span>&nbsp;</span>');\n            var W = self.width();\n            var w = $prompt.find('span')[0].getBoundingClientRect().width;\n            num_chars = Math.floor(W / w);\n        }\n        // ---------------------------------------------------------------------\n        // :: Split String that fit into command line where first line need to\n        // :: fit next to prompt (need to have less characters)\n        // ---------------------------------------------------------------------\n        function get_splitted_command_line(string) {\n            function split(string) {\n                return $.terminal.split_equal(string, num_chars);\n            }\n            function skip_empty(array) {\n                // we remove lines that are leftovers after adding space at the end\n                return array.filter(function(line) {\n                    return !$.terminal.strip(line).match(/^ $/);\n                });\n            }\n            var line = prompt_node.find('.line');\n            var prompt;\n            if (line.length) {\n                prompt = line.nextUntil('.line').text();\n            } else {\n                prompt = prompt_node.text();\n            }\n            prompt = $.terminal.escape_brackets(prompt);\n            var re = new RegExp('^' + $.terminal.escape_regex(prompt));\n            var array;\n            if (string.match(/\\n/)) {\n                var tmp = string.split('\\n');\n                var first_len = num_chars - prompt_len - 1;\n                for (var i = 0; i < tmp.length - 1; ++i) {\n                    tmp[i] += ' ';\n                }\n                // split first line\n                if (strlen(tmp[0]) > first_len) {\n                    array = split(prompt + tmp[0]);\n                    array[0] = array[0].replace(re, '');\n                    array = skip_empty(array);\n                } else {\n                    array = [tmp[0]];\n                }\n                // process rest of the lines\n                for (i = 1; i < tmp.length; ++i) {\n                    if (strlen(tmp[i]) > num_chars) {\n                        var splitted = split(tmp[i]);\n                        if (i < tmp.length - 1) {\n                            splitted = skip_empty(splitted);\n                        }\n                        array = array.concat(splitted);\n                    } else {\n                        array.push(tmp[i]);\n                    }\n                }\n            } else {\n                array = split(prompt + string, num_chars);\n                array[0] = array[0].replace(re, '');\n            }\n            // fix issue with cursor that was cut off #379\n            if (array.length > 1 && array[array.length - 1].length === num_chars) {\n                array.push('');\n            }\n            return array;\n        }\n        // ---------------------------------------------------------------------\n        // :: use custom formatting\n        // ---------------------------------------------------------------------\n        function formatting(string, skip_formatted_position) {\n            // we don't want to format command when user type formatting in\n            try {\n                string = $.terminal.escape_formatting(string);\n                var options = $.extend({}, settings, {\n                    unixFormattingEscapeBrackets: true,\n                    position: position\n                });\n                var formatted = $.terminal.apply_formatters(string, options);\n                var output = formatted[0];\n                var max = $.terminal.length(output);\n                if (!skip_formatted_position) {\n                    formatted_position = formatted[1];\n                    // fix issue with nested formatting where max length\n                    // is checked before nested_formatting flatten formatting\n                    if (formatted_position > max) {\n                        formatted_position = max;\n                    }\n                }\n                output = $.terminal.normalize(output);\n                return output;\n            } catch (e) {\n                alert_exception('[Formatting]', e.stack);\n                return string;\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: format and encode the string\n        // ---------------------------------------------------------------------\n        function format(string, before) {\n            var encoded = $.terminal.encode(wrap(string), {\n                tabs: settings.tabs,\n                before: before\n            });\n            string = $.terminal.format(encoded, {\n                char_width: settings.char_width\n            });\n            var re = /(<span[^>]+data-text[^>]+>)(.*?)(<\\/span>)/g;\n            return string.replace(re, '$1<span>$2</span>$3');\n        }\n        // ---------------------------------------------------------------------\n        // :: function create new string with all characters in it's own\n        // :: formatting - it will only have style if the input is formatting\n        // :: this function is not very usefull so it's not in $.terminal\n        // ---------------------------------------------------------------------\n        function wrap(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\\\]$/)) {\n                        string = string.replace(/\\\\]/g, '\\\\\\\\]');\n                    }\n                } else {\n                    if (string.match(/\\\\$/)) {\n                        string += '\\\\';\n                    }\n                    string = '[[;;]' + string + ']';\n                }\n                return string;\n            }\n            var len = length(string);\n            if (len === 1) {\n                return formatting(string);\n            }\n            var result = [];\n            // len - 1 break the command line $.terminal.substring will return\n            // empty string for out of bound indexes\n            for (var i = 0; i < len; ++i) {\n                var text = $.terminal.substring(string, i, i + 1);\n                result.push(formatting(text));\n            }\n            return result.join('');\n        }\n        // ---------------------------------------------------------------------\n        // :: shortcut helpers\n        // ---------------------------------------------------------------------\n        function length(str) {\n            return $.terminal.length(str);\n        }\n        // ---------------------------------------------------------------------\n        function substring(str, start, end) {\n            return $.terminal.substring(str, start, end);\n        }\n        // ---------------------------------------------------------------------\n        // :: Function that displays the command line. Split long lines and\n        // :: place cursor in the right place\n        // ---------------------------------------------------------------------\n        var redraw = (function() {\n            var before = cursor.prev();\n            var after = cursor.next();\n            var cursor_line = cursor.parent();\n            // -----------------------------------------------------------------\n            // :: Draw line with the cursor\n            // -----------------------------------------------------------------\n            function draw_cursor_line(string, options) {\n                var settings = $.extend({\n                    prompt: '',\n                    last: false\n                }, options);\n                var position = settings.position;\n                var len = length(string);\n                var prompt = settings.prompt;\n                var c;\n                if (position === len) {\n                    before.html(format(string));\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else if (position === 0) {\n                    before.html('');\n                    c = substring(string, 0, 1);\n                    cursor.html(format(c));\n                    after.html(format(substring(string, 1), prompt + c));\n                } else {\n                    var before_str = $.terminal.substring(string, 0, position);\n                    before.html(format(before_str, prompt));\n                    c = substring(string, position, position + 1);\n                    var c_before = (prompt + before_str).replace(/^.*\\t/, '');\n                    cursor.html(format(c, c_before));\n                    if (position === len - 1) {\n                        after.html('');\n                    } else {\n                        if (c.match(/\\t/)) {\n                            c_before = '';\n                        } else {\n                            c_before += c;\n                        }\n                        after.html(format(substring(string, position + 1), c_before));\n                    }\n                }\n                // fix for command line selection\n                var noselect = settings.position === (settings.last ? len : len - 1);\n                cursor.toggleClass('noselect', noselect);\n                // fix for animation when changing --animation dynamically\n                fix_cursor();\n                var cursor_len = $.terminal.length(cursor.text());\n                if (cursor_len > 1) {\n                    var node = cursor.find('[data-text]')[0];\n                    node.style.setProperty('--length', cursor_len);\n                }\n                // synchronize css animations (it's not that important because if user\n                // will change animation she should disable animation on span, but it\n                // looks nicer until she disable that inner animation)\n                restart_animation();\n            }\n            function div(string, before) {\n                return '<div role=\"presentation\" aria-hidden=\"true\">' +\n                    format(string, before || '') +\n                    '</div>';\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines after the cursor\n            // -----------------------------------------------------------------\n            function lines_after(lines) {\n                var last_ins = cursor_line;\n                $.each(lines, function(i, line) {\n                    last_ins = $(div(line)).insertAfter(last_ins);\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Display lines before the cursor\n            // -----------------------------------------------------------------\n            function lines_before(lines) {\n                $.each(lines, function(i, line) {\n                    cursor_line.before(div(line, i === 0 ? prompt_last_line : ''));\n                });\n            }\n            // -----------------------------------------------------------------\n            // :: Redraw function\n            // -----------------------------------------------------------------\n            return function() {\n                var string;\n                switch (typeof settings.mask) {\n                    case 'boolean':\n                        string = settings.mask ? command.replace(/./g, '*') : command;\n                        break;\n                    case 'string':\n                        string = command.replace(/./g, settings.mask);\n                        break;\n                }\n                var formatted = formatting(string);\n                var pos;\n                if (length(formatted) === text(string).length) {\n                    pos = position;\n                } else {\n                    pos = formatted_position;\n                }\n                var i;\n                self.find('div:not(.cursor-line,.clipboard-wrapper)').remove();\n                before.html('');\n                // long line\n                if (strlen(text(formatted)) > num_chars - prompt_len - 1 ||\n                    formatted.match(/\\n/)) {\n                    var tabs = formatted.match(/\\t/g);\n                    var original_string = formatted;\n                    //quick tabulation hack\n                    if (tabs) {\n                        formatted = formatted.replace(/\\t/g, '\\x00\\x00\\x00\\x00');\n                    }\n                    var array = get_splitted_command_line(formatted);\n                    if (tabs) {\n                        array = $.map(array, function(line) {\n                            return line.replace(/\\x00\\x00\\x00\\x00/g, '\\t');\n                        });\n                    }\n                    var first_len = length(array[0]);\n                    //cursor in first line\n                    if (first_len === 0 && array.length === 1) {\n                        // skip empty line\n                    } else if (pos < first_len) {\n                        draw_cursor_line(array[0], {\n                            position: pos,\n                            prompt: prompt_last_line\n                        });\n                        lines_after(array.slice(1));\n                    } else if (pos === first_len) {\n                        // first char acter of second line\n                        cursor_line.before(div(array[0], prompt_last_line));\n                        draw_cursor_line(array[1] || '', {position: 0});\n                        if (array.length > 1) {\n                            lines_after(array.slice(2));\n                        }\n                    } else {\n                        var last = array.slice(-1)[0];\n                        var len = length(original_string);\n                        var from_last = len - pos;\n                        var last_len = length(last);\n                        var new_pos = 0;\n                        if (from_last === -1) {\n                            from_last = 0;\n                        }\n                        if (from_last <= last_len) { // in last line\n                            lines_before(array.slice(0, -1));\n                            if (last_len === from_last) {\n                                new_pos = 0;\n                            } else {\n                                new_pos = last_len - from_last;\n                            }\n                            draw_cursor_line(last, {\n                                position: new_pos,\n                                last: true\n                            });\n                        } else {\n                            // more lines, cursor in the middle\n                            var line_index;\n                            var current;\n                            new_pos = pos;\n                            for (i = 0; i < array.length; ++i) {\n                                var current_len = $.terminal.length(array[i]);\n                                if (new_pos > current_len) {\n                                    new_pos -= current_len;\n                                } else {\n                                    break;\n                                }\n                            }\n                            current = array[i];\n                            line_index = i;\n                            // cursor on first character in line\n                            if (new_pos === length(current)) {\n                                new_pos = 0;\n                                current = array[++line_index];\n                                if (current === undefined) {\n                                    //should never happen\n                                    var msg = $.terminal.defaults.strings.redrawError;\n                                    throw new Error(msg);\n                                }\n                            }\n                            draw_cursor_line(current, {\n                                position: new_pos\n                            });\n                            lines_before(array.slice(0, line_index));\n                            lines_after(array.slice(line_index + 1));\n                        }\n                    }\n                    self.find('.cursor-line ~ div:last-of-type').append('<span></span>');\n                } else if (formatted === '') {\n                    before.html('');\n                    cursor.html('<span><span>&nbsp;</span></span>');\n                    after.html('');\n                } else {\n                    draw_cursor_line(formatted, {position: pos});\n                }\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: find position that match display position for commands that\n        // :: change length by formatters\n        // ---------------------------------------------------------------------\n        var find_position = (function() {\n            function cmp(search_pos, pos) {\n                var opts = $.extend({}, settings, {\n                    position: pos\n                });\n                var guess = $.terminal.apply_formatters(command, opts)[1];\n                if (guess === search_pos) {\n                    return 0;\n                } else if (guess < search_pos) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }\n            return function(string, formatted_position) {\n                if (formatted_position === 0) {\n                    return 0;\n                }\n                string = text(string);\n                var codepoint_len = string.length;\n                var pos = binary_search(0, codepoint_len, formatted_position, cmp);\n                var chars = $.terminal.split_characters(string);\n                if (codepoint_len > chars.length) {\n                    var len = 0;\n                    for (var i = 0; i < chars.length; ++i) {\n                        len += chars[i].length;\n                        if (len >= pos) {\n                            return len;\n                        }\n                    }\n                }\n                return pos;\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Draw prompt that can be a function or a string\n        // ---------------------------------------------------------------------\n        var draw_prompt = (function() {\n            function set(prompt) {\n                prompt = $.terminal.apply_formatters(prompt, {});\n                prompt = $.terminal.normalize(prompt);\n                prompt = crlf(prompt);\n                last_rendered_prompt = prompt;\n                var lines = $.terminal.split_equal(prompt, num_chars);\n                var options = {\n                    char_width: settings.char_width\n                };\n                prompt_last_line = lines[lines.length - 1];\n                var encoded_last_line = $.terminal.encode(lines[lines.length - 1], {\n                    tabs: settings.tabs\n                });\n                var last_line = $.terminal.format(encoded_last_line, options);\n                var formatted = lines.slice(0, -1).map(function(line) {\n                    line = $.terminal.encode(line, {\n                        tabs: settings.tabs\n                    });\n                    return '<span class=\"line\">' +\n                        $.terminal.format(line, options) +\n                        '</span>';\n                }).concat([last_line]).join('\\n');\n                // update prompt if changed\n                if (prompt_node.html() !== formatted) {\n                    prompt_node.html(formatted);\n                    prompt_len = strlen(text(encoded_last_line));\n                }\n            }\n            return function() {\n                switch (typeof prompt) {\n                    case 'string':\n                        set(prompt);\n                        break;\n                    case 'function':\n                        prompt.call(self, set);\n                        break;\n                }\n            };\n        })();\n        // ---------------------------------------------------------------------\n        // :: Paste content to terminal using hidden textarea\n        // ---------------------------------------------------------------------\n        function paste() {\n            if (paste_count++ > 0) {\n                return;\n            }\n            if (self.isenabled()) {\n                //wait until Browser insert text to textarea\n                self.oneTime(100, function() {\n                    self.insert(clip.val());\n                    clip.val(command);\n                    fix_textarea();\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        function fire_change_command() {\n            if (is_function(settings.onCommandChange)) {\n                settings.onCommandChange.call(self, command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function clean(string) {\n            return string.replace(/((?!\\\\).)\\\\(?:&#93;|])/g, '$1&#93;');\n        }\n        // ---------------------------------------------------------------------\n        // :: Command Line Methods\n        // ---------------------------------------------------------------------\n        $.extend(self, {\n            option: function(name, value) {\n                if (typeof value === 'undefined') {\n                    return settings[name];\n                } else {\n                    settings[name] = value;\n                }\n                return self;\n            },\n            name: function(string) {\n                if (string !== undefined) {\n                    name = string;\n                    var enabled = history && history.enabled() || !history;\n                    history = new History(\n                        name,\n                        settings.historySize,\n                        settings.history === 'memory'\n                    );\n                    // disable new history if old was disabled\n                    if (!enabled) {\n                        history.disable();\n                    }\n                    return self;\n                } else {\n                    return name;\n                }\n            },\n            purge: function() {\n                history.clear();\n                return self;\n            },\n            history: function() {\n                return history;\n            },\n            'delete': function(n, stay) {\n                var removed, string;\n                if (n === 0) {\n                    return \"\";\n                } else if (n < 0) {\n                    if (position > 0) {\n                        // this may look weird but if n is negative we need\n                        // to use +\n                        removed = command.slice(0, position).slice(n);\n                        string = text(command);\n                        string = string.slice(0, position + n) +\n                            string.slice(position, string.length);\n                        if (!stay) {\n                            self.position(position + n);\n                        }\n                        fire_change_command();\n                    }\n                } else if (command !== '') {\n                    string = text(command);\n                    if (position < string.length) {\n                        removed = string.slice(position).slice(0, n);\n                        string = string.slice(0, position) +\n                            string.slice(position + n, string.length);\n                    }\n                    fire_change_command();\n                }\n                if (removed) {\n                    command = clean(string);\n                }\n                redraw();\n                fix_textarea();\n                return removed;\n            },\n            set: function(string, stay, silent) {\n                if (string !== undefined) {\n                    command = clean(string);\n                    if (!stay) {\n                        self.position(text(command).length);\n                    }\n                    redraw();\n                    fix_textarea();\n                    if (!silent) {\n                        fire_change_command();\n                    }\n                }\n                return self;\n            },\n            keymap: function(new_keymap, value) {\n                function wrap(key, fn) {\n                    var original = default_keymap[key];\n                    if (is_function(original)) {\n                        original = original.bind(self);\n                    }\n                    return function(e) {\n                        // new keymap function will get default as 2nd argument\n                        return fn.call(self, e, original);\n                    };\n                }\n                if (typeof new_keymap === 'undefined') {\n                    return keymap;\n                } else if (typeof new_keymap === 'string') {\n                    if (typeof value === 'undefined') {\n                        if (keymap[new_keymap]) {\n                            return keymap[new_keymap];\n                        } else if (default_keymap[new_keymap]) {\n                            return default_keymap[new_keymap];\n                        }\n                    } else {\n                        keymap[new_keymap] = wrap(new_keymap, value);\n                    }\n                } else {\n                    keymap = $.extend(\n                        {},\n                        keymap ? keymap : default_keymap,\n                        $.omap(new_keymap || {}, wrap)\n                    );\n                    return self;\n                }\n            },\n            insert: function(string, stay) {\n                var bare_command = text(command);\n                var len = text(string).length;\n                if (position === bare_command.length) {\n                    string = bare_command + string;\n                } else if (position === 0) {\n                    string = string + bare_command;\n                } else {\n                    string = bare_command.slice(0, position) +\n                        string + bare_command.slice(position);\n                }\n                command = clean(string);\n                if (!stay) {\n                    self.position(len, true, true);\n                } else {\n                    fix_textarea();\n                }\n                redraw();\n                fire_change_command();\n                fix_textarea();\n                return self;\n            },\n            get: function() {\n                return command;\n            },\n            commands: function(commands) {\n                if (commands) {\n                    settings.commands = commands;\n                    return self;\n                } else {\n                    return commands;\n                }\n            },\n            destroy: function() {\n                doc.unbind('keypress.cmd', keypress_event);\n                doc.unbind('keydown.cmd', keydown_event);\n                doc.unbind('input.cmd', input_event);\n                self.stopTime('blink', blink);\n                self.find('.cursor').next().remove().end().prev().remove().\n                    end().remove();\n                self.find('.prompt, .clipboard').remove();\n                self.removeClass('cmd').removeData('cmd').off('.cmd');\n                return self;\n            },\n            prompt: function(user_prompt) {\n                if (user_prompt === true) {\n                    return last_rendered_prompt;\n                } else if (user_prompt === undefined) {\n                    return prompt;\n                } else {\n                    if (typeof user_prompt === 'string' ||\n                        typeof user_prompt === 'function') {\n                        prompt = user_prompt;\n                    } else {\n                        throw new Error('prompt must be a function or string');\n                    }\n                    draw_prompt();\n                    // we could check if command is longer then numchars-new\n                    // prompt\n                    redraw();\n                    return self;\n                }\n            },\n            kill_text: function() {\n                return kill_text;\n            },\n            position: function(n, relative, silent) {\n                if (typeof n === 'number') {\n                    var pos = position;\n                    var len = text(command).length;\n                    if (relative) {\n                        position += n;\n                    } else if (n < 0) {\n                        position = 0;\n                    } else if (n > len) {\n                        position = len;\n                    } else {\n                        position = n;\n                    }\n                    if (pos !== position && !silent) {\n                        redraw();\n                        if (is_function(settings.onPositionChange)) {\n                            settings.onPositionChange(position, formatted_position);\n                        }\n                        fix_textarea(true);\n                    }\n                    return self;\n                } else {\n                    return position;\n                }\n            },\n            refresh: function() {\n                draw_prompt();\n                redraw();\n                return self;\n            },\n            // if formatter change length of the strings (like emoji demo) we need to keep\n            // track of two different positions one for command and one for display\n            display_position: function(n, relative) {\n                if (n === undefined) {\n                    return formatted_position;\n                } else {\n                    var string = formatting(command, true);\n                    var len = length(string);\n                    var command_len = text(command).length;\n                    var new_formatted_pos;\n                    if (relative) {\n                        new_formatted_pos = formatted_position + n;\n                    } else if (n > len) {\n                        new_formatted_pos = len;\n                    } else {\n                        new_formatted_pos = n;\n                    }\n                    if (text(string).length === length(command)) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(new_formatted_pos);\n                    }\n                    if (len === new_formatted_pos) {\n                        formatted_position = new_formatted_pos;\n                        return self.position(command_len);\n                    }\n                    var pos = find_position(command, new_formatted_pos);\n                    if (pos !== -1) {\n                        formatted_position = new_formatted_pos;\n                        self.position(pos);\n                    }\n                    return self;\n                }\n            },\n            visible: (function() {\n                var visible = self.visible;\n                return function() {\n                    visible.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            show: (function() {\n                var show = self.show;\n                return function() {\n                    show.apply(self, []);\n                    redraw();\n                    draw_prompt();\n                    return self;\n                };\n            })(),\n            resize: function(num) {\n                if (num) {\n                    num_chars = num;\n                } else {\n                    change_num_chars();\n                }\n                redraw();\n                draw_prompt();\n                return self;\n            },\n            enable: function(silient) {\n                if (!enabled) {\n                    enabled = true;\n                    self.addClass('enabled');\n                    try {\n                        clip.caret(position);\n                    } catch (e) {\n                        // firefox throw NS_ERROR_FAILURE ignore\n                    }\n                    animation(true);\n                    if (!silient) {\n                        draw_prompt();\n                    }\n                    fix_cursor();\n                    fix_textarea();\n                }\n                mobile_focus();\n                return self;\n            },\n            isenabled: function() {\n                return enabled;\n            },\n            disable: function(focus) {\n                enabled = false;\n                self.removeClass('enabled');\n                animation(false);\n                if (!focus) {\n                    mobile_focus();\n                }\n                return self;\n            },\n            mask: function(new_mask) {\n                if (typeof new_mask === 'undefined') {\n                    return settings.mask;\n                } else {\n                    settings.mask = new_mask;\n                    redraw();\n                    return self;\n                }\n            }\n        });\n        //debug_object(self, 'cmd')('display_position');\n        // ---------------------------------------------------------------------\n        // :: INIT\n        // ---------------------------------------------------------------------\n        self.name(settings.name || settings.prompt || '');\n        if (typeof settings.prompt === 'string') {\n            prompt = settings.prompt;\n        } else {\n            prompt = '> ';\n        }\n        draw_prompt();\n        if (settings.enabled === true) {\n            self.enable();\n        }\n        if (!settings.history) {\n            history.disable();\n        }\n        var first_up_history = true;\n        // prevent_keypress - hack for Android that was inserting characters on\n        // backspace\n        var prevent_keypress = false;\n        var dead_key = false;\n        var single_key = false;\n        var no_keypress = false;\n        var no_key = false;\n        var no_keydown = true;\n        var backspace = false;\n        var process = false;\n        var hold = false;\n        var hold_pause = false;\n        var skip_insert;\n        // we hold text before keydown to fix backspace for Android/Chrome/SwiftKey\n        // keyboard that generate keycode 229 for all keys #296\n        var prev_command = '';\n        // ---------------------------------------------------------------------\n        // :: Keydown Event Handler\n        // ---------------------------------------------------------------------\n        function is_backspace(e) {\n            return e.key.toUpperCase() === 'BACKSPACE' || e.which === 8;\n        }\n        // ---------------------------------------------------------------------\n        function is_single(e) {\n            return e.key && e.key.length === 1 && !e.ctrlKey;\n        }\n        // ---------------------------------------------------------------------\n        function clear_reverse_search_key(e) {\n            // arrows / Home / End / ENTER\n            return e.which === 35 || e.which === 36 ||\n                e.which === 37 || e.which === 38 ||\n                e.which === 39 || e.which === 40 ||\n                e.which === 13 || e.which === 27;\n        }\n        // ---------------------------------------------------------------------\n        function keydown_event(e) {\n            debug('keydown \"' + e.key + '\" ' + e.fake + ' ' + e.which);\n            process = (e.key || '').toLowerCase() === 'process' || e.which === 0;\n            var result;\n            dead_key = no_keypress && single_key && !is_backspace(e);\n            // special keys don't trigger keypress fix #293\n            try {\n                if (!e.fake) {\n                    single_key = is_single(e);\n                    // chrome on android support key property but it's \"Unidentified\"\n                    no_key = String(e.key).toLowerCase() === 'unidentified';\n                    backspace = is_backspace(e);\n                }\n            } catch (exception) {}\n            // keydown created in input will have text already inserted and we\n            // want text before input\n            if (e.key === \"Unidentified\") {\n                no_keydown = true;\n                // android swift keyboard have always which == 229 we will triger proper\n                // event in input with e.fake == true\n                return;\n            }\n            if (!e.fake) {\n                no_keypress = true;\n                no_keydown = false;\n            }\n            // Meta+V did bind input but it didin't happen because terminal paste\n            // prevent native insert action\n            clip.off('input', paste);\n            var key = get_key(e);\n            if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e);\n                if (result !== undefined) {\n                    //prevent_keypress = true;\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                self.oneTime(settings.holdTimeout, 'hold', function() {\n                    hold = true;\n                });\n                if (hold) {\n                    key = 'HOLD+' + key;\n                    if (hold_pause) {\n                        return;\n                    }\n                    if (settings.holdRepeatTimeout > 0 &&\n                        key.indexOf(settings.repeatTimeoutKeys) !== -1) {\n                        hold_pause = true;\n                        self.oneTime(settings.holdRepeatTimeout, 'delay', function() {\n                            hold_pause = false;\n                        });\n                    }\n                }\n                restart_animation();\n                // CTRL+V don't fire keypress in IE11\n                skip_insert = ['CTRL+V', 'META+V'].indexOf(key) !== -1;\n                if (e.which !== 38 && !(e.which === 80 && e.ctrlKey)) {\n                    first_up_history = true;\n                }\n                if (reverse_search && clear_reverse_search_key(e)) {\n                    clear_reverse_state();\n                    draw_prompt();\n                    if (e.which === 27) { // ESC\n                        self.set('');\n                    }\n                    redraw();\n                    if (e.which === 13) {\n                        keydown_event.call(this, e);\n                    }\n                } else if (is_function(keymap[key])) {\n                    result = keymap[key](e);\n                    if (result === true) {\n                        return;\n                    }\n                    if (result !== undefined) {\n                        return result;\n                    }\n                } else if (e.altKey) {\n                    return;\n                } else {\n                    prevent_keypress = false;\n                    return;\n                }\n                // this will prevent for instance backspace to go back one page\n                //prevent_keypress = true;\n                //e.preventDefault();\n            }\n        }\n        function clear_hold() {\n            self.stopTime('hold');\n            hold_pause = hold = false;\n        }\n        var doc = $(document.documentElement || window);\n        self.keymap(settings.keymap || {});\n        function keypress_event(e) {\n            debug('keypress \"' + e.key + '\" ' + e.fake);\n            clear_hold();\n            var result;\n            if (!e.fake) {\n                no_keypress = false;\n            }\n            if ((e.ctrlKey || e.metaKey) && !e.altKey) {\n                return;\n            }\n            if (prevent_keypress) {\n                return;\n            }\n            if (is_function(settings.keypress)) {\n                result = settings.keypress.call(self, e);\n                if (result !== undefined) {\n                    if (!result) {\n                        skip_insert = true;\n                    }\n                    return result;\n                }\n            }\n            if (enabled) {\n                if (e.fake) {\n                    // event created in input, we prevent inserting text\n                    // in different interpreter when keydown called pop\n                    return;\n                }\n                // key polyfill is not correct for keypress\n                // https://github.com/cvan/keyboardevent-key-polyfill/issues/15\n                var key;\n                if (is_key_native || e.fake) {\n                    key = e.key;\n                    // fixing IE inconsistency #362\n                    var normalized = key.toUpperCase();\n                    if (key_mapping[normalized]) {\n                        key = key_mapping[normalized];\n                    }\n                }\n                if (!key || no_key) {\n                    key = String.fromCharCode(e.which);\n                }\n                if ($.inArray(e.which, [13, 0, 8]) > -1) {\n                    if (e.keyCode === 123) { // for F12 which === 0\n                        return;\n                    }\n                    return false;\n                    // which === 100 - d\n                } else if (key && (!e.ctrlKey || (e.ctrlKey && e.ctrlKey)) &&\n                           (!(e.altKey && e.which === 100) || e.altKey) &&\n                           !dead_key) {\n                    // dead_key are handled by input event\n                    if (reverse_search) {\n                        rev_search_str += key;\n                        reverse_history_search();\n                        draw_reverse_prompt();\n                    } else if (key.length === 1) {\n                        self.insert(key);\n                    }\n                }\n            }\n        }\n        function event(type, chr, which) {\n            var event = $.Event(type);\n            event.which = which;\n            event.key = chr;\n            event.fake = true;\n            doc.trigger(event);\n        }\n        function input_event() {\n            debug('input ' + no_keydown + ' || ' + process + ' ((' + no_keypress +\n                  ' || ' + dead_key + ') && !' + skip_insert + ' && (' + single_key +\n                  ' || ' + no_key + ') && !' + backspace + ')');\n            // correct for fake space used for select all context menu hack\n            var val = clip.val().replace(/^ /, '');\n            // Some Androids don't fire keypress - #39\n            // if there is dead_key we also need to grab real character #158\n            // Firefox/Android with google keyboard don't fire keydown and keyup #319\n            if ((no_keydown || process || ((no_keypress || dead_key) && !skip_insert &&\n                                          (single_key || no_key) && !backspace)) &&\n                val !== command) {\n                var pos = position;\n                // backspace is set in keydown if no keydown we need to get new one\n                if (no_keydown) {\n                    var cmd = prev_command;\n                    backspace = cmd.substring(0, cmd.length - 1).length === val.length;\n                }\n                if (reverse_search) {\n                    rev_search_str = val;\n                    reverse_history_search();\n                    draw_reverse_prompt();\n                } else {\n                    var chr = val.substring(position);\n                    if (chr.length === 1 || backspace) {\n                        // we trigger events so keypress and keydown callback work\n                        if (no_keydown) {\n                            var keycode;\n                            if (backspace) {\n                                keycode = 8;\n                            } else {\n                                keycode = chr.toUpperCase().charCodeAt(0);\n                            }\n                            event('keydown', backspace ? 'Backspace' : chr, keycode);\n                        }\n                        if (no_keypress && !backspace) {\n                            event('keypress', chr, chr.charCodeAt(0));\n                        }\n                    }\n                    if (backspace) {\n                        prev_command = command;\n                        return;\n                    }\n                    // if user return false in keydown we don't want to insert text\n                    if (skip_insert) {\n                        skip_insert = false;\n                        return;\n                    }\n                    self.set(val);\n                }\n                if (backspace) {\n                    self.position(pos - 1);\n                } else {\n                    // user enter more then one character if click on complete word\n                    // on android\n                    self.position(pos + Math.abs(val.length - prev_command.length));\n                }\n            }\n            prev_command = command;\n            skip_insert = false;\n            no_keydown = true;\n        }\n        doc.bind('keypress.cmd', keypress_event).bind('keydown.cmd', keydown_event)\n            .bind('keyup.cmd', clear_hold).bind('input.cmd', input_event);\n        (function() {\n            var was_down = false;\n            var count = 0;\n            self.on('mousedown.cmd', function() {\n                was_down = true;\n            }).on('mouseup.cmd', function(e) {\n                function trigger() {\n                    var $target = $(e.target);\n                    if (!$target.is('.prompt') && down) {\n                        if (enabled) {\n                            if ($target.is('.cmd')) {\n                                self.position(text(command).length);\n                            } else {\n                                self.display_position(get_char_pos(e));\n                            }\n                        }\n                    }\n                    count = 0;\n                }\n                // we get button from event for testing normally it's on originalEvent\n                var button;\n                if (e.originalEvent === undefined) {\n                    button = e.button;\n                } else {\n                    button = e.originalEvent.button;\n                }\n                if (button === 0 && get_selected_text() === '') {\n                    var name = 'click_' + id;\n                    if (++count === 1) {\n                        var down = was_down;\n                        if (enabled) {\n                            if (settings.clickTimeout === 0) {\n                                trigger();\n                            } else {\n                                self.oneTime(settings.clickTimeout, name, trigger);\n                            }\n                        } else {\n                            count = 0;\n                        }\n                    } else {\n                        self.stopTime(name);\n                        count = 0;\n                    }\n                }\n                was_down = false;\n            });\n        })();\n        self.data('cmd', self);\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            setTimeout(function() {\n                throw new Error('key event property not supported try https://github.' +\n                                'com/inexorabletash/polyfill/blob/master/keyboard.js');\n            }, 0);\n        }\n        return self;\n    }; // cmd plugin\n    // -------------------------------------------------------------------------\n    /* eslint-disable */\n    // regex that match single character at begining and folowing combine character\n    // https://en.wikipedia.org/wiki/Combining_character\n    var combine_chr_re = /^(.(?:[\\u0300-\\u036F]|[\\u1AB0-\\u1abE]|[\\u1DC0-\\u1DF9]|[\\u1DFB-\\u1DFF]|[\\u20D0-\\u20F0]|[\\uFE20-\\uFE2F])+)/;\n    // source: https://mathiasbynens.be/notes/javascript-unicode\n    var astral_symbols_re = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // source: https://github.com/mathiasbynens/emoji-regex\n    var emoji_re = /^(\\uD83C\\uDFF4(?:\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74)\\uDB40\\uDC7F|\\u200D\\u2620\\uFE0F)|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3]))|\\uD83D\\uDC69\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC68(?:\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDB0-\\uDDB3])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF9]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD70\\uDD73-\\uDD76\\uDD7A\\uDD7C-\\uDDA2\\uDDB0-\\uDDB9\\uDDC0-\\uDDC2\\uDDD0-\\uDDFF])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDD1-\\uDDDD]))/;\n    // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n    var mobile_re = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n    var tablet_re = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\n    var format_split_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\](?:[^\\]]*[^\\\\](\\\\\\\\)*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?)/i;\n    var format_parts_re = /\\[\\[([!gbiuso]*);([^;]*);([^;\\]]*);?([^;\\]]*);?([^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]?/gi;\n    var format_exist_re = /\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]/gi;\n    var format_full_re = /^\\[\\[([!gbiuso]*;[^;\\]]*;[^;\\]]*(?:;|[^\\]()]*);?[^\\]]*)\\]([^\\]]*\\\\\\][^\\]]*|[^\\]]*|[^[]*\\[[^\\]]*)\\]$/gi;\n    var color_hex_re = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;\n    var url_re = /(\\bhttps?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var url_nf_re = /\\b(?![^\\s[\\]]*])(https?:\\/\\/(?:(?:(?!&[^;]+;)|(?=&amp;))[^\\s\"'<>\\][)])+)/gi;\n    var email_re = /((([^<>('\")[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,})))/g;\n    var command_re = /((?:\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\\/[^\\/\\\\]*(?:\\\\[\\S\\s][^\\/\\\\]*)*\\/[gimsuy]*(?=\\s|$)|(?:\\\\\\s|\\S))+)(?=\\s|$)/gi;\n    var extended_command_re = /^\\s*((terminal|cmd)::([a-z_]+)\\(([\\s\\S]*)\\))\\s*$/;\n    var format_begin_re = /(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_start_re = /^(\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\])/i;\n    var format_end_re = /\\[\\[[!gbiuso]*;[^;]*;[^\\]]*\\]?$/i;\n    var format_exec_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\]\\])/;\n    var float_re = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\n    var re_re = /^\\/((?:\\\\\\/|[^/]|\\[[^\\]]*\\/[^\\]]*\\])+)\\/([gimsuy]*)$/;\n    var string_re = /(\"(?:[^\"\\\\]|\\\\(?:\\\\\\\\)*\"|\\\\\\\\)*\"|'(?:[^'\\\\]|\\\\(?:\\\\\\\\)*'|\\\\\\\\)*')/;\n    var unclosed_strings_re = /^(?=((?:[^\"']+|\"[^\"\\\\]*(?:\\\\[^][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[^][^'\\\\]*)*')*))\\1./;\n    /* eslint-enable */\n    // -------------------------------------------------------------------------\n    // :: TOOLS\n    // -------------------------------------------------------------------------\n    // taken from https://hacks.mozilla.org/2011/09/detecting-and-generating-\n    // css-animations-in-javascript/\n    var animation_supported = (function() {\n        var animation = false,\n            domPrefixes = 'Webkit Moz O ms Khtml'.split(' '),\n            elm = document.createElement('div');\n        if (elm.style.animationName) {\n            animation = true;\n        }\n        if (animation === false) {\n            for (var i = 0; i < domPrefixes.length; i++) {\n                var name = domPrefixes[i] + 'AnimationName';\n                if (elm.style[name] !== undefined) {\n                    animation = true;\n                    break;\n                }\n            }\n        }\n        elm = null;\n        return animation;\n    })();\n    // -------------------------------------------------------------------------\n    var is_ch_unit_supported = (function() {\n        var agent = window.navigator.userAgent;\n        if (agent.match(/MSIE|Trident/) && !agent.match(/IEMobile/)) {\n            return false;\n        }\n        var div = document.createElement('div');\n        div.style.width = '1ch';\n        return div.style.width === '1ch';\n    })();\n    // -------------------------------------------------------------------------\n    var is_css_variables_supported = window.CSS && window.CSS.supports &&\n            window.CSS.supports('--fake-var', 0);\n    // -------------------------------------------------------------------------\n    var is_android = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\n    // -------------------------------------------------------------------------\n    var is_key_native = (function is_key_native() {\n        if (!('KeyboardEvent' in window && 'key' in window.KeyboardEvent.prototype)) {\n            return false;\n        }\n        var proto = window.KeyboardEvent.prototype;\n        var get = Object.getOwnPropertyDescriptor(proto, 'key').get;\n        return get.toString().match(/\\[native code\\]/);\n    })();\n    // -------------------------------------------------------------------------\n    var is_mobile = (function(a) {\n        var check = false;\n        if (mobile_re.test(a) || tablet_re.test(a.substr(0, 4))) {\n            check = true;\n        }\n        return check;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    // -------------------------------------------------------------------------\n    var strlen = (function() {\n        if (typeof wcwidth === 'undefined') {\n            return function(string) {\n                return $.terminal.length(string);\n            };\n        } else {\n            return wcwidth;\n        }\n    })();\n    // -------------------------------------------------------------------------\n    function bare_text(string) {\n        if (!string.match(/&/)) {\n            return string;\n        }\n        return $('<span>' + safe(string) + '</span>').text();\n    }\n    // -------------------------------------------------------------------------\n    function text(string) {\n        return bare_text($.terminal.strip(string));\n    }\n    // -------------------------------------------------------------------------\n    function safe(string) {\n        if (!string.match(/[<>&]/)) {\n            return string;\n        }\n        return string.replace(/&(?![^;]+;)/g, '&amp;')\n            .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n    }\n    // -------------------------------------------------------------------------\n    function crlf(string) {\n        return string.replace(/\\r/g, '');\n    }\n    // -------------------------------------------------------------------------\n    // :: function that return character from beginning of the string\n    // :: counting emoji, suroggate pairs and combine characters\n    // -------------------------------------------------------------------------\n    function get_next_character(string) {\n        var match_emoji = string.match(emoji_re);\n        if (match_emoji) {\n            return match_emoji[1];\n        } else if (string.substring(0, 2).replace(astral_symbols_re, '_') === 1) {\n            if (string.substring(1).match(combine_chr_re)) {\n                return string.substring(0, 3);\n            }\n            return string.substring(0, 2);\n        } else {\n            var match_combo = string.match(combine_chr_re);\n            if (match_combo) {\n                return match_combo[1];\n            }\n            return string[0];\n        }\n    }\n    // -------------------------------------------------------------------------\n    // normalize position for counting emoji and extra chars\n    // -------------------------------------------------------------------------\n    function normalize_position(string, position) {\n        if (position === 0) {\n            return position;\n        }\n        string = $.terminal.strip(string);\n        var result = $.terminal.split_characters(string).reduce(function(acc, chr) {\n            if (typeof acc === 'number') {\n                return acc;\n            }\n            var length = acc.length + chr.length;\n            if (length >= position) {\n                return acc.position + 1;\n            }\n            return {\n                position: acc.position + 1,\n                length: length\n            };\n        }, {position: 0, length: 0});\n        if (typeof result === 'number') {\n            return result;\n        } else {\n            return result.position;\n        }\n    }\n    // -------------------------------------------------------------------------\n    function char_width_prop(len, options) {\n        if (is_ch_unit_supported) {\n            return 'width: ' + len + 'ch';\n        } else if (!is_css_variables_supported) {\n            if (options.char_width) {\n                return 'width: ' + (options.char_width * len) + 'px';\n            }\n        } else {\n            return '--length: ' + len;\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function extra_css(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var len = strlen(bare);\n            if (len !== $.terminal.length(bare)) {\n                return char_width_prop(len, options);\n            }\n        }\n        return '';\n    }\n    // -------------------------------------------------------------------------\n    function wide_characters(text, options) {\n        if (typeof wcwidth !== 'undefined') {\n            var bare = bare_text(text);\n            var chars = $.terminal.split_characters(bare);\n            if (chars.length === 1) {\n                return text;\n            }\n            var specs = chars.map(function(chr) {\n                return {len: strlen(chr), chr: chr};\n            }).reduce(function(arr, spec) {\n                var last = arr[arr.length - 1];\n                if (last) {\n                    if (last.len !== spec.len) {\n                        return arr.concat([{\n                            sum: spec.len,\n                            len: spec.len,\n                            str: spec.chr\n                        }]);\n                    } else {\n                        arr.pop();\n                        return arr.concat([{\n                            sum: last.sum + spec.len,\n                            len: last.len,\n                            str: last.str + spec.chr\n                        }]);\n                    }\n                }\n                return [{\n                    sum: spec.len,\n                    str: spec.chr,\n                    len: spec.len\n                }];\n            }, []);\n            return specs.map(function(spec) {\n                if (spec.len === 1) {\n                    return spec.str;\n                }\n                var style = char_width_prop(spec.sum, options);\n                if (spec.sum === chars.length || !style.length) {\n                    return '<span>' + spec.str + '</span>';\n                } else {\n                    return '<span style=\"' + style + '\">' + spec.str + '</span>';\n                }\n            }).join('');\n        }\n        return text;\n    }\n    // ---------------------------------------------------------------------\n    // :: Binary search utility\n    // ---------------------------------------------------------------------\n    function binary_search(start, end, search_pos, compare_fn) {\n        var len = end - start;\n        var mid = start + Math.floor(len / 2);\n        var cmp = compare_fn(search_pos, mid);\n        if (cmp === 0) {\n            return mid;\n        } else if (cmp > 0 && len > 1) {\n            return binary_search(\n                mid,\n                end,\n                search_pos,\n                compare_fn\n            );\n        } else if (cmp < 0 && len > 1) {\n            return binary_search(\n                start,\n                mid,\n                search_pos,\n                compare_fn\n            );\n        } else {\n            return -1;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // :: Cross-Browser selection utils\n    // ---------------------------------------------------------------------\n    var get_selected_text = (function() {\n        if (window.getSelection || document.getSelection) {\n            return function() {\n                var selection = (window.getSelection || document.getSelection)();\n                if (selection.text) {\n                    return selection.text;\n                } else {\n                    return selection.toString();\n                }\n            };\n        } else if (document.selection && document.selection.type !== \"Control\") {\n            return function() {\n                return document.selection.createRange().text;\n            };\n        }\n        return function() {\n            return '';\n        };\n    })();\n    // ---------------------------------------------------------------------\n    // :: try to copy given DOM element text to clipboard\n    // -----------------------------------------------------------------------\n    function text_to_clipboard(container, text) {\n        var $div = $('<div>' + text.replace(/\\n/, '<br/>') + '<div>');\n        $div.appendTo('body');\n        select_all($div[0]);\n        try {\n            document.execCommand('copy');\n        } catch (e) {}\n        $div.remove();\n    }\n    // ---------------------------------------------------------------------\n    var get_textarea_selection = (function() {\n        var textarea = document.createElement('textarea');\n        var selectionStart = 'selectionStart' in textarea;\n        textarea = null;\n        if (selectionStart) {\n            return function(textarea) {\n                var length = textarea.selectionEnd - textarea.selectionStart;\n                return textarea.value.substr(textarea.selectionStart, length);\n            };\n        } else if (document.selection) {\n            return function() {\n                var range = document.selection.createRange();\n                return range.text();\n            };\n        } else {\n            return function() {\n                return '';\n            };\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function clear_textarea_selection(textarea) {\n        textarea.selectionStart = textarea.selectionEnd = 0;\n    }\n    // ---------------------------------------------------------------------\n    // :: return string that are common in all elements of the array\n    // ---------------------------------------------------------------------\n    function common_string(string, array, matchCase) {\n        if (!array.length) {\n            return '';\n        }\n        var type = string_case(string);\n        var result = [];\n        for (var j = string.length; j < array[0].length; ++j) {\n            var push = false;\n            var candidate = array[0].charAt(j),\n                candidateLower = candidate.toLowerCase();\n            for (var i = 1; i < array.length; ++i) {\n                push = true;\n                var current = array[i].charAt(j),\n                    currentLower = current.toLowerCase();\n                if (candidate !== current) {\n                    if (matchCase || type === 'mixed') {\n                        push = false;\n                        break;\n                    } else if (candidateLower === currentLower) {\n                        if (type === 'lower') {\n                            candidate = candidate.toLowerCase();\n                        } else if (type === 'upper') {\n                            candidate = candidate.toUpperCase();\n                        } else {\n                            push = false;\n                            break;\n                        }\n                    } else {\n                        push = false;\n                        break;\n                    }\n                }\n            }\n            if (push) {\n                result.push(candidate);\n            } else {\n                break;\n            }\n        }\n        return string + result.join('');\n    }\n    // ---------------------------------------------------------------------\n    function trigger_terminal_change(next) {\n        terminals.forEach(function(term) {\n            term.settings().onTerminalChange.call(term, next);\n        });\n    }\n    // ---------------------------------------------------------------------\n    var select = (function() {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    selection.setBaseAndExtent(start, 0, end, 1);\n                };\n            } else {\n                return function(start, end) {\n                    var selection = window.getSelection();\n                    var range = document.createRange();\n                    range.setStart(start, 0);\n                    range.setEnd(end, end.childNodes.length);\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                };\n            }\n        } else {\n            return $.noop;\n        }\n    })();\n    // ---------------------------------------------------------------------\n    function select_all(element) {\n        if (window.getSelection) {\n            var selection = window.getSelection();\n            if (selection.setBaseAndExtent) {\n                selection.setBaseAndExtent(element, 0, element, 1);\n            } else if (document.createRange) {\n                var range = document.createRange();\n                range.selectNodeContents(element);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n        }\n    }\n    // -------------------------------------------------------------------------\n    function process_command(string, fn) {\n        var array = string.match(command_re) || [];\n        if (array.length) {\n            var name = array.shift();\n            var args = $.map(array, function(arg) {\n                if (arg.match(/^[\"']/)) {\n                    arg = arg.replace(/\\n/g, '\\\\u0000\\\\u0000\\\\u0000\\\\u0000');\n                    arg = fn(arg);\n                    return arg.replace(/\\x00\\x00\\x00\\x00/g, '\\n');\n                }\n                return fn(arg);\n            });\n            var quotes = $.map(array, function(arg) {\n                var m = arg.match(/^(['\"]).*\\1$/);\n                return m && m[1] || '';\n            });\n            var rest = string.substring(name.length).trim();\n            return {\n                command: string,\n                name: name,\n                args: args,\n                args_quotes: quotes,\n                rest: rest\n            };\n        } else {\n            return {\n                command: string,\n                name: '',\n                args: [],\n                args_quotes: quotes,\n                rest: ''\n            };\n        }\n    }\n    // -------------------------------------------------------------------------\n    $.terminal = {\n        version: 'DEV',\n        date: 'Sun, 14 Oct 2018 17:35:27 +0000',\n        // colors from http://www.w3.org/wiki/CSS/Properties/color/keywords\n        color_names: [\n            'transparent', 'currentcolor', 'black', 'silver', 'gray', 'white',\n            'maroon', 'red', 'purple', 'fuchsia', 'green', 'lime', 'olive',\n            'yellow', 'navy', 'blue', 'teal', 'aqua', 'aliceblue',\n            'antiquewhite', 'aqua', 'aquamarine', 'azure', 'beige', 'bisque',\n            'black', 'blanchedalmond', 'blue', 'blueviolet', 'brown',\n            'burlywood', 'cadetblue', 'chartreuse', 'chocolate', 'coral',\n            'cornflowerblue', 'cornsilk', 'crimson', 'cyan', 'darkblue',\n            'darkcyan', 'darkgoldenrod', 'darkgray', 'darkgreen', 'darkgrey',\n            'darkkhaki', 'darkmagenta', 'darkolivegreen', 'darkorange',\n            'darkorchid', 'darkred', 'darksalmon', 'darkseagreen',\n            'darkslateblue', 'darkslategray', 'darkslategrey', 'darkturquoise',\n            'darkviolet', 'deeppink', 'deepskyblue', 'dimgray', 'dimgrey',\n            'dodgerblue', 'firebrick', 'floralwhite', 'forestgreen', 'fuchsia',\n            'gainsboro', 'ghostwhite', 'gold', 'goldenrod', 'gray', 'green',\n            'greenyellow', 'grey', 'honeydew', 'hotpink', 'indianred', 'indigo',\n            'ivory', 'khaki', 'lavender', 'lavenderblush', 'lawngreen',\n            'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan',\n            'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightgrey',\n            'lightpink', 'lightsalmon', 'lightseagreen', 'lightskyblue',\n            'lightslategray', 'lightslategrey', 'lightsteelblue', 'lightyellow',\n            'lime', 'limegreen', 'linen', 'magenta', 'maroon',\n            'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple',\n            'mediumseagreen', 'mediumslateblue', 'mediumspringgreen',\n            'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream',\n            'mistyrose', 'moccasin', 'navajowhite', 'navy', 'oldlace', 'olive',\n            'olivedrab', 'orange', 'orangered', 'orchid', 'palegoldenrod',\n            'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip',\n            'peachpuff', 'peru', 'pink', 'plum', 'powderblue', 'purple', 'red',\n            'rosybrown', 'royalblue', 'saddlebrown', 'salmon', 'sandybrown',\n            'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue',\n            'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue', 'tan',\n            'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'wheat',\n            'white', 'whitesmoke', 'yellow', 'yellowgreen'],\n        // for unit tests\n        Cycle: Cycle,\n        History: History,\n        Stack: Stack,\n        // ---------------------------------------------------------------------\n        // :: Validate html color (it can be name or hex)\n        // ---------------------------------------------------------------------\n        valid_color: function valid_color(color) {\n            if (color.match(color_hex_re)) {\n                return true;\n            } else {\n                return $.inArray(color.toLowerCase(), $.terminal.color_names) !== -1;\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function check if given string contain invalid strings\n        // ---------------------------------------------------------------------\n        unclosed_strings: function unclosed_strings(string) {\n            return !!string.match(unclosed_strings_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape all special regex characters, so it can be use as regex to\n        // :: match exact string that contain those characters\n        // ---------------------------------------------------------------------\n        escape_regex: function escape_regex(str) {\n            if (typeof str === 'string') {\n                var special = /([-\\\\^$[\\]()+{}?*.|])/g;\n                return str.replace(special, '\\\\$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: test if string contain formatting\n        // ---------------------------------------------------------------------\n        have_formatting: function have_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_exist_re);\n        },\n        is_formatting: function is_formatting(str) {\n            return typeof str === 'string' && !!str.match(format_full_re);\n        },\n        // ---------------------------------------------------------------------\n        // :: return array of formatting and text between them\n        // ---------------------------------------------------------------------\n        format_split: function format_split(str) {\n            return str.split(format_split_re).filter(Boolean);\n        },\n        // ---------------------------------------------------------------------\n        // :: replace that return position after replace for working with\n        // :: replacement that change length of the string\n        // :: source https://stackoverflow.com/a/46756077/387194\n        // ---------------------------------------------------------------------\n        tracking_replace: function tracking_replace(string, rex, replacement, position) {\n            function substring(string, start, end) {\n                return string.substring(start, end);\n            }\n            function length(string) {\n                return $.terminal.strip(string).length;\n            }\n            var new_string = \"\";\n            var match;\n            var index = 0;\n            var rep_string;\n            var new_position = position;\n            var start;\n            rex.lastIndex = 0; // Just to be sure\n            while ((match = rex.exec(string))) {\n                // if regex don't have g flag lastIndex will not work\n                if (rex.global) {\n                    // Add any of the original string we just skipped\n                    var last_index = length(substring(string, 0, rex.lastIndex));\n                    start = last_index - length(match[0]);\n                } else {\n                    start = match.index;\n                    last_index = start + length(match[0]);\n                }\n                if (index < start) {\n                    new_string += substring(string, index, start);\n                }\n                index = last_index;\n                // Build the replacement string. This just handles $$ and $n,\n                // you may want to add handling for $`, $', and $&.\n                if (typeof replacement === 'function') {\n                    rep_string = replacement.apply(null, match);\n                } else {\n                    rep_string = replacement.replace(/\\$(\\$|\\d)/g, function(m, c0) {\n                        if (c0 === \"$\") {\n                            return \"$\";\n                        }\n                        return match[c0];\n                    });\n                }\n                // Add on the replacement\n                new_string += rep_string;\n                // If the position is affected...\n                if (start < position) {\n                    // ... update it:\n                    if (last_index < position) {\n                        // It's after the replacement, move it\n                        new_position = Math.max(\n                            0,\n                            new_position +\n                            length(rep_string) -\n                            length(match[0])\n                        );\n                    } else {\n                        // It's *in* the replacement, put it just after\n                        new_position += length(rep_string) - (position - start);\n                    }\n                }\n                // If the regular expression doesn't have the g flag, break here so\n                // we do just one replacement (and so we don't have an endless loop!)\n                if (!rex.global) {\n                    break;\n                }\n            }\n            // Add on any trailing text in the string\n            if (index < length(string)) {\n                new_string += substring(string, index);\n            }\n            // Return the string and the updated position\n            if (string === new_string) {\n                return [string, position];\n            }\n            return [new_string, new_position];\n        },\n        // ---------------------------------------------------------------------\n        // :: helper function used by substring and split_equal it loop over\n        // :: string and execute callback with text count and other data\n        // ---------------------------------------------------------------------\n        iterate_formatting: function iterate_formatting(string, callback) {\n            function is_space(i) {\n                return string.substring(i - 6, i) === '&nbsp;' ||\n                    string.substring(i - 1, i).match(/\\s/);\n            }\n            // ----------------------------------------------------------------\n            var entity_re = /^(&(?:[a-z\\d]+|#\\d+|#x[a-f\\d]+);)/i;\n            function match_entity(index) {\n                return string.substring(index).match(entity_re);\n            }\n            // ----------------------------------------------------------------\n            function is_open_formatting(i) {\n                return string[i] === '[' && string[i + 1] === '[';\n            }\n            // ----------------------------------------------------------------\n            function is_escape_bracket(i) {\n                return string[i] === '\\\\' && string[i + 1] === ']';\n            }\n            // ----------------------------------------------------------------\n            function is_text(i) {\n                return not_formatting && (string[i] !== ']' || !have_formatting)\n                    && !opening;\n            }\n            // ----------------------------------------------------------------\n            var have_formatting = $.terminal.have_formatting(string);\n            var formatting = '';\n            var in_text = false;\n            var count = 0;\n            var match;\n            var space = -1;\n            var prev_space;\n            var length = 0;\n            var offset = 0;\n            for (var i = 0; i < string.length; i++) {\n                var substring = string.substring(i);\n                match = substring.match(format_start_re);\n                if (match) {\n                    formatting = match[1];\n                    in_text = false;\n                } else if (formatting) {\n                    if (string[i] === ']') {\n                        if (in_text) {\n                            formatting = '';\n                            in_text = false;\n                        } else {\n                            in_text = true;\n                        }\n                    }\n                } else {\n                    in_text = true;\n                }\n                var not_formatting = (formatting && in_text) || !formatting;\n                var opening = is_open_formatting(i);\n                if (is_space(i) && (not_formatting || opening)) {\n                    if (space === -1 && prev_space !== i || space !== -1) {\n                        space = i;\n                    }\n                }\n                var braket = string[i].match(/[[\\]]/);\n                if (not_formatting) {\n                    // treat entity as one character\n                    if (string[i] === '&') {\n                        match = match_entity(i);\n                        if (match) {\n                            i += match[1].length - 2; // 2 because continue adds 1 to i\n                            continue;\n                        }\n                        ++count;\n                        ++length;\n                    } else if (is_escape_bracket(i)) {\n                        // escape \\] and \\\\ counts as one character\n                        ++count;\n                        ++length;\n                        offset = 1;\n                        i += 1;\n                    } else if (!braket || !have_formatting) {\n                        ++count;\n                        ++length;\n                    }\n                }\n                if (is_text(i)) {\n                    if (strlen(string[i]) === 2) {\n                        length++;\n                    }\n                    var data = {\n                        count: count,\n                        index: i - offset,\n                        formatting: formatting,\n                        length: length,\n                        text: in_text,\n                        size: offset + 1,\n                        space: space\n                    };\n                    var ret = callback(data);\n                    if (ret === false) {\n                        break;\n                    } else if (ret) {\n                        if (ret.count !== undefined) {\n                            count = ret.count;\n                        }\n                        if (ret.length !== undefined) {\n                            length = ret.length;\n                        }\n                        if (ret.space !== undefined) {\n                            prev_space = space;\n                            space = ret.space;\n                        }\n                        if (ret.index !== undefined) {\n                            i = ret.index;\n                            continue;\n                        }\n                    }\n                } else if (i === string.length - 1) {\n                    callback({\n                        count: count + 1,\n                        index: i,\n                        formatting: formatting,\n                        length: 0,\n                        text: in_text,\n                        space: space\n                    });\n                }\n                // handle emoji, suroggate pairs and combine characters\n                var char = get_next_character(substring);\n                if (char.length > 1) {\n                    i += char.length - 1;\n                }\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: formatting aware substring function\n        // ---------------------------------------------------------------------\n        substring: function substring(string, start_index, end_index) {\n            var chars = $.terminal.split_characters(text(string));\n            if (!chars.slice(start_index, end_index).length) {\n                return '';\n            }\n            var start = 0;\n            var end;\n            var start_formatting = '';\n            var end_formatting = '';\n            var prev_index;\n            var re = /(&[^;]+);$/;\n            var offset = 1;\n            $.terminal.iterate_formatting(string, function(data) {\n                var m;\n                if (start_index && data.count === start_index + 1) {\n                    start = data.index;\n                    // correct index for html entity\n                    m = string.substring(0, start + 1).match(re);\n                    if (m) {\n                        start -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        start_formatting = data.formatting;\n                    }\n                }\n                if (end_index && data.count === end_index) {\n                    end_formatting = data.formatting;\n                    prev_index = data.index;\n                    offset = data.size;\n                }\n                if (data.count === end_index + 1) {\n                    end = data.index;\n                    m = string.substring(0, end + 1).match(re);\n                    if (m) {\n                        end -= m[1].length;\n                    }\n                    if (data.formatting) {\n                        end = prev_index + offset;\n                    }\n                }\n            });\n            if (start_index && !start) {\n                return '';\n            }\n            if (end === undefined) {\n                end = string.length;\n            }\n            string = start_formatting + string.substring(start, end);\n            if (end_formatting) {\n                string = string.replace(/(\\[\\[^\\]]+)?\\]$/, '');\n                string += ']';\n            }\n            return string;\n        },\n        // ---------------------------------------------------------------------\n        // :: add format text as 5th paramter to formatting it's used for\n        // :: data attribute in format function\n        // ---------------------------------------------------------------------\n        normalize: function normalize(string) {\n            return string.replace(format_re, function(_, format, text) {\n                if (text === '') {\n                    return '';\n                }\n                function safe(string) {\n                    return string.replace(/\\\\\\]/g, '&#93;').replace(/\\n/g, '\\\\n')\n                        .replace(/&nbsp;/g, ' ');\n                }\n                format = safe(format);\n                var semicolons = format.match(/;/g).length;\n                // missing semicolons\n                if (semicolons >= 4) {\n                    var args = format.split(/;/);\n                    var start = args.slice(0, 4).join(';');\n                    var arg = args.slice(4).join(';');\n                    return '[[' + start + ';' + (arg || text) + ']' + text + ']';\n                } else if (semicolons === 2) {\n                    semicolons = ';;';\n                } else if (semicolons === 3) {\n                    semicolons = ';';\n                } else {\n                    semicolons = '';\n                }\n                // return '[[' + format + ']' + text + ']';\n                // closing braket will break formatting so we need to escape\n                // those using html entity equvalent\n                return '[[' + format + semicolons + safe(text) + ']' + text + ']';\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: split text into lines with equal length so each line can be\n        // :: rendered separately (text formatting can be longer then a line).\n        // ---------------------------------------------------------------------\n        split_equal: function split_equal(str, length, keep_words) {\n            var prev_format = '';\n            var result = [];\n            var array = $.terminal.normalize(str).split(/\\n/g);\n            for (var i = 0, len = array.length; i < len; ++i) {\n                if (array[i] === '') {\n                    result.push('');\n                    continue;\n                }\n                var line = array[i];\n                var first_index = 0;\n                var output;\n                var line_length = line.length;\n                var chars = $.terminal.split_characters(text(line));\n                var last_char = chars[chars.length - 1];\n                var end_index = line_length - (last_char ? last_char.length : 1);\n                var last_bracket = !!line.match(/\\[\\[[^\\]]+\\](?:[^\\][]|\\\\\\])+\\]$/);\n                if (last_bracket) {\n                    end_index -= 1;\n                }\n                $.terminal.iterate_formatting(line, function(data) {\n                    var last_iteraction = data.index === end_index;\n                    var chr, substring;\n                    if (data.length >= length || last_iteraction ||\n                        (data.length === length - 1 &&\n                         strlen(line[data.index + 1]) === 2)) {\n                        var can_break = false;\n                        if (keep_words && data.space !== -1) {\n                            // replace html entities with characters\n                            var stripped = text(line.substring(data.space));\n                            // real length, not counting formatting\n                            var text_len = stripped.length;\n                            var limit = data.index + length + 1;\n                            stripped = stripped.substring(0, limit);\n                            if (stripped.match(/\\s|&nbsp;/) || limit > text_len) {\n                                can_break = true;\n                            }\n                        }\n                        // if words is true we split at last space and make next loop\n                        // continue where the space where located\n                        var new_index;\n                        if (keep_words && data.space !== -1 &&\n                            data.index !== line_length - 1 && can_break) {\n                            output = line.substring(first_index, data.space);\n                            new_index = data.space - 1;\n                        } else {\n                            substring = line.substring(data.index);\n                            chr = get_next_character(substring);\n                            output = line.substring(first_index, data.index) + chr;\n                            if (last_iteraction && last_bracket && chr !== ']') {\n                                output += ']';\n                            }\n                            new_index = data.index + chr.length - 1;\n                        }\n                        if (keep_words) {\n                            output = output.replace(/^(&nbsp;|\\s)+|(&nbsp;|\\s)+$/g, '');\n                        }\n                        first_index = (new_index || data.index) + 1;\n                        if (prev_format) {\n                            var closed_formatting = output.match(/^[^\\]]*\\]/);\n                            output = prev_format + output;\n                            if (closed_formatting) {\n                                prev_format = '';\n                            }\n                        }\n                        var matched = output.match(format_re);\n                        if (matched) {\n                            var last = matched[matched.length - 1];\n                            if (last[last.length - 1] !== ']') {\n                                prev_format = last.match(format_begin_re)[1];\n                                output += ']';\n                            } else if (output.match(format_end_re)) {\n                                output = output.replace(format_end_re, '');\n                                prev_format = last.match(format_begin_re)[1];\n                            }\n                        }\n                        result.push(output);\n                        // modify loop by returing new data\n                        return {index: new_index, length: 0, space: -1};\n                    }\n                });\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: Escape & that's not part of entity\n        // ---------------------------------------------------------------------\n        amp: function amp(str) {\n            return str.replace(/&(?!#[0-9]+;|[a-zA-Z]+;)/g, '&amp;');\n        },\n        // ---------------------------------------------------------------------\n        // :: Encode formating as html for insertion into DOM\n        // ---------------------------------------------------------------------\n        encode: function encode(str, options) {\n            var settings = $.extend({\n                tabs: 4,\n                before: ''\n            }, options);\n            return $.terminal.amp(str).replace(/</g, '&lt;').replace(/>/g, '&gt;')\n                .replace(/ /g, '&nbsp;').split('\\n').map(function(line) {\n                    var splitted = line.split(/((?:\\[\\[[^\\]]+\\])?\\t(?:\\])?)/);\n                    splitted = splitted.filter(Boolean);\n                    return splitted.map(function(str, i) {\n                        if (str.match(/\\t/)) {\n                            return str.replace(/\\t([^\\t]*)$/, function(_, end) {\n                                if (i !== 0 && splitted[i - 1].match(/\\t\\]?$/)) {\n                                    var sp = new Array(settings.tabs + 1).join('&nbsp;');\n                                    return sp + end;\n                                } else {\n                                    var before = splitted.slice(i - 1, i).join('');\n                                    if (settings.before && i <= 1) {\n                                        before = settings.before + before;\n                                    }\n                                    var len = $.terminal.length(before);\n                                    var chars = settings.tabs - (len % settings.tabs);\n                                    if (chars === 0) {\n                                        chars = 4;\n                                    }\n                                    return new Array(chars + 1).join('&nbsp;') + end;\n                                }\n                            });\n                        }\n                        return str;\n                    }).join('');\n                }).join('\\n');\n        },\n        // -----------------------------------------------------------------------\n        // :: Default formatter that allow for nested formatting, example:\n        // :: [[;;#000]hello [[;#f00;]red] world]\n        // -----------------------------------------------------------------------\n        nested_formatting: function nested_formatting(string) {\n            if (!$.terminal.have_formatting(string)) {\n                return string;\n            }\n            var stack = [];\n            var re = /((?:\\[\\[(?:[^\\][]|\\\\\\])+\\])?(?:[^\\][]|\\\\\\])*\\]?)/;\n            var format_re = /(\\[\\[(?:[^\\][]|\\\\\\])+\\])[\\s\\S]*/;\n            return string.split(re).filter(Boolean).map(function(string) {\n                if (string.match(/^\\[\\[/)) {\n                    if (!$.terminal.is_formatting(string)) {\n                        string += ']';\n                        stack.push(string.replace(format_re, '$1'));\n                    }\n                } else {\n                    var pop = false;\n                    if (string.match(/\\]/)) {\n                        pop = true;\n                    }\n                    if (stack.length) {\n                        string = stack[stack.length - 1] + string;\n                    }\n                    if (pop) {\n                        stack.pop();\n                    } else if (stack.length) {\n                        string += ']';\n                    }\n                }\n                return string;\n            }).join('');\n        },\n        // ---------------------------------------------------------------------\n        // :: safe function that will render text as it is\n        // ---------------------------------------------------------------------\n        escape_formatting: function escape_formatting(string) {\n            return $.terminal.escape_brackets(string);\n        },\n        // ---------------------------------------------------------------------\n        // :: apply custom formatters only to text\n        // ---------------------------------------------------------------------\n        apply_formatters: function apply_formatters(string, settings) {\n            if (string === \"\") {\n                if (typeof settings.position === 'number') {\n                    return [\"\", settings.position];\n                } else {\n                    return \"\";\n                }\n            }\n            function test_lengths(formatter, index, ret, string) {\n                if (!formatter.__no_warn__ &&\n                    $.terminal.length(ret) !== $.terminal.length(string)) {\n                    warn('Your formatter[' + index + '] change length of the string, ' +\n                         'you should use [regex, replacement] formatter or function ' +\n                         ' that return [replacement, position] instead');\n                }\n            }\n            var formatters = $.terminal.defaults.formatters;\n            settings = settings || {};\n            var i = 0;\n            function apply_function_formatter(formatter, input) {\n                var options = $.extend({}, settings, {\n                    position: input[1]\n                });\n                var ret = formatter(input[0], options);\n                if (typeof ret === 'string') {\n                    test_lengths(formatter, i - 1, ret, input[0]);\n                    if (typeof ret === 'string') {\n                        return [ret, options.position];\n                    }\n                    return input;\n                } else if (ret instanceof Array && ret.length === 2) {\n                    return ret;\n                } else {\n                    return input;\n                }\n            }\n            var input;\n            if (typeof settings.position === 'number') {\n                input = [string, settings.position];\n            } else {\n                input = [string, 0];\n            }\n            try {\n                var result = formatters.reduce(function(input, formatter) {\n                    i++;\n                    // __meta__ is for safe formatter that can handle formatters\n                    // inside formatters. for other usage we use format_split so one\n                    // formatter don't mess with formatter that was previous\n                    // on the list\n                    if (typeof formatter === 'function' && formatter.__meta__) {\n                        return apply_function_formatter(formatter, input);\n                    } else {\n                        var length = 0;\n                        var found_position = false;\n                        var splitted = $.terminal.format_split(input[0]);\n                        var partials = splitted.map(function(string) {\n                            var position;\n                            var this_len = text(string).length;\n                            // first position that match is used for this partial\n                            if (input[1] <= length + this_len && !found_position) {\n                                position = input[1] - length;\n                                found_position = true;\n                            } else {\n                                // -1 indicate that we will not track position because it\n                                // was in one of the previous parial strings\n                                position = -1;\n                            }\n                            // length is used to correct position after replace\n                            var length_before = length;\n                            var result;\n                            length += this_len;\n                            if ($.terminal.is_formatting(string)) {\n                                return [string, -1];\n                            } else {\n                                if (formatter instanceof Array) {\n                                    var options = formatter[2] || {};\n                                    result = [string, position < 0 ? 0 : position];\n                                    if (result[0].match(formatter[0])) {\n                                        if (options.loop) {\n                                            while (result[0].match(formatter[0])) {\n                                                result = $.terminal.tracking_replace(\n                                                    result[0],\n                                                    formatter[0],\n                                                    formatter[1],\n                                                    result[1]\n                                                );\n                                            }\n                                        } else {\n                                            result = $.terminal.tracking_replace(\n                                                result[0],\n                                                formatter[0],\n                                                formatter[1],\n                                                result[1]\n                                            );\n                                        }\n                                    }\n                                    if (position < 0) {\n                                        return [result[0], -1];\n                                    }\n                                } else if (typeof formatter === 'function') {\n                                    result = apply_function_formatter(formatter, [\n                                        string, position\n                                    ]);\n                                }\n                                if (typeof result !== 'undefined') {\n                                    // correct position becuase it's relative\n                                    // to partial and we need global for whole string\n                                    if (result[1] !== -1) {\n                                        result[1] += length_before;\n                                    }\n                                    return result;\n                                }\n                                return [string, -1];\n                            }\n                        });\n                        var position_partial = partials.filter(function(partial) {\n                            return partial[1] !== -1;\n                        })[0];\n                        var string = partials.map(function(partial) {\n                            return partial[0];\n                        }).join('');\n                        var position;\n                        if (typeof position_partial === 'undefined') {\n                            position = input[1];\n                        } else {\n                            position = position_partial[1];\n                        }\n                        // to make sure that output position is not outside the string\n                        var max = text(string).length;\n                        if (position > max) {\n                            position = max;\n                        }\n                        if (string === input[0]) {\n                            return input;\n                        }\n                        return [string, position];\n                    }\n                }, input);\n                if (typeof settings.position === 'number') {\n                    var codepoint_len = $.terminal.strip(result[0]).length;\n                    if ($.terminal.length(result[0]) < codepoint_len) {\n                        var position = result[1];\n                        position = normalize_position(result[0], position);\n                        var max = $.terminal.length(result[0]);\n                        if (position > max) {\n                            position = max;\n                        }\n                        result[1] = position;\n                    }\n                    return result;\n                } else {\n                    return result[0];\n                }\n            } catch (e) {\n                var msg = 'Error in formatter [' + (i - 1) + ']';\n                formatters.splice(i - 1);\n                throw new $.terminal.Exception('formatting', msg, e.stack);\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace terminal formatting with html\n        // ---------------------------------------------------------------------\n        format: function format(str, options) {\n            function safe_text(string) {\n                if (string.match(/\\\\]/)) {\n                    string = string.replace(/(\\\\+)]/g, function(_, slashes) {\n                        if (slashes.length % 2 === 1) {\n                            return ']';\n                        } else {\n                            return slashes.replace(/../, '\\\\');\n                        }\n                    });\n                }\n                return safe(string);\n            }\n            var settings = $.extend({}, {\n                linksNoReferrer: false,\n                linksNoFollow: false,\n                anyLinks: false\n            }, options || {});\n            if (typeof str === 'string') {\n                // support for formating foo[[u;;]bar]baz[[b;#fff;]quux]zzz\n                var splitted = $.terminal.format_split(str);\n                str = $.map(splitted, function(text) {\n                    if (text === '') {\n                        return text;\n                    } else if ($.terminal.is_formatting(text)) {\n                        // fix &nbsp; inside formatting because encode is called\n                        // before format\n                        text = text.replace(/\\[\\[[^\\]]+\\]/, function(text) {\n                            return text.replace(/&nbsp;/g, ' ');\n                        });\n                        return text.replace(format_parts_re, function(\n                            s,\n                            style,\n                            color,\n                            background,\n                            _class,\n                            data_text,\n                            text\n                        ) {\n                            if (text === '') {\n                                return ''; //'<span>&nbsp;</span>';\n                            }\n                            text = safe_text(text);\n                            var style_str = '';\n                            if (style.indexOf('b') !== -1) {\n                                style_str += 'font-weight:bold;';\n                            }\n                            var text_decoration = [];\n                            if (style.indexOf('u') !== -1) {\n                                text_decoration.push('underline');\n                            }\n                            if (style.indexOf('s') !== -1) {\n                                text_decoration.push('line-through');\n                            }\n                            if (style.indexOf('o') !== -1) {\n                                text_decoration.push('overline');\n                            }\n                            if (text_decoration.length) {\n                                style_str += 'text-decoration:' +\n                                    text_decoration.join(' ') + ';';\n                            }\n                            if (style.indexOf('i') !== -1) {\n                                style_str += 'font-style:italic;';\n                            }\n                            if ($.terminal.valid_color(color)) {\n                                style_str += 'color:' + color + ';' +\n                                    '--color:' + color + ';';\n                                if (style.indexOf('g') !== -1) {\n                                    style_str += 'text-shadow:0 0 5px ' + color + ';';\n                                }\n                            }\n                            if ($.terminal.valid_color(background)) {\n                                style_str += 'background-color:' + background;\n                            }\n                            var data;\n                            if (data_text === '') {\n                                data = text;\n                            } else {\n                                data = data_text.replace(/&#93;/g, ']')\n                                    .replace(/>/g, '&gt;').replace(/</g, '&lt;');\n                            }\n                            var extra = extra_css(text, options);\n                            if (extra) {\n                                text = wide_characters(text, options);\n                                style_str += extra;\n                            }\n                            var result;\n                            if (style.indexOf('!') !== -1) {\n                                if (data.match(email_re)) {\n                                    result = '<a href=\"mailto:' + data + '\"';\n                                } else {\n                                    if (!settings.anyLinks &&\n                                        !data.match(/^((https?|ftp):\\/\\/|\\.{0,2}\\/)/)) {\n                                        data = '';\n                                    }\n                                    result = '<a target=\"_blank\"';\n                                    if (data) {\n                                        result += ' href=\"' + data + '\"';\n                                    }\n                                    var rel = [\"noopener\"];\n                                    if (settings.linksNoReferrer) {\n                                        rel.unshift(\"noreferrer\");\n                                    }\n                                    if (settings.linksNoFollow) {\n                                        rel.unshift(\"nofollow\");\n                                    }\n                                    result += ' rel=\"' + rel.join(' ') + '\"';\n                                }\n                                // make focus to terminal textarea that will enable\n                                // terminal when pressing tab and terminal is disabled\n                                result += ' tabindex=\"1000\"';\n                            } else {\n                                result = '<span';\n                            }\n                            if (style_str !== '') {\n                                result += ' style=\"' + style_str + '\"';\n                            }\n                            if (_class !== '') {\n                                result += ' class=\"' + _class + '\"';\n                            }\n                            if (style.indexOf('!') !== -1) {\n                                result += '>' + text + '</a>';\n                            } else {\n                                result += ' data-text=\"' +\n                                    data.replace(/\"/g, '&quote;') + '\">' +\n                                    text + '</span>';\n                            }\n                            return result;\n                        });\n                    } else {\n                        text = safe_text(text);\n                        var extra = extra_css(text, options);\n                        if (extra.length) {\n                            text = wide_characters(text, options);\n                            return '<span style=\"' + extra + '\">' + text + '</span>';\n                        } else {\n                            return '<span>' + text + '</span>';\n                        }\n                    }\n                }).join('');\n                return str.replace(/<span><br\\s*\\/?><\\/span>/gi, '<br/>');\n            } else {\n                return '';\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: Replace brackets with html entities\n        // ---------------------------------------------------------------------\n        escape_brackets: function escape_brackets(string) {\n            return string.replace(/\\[/g, '&#91;').replace(/\\]/g, '&#93;');\n        },\n        // ---------------------------------------------------------------------\n        // :: complmentary function\n        // ---------------------------------------------------------------------\n        unescape_brackets: function unescape_brackets(string) {\n            return string.replace(/&#91;/g, '[').replace(/&#93;/g, ']');\n        },\n        // ---------------------------------------------------------------------\n        // :: return number of characters without formatting\n        // ---------------------------------------------------------------------\n        length: function(string) {\n            return $.terminal.split_characters(text(string)).length;\n        },\n        // ---------------------------------------------------------------------\n        // :: split characters handling emoji, surogate pairs and combine chars\n        // ---------------------------------------------------------------------\n        split_characters: function split_characters(string) {\n            var result = [];\n            while (string.length) {\n                var chr = get_next_character(string);\n                string = string.substring(chr.length);\n                result.push(chr);\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: return string where array items are in columns padded spaces\n        // :: after adding align tabs arr.join('\\t\\t') looks much better\n        // ---------------------------------------------------------------------\n        columns: function(array, cols, space) {\n            var no_formatting = array.map(function(string) {\n                return $.terminal.strip(string);\n            });\n            var lengths = no_formatting.map(function(string) {\n                return strlen(string);\n            });\n            if (typeof space === 'undefined') {\n                space = 4;\n            }\n            var length = Math.max.apply(null, lengths) + space;\n            // we need value - 1 because index starts from 0\n            var column_limit = Math.floor(cols / length) - 1;\n            if (column_limit < 1) {\n                return array.join('\\n');\n            }\n            var lines = [];\n            for (var i = 0, len = array.length; i < len; i += column_limit) {\n                var line = array.slice(i, i + column_limit);\n                var last = line.pop();\n                lines.push(line.reduce(function(acc, string) {\n                    var stripped = $.terminal.strip(string);\n                    var pad = new Array(length - stripped.length + 1).join(' ');\n                    acc.push(string + pad);\n                    return acc;\n                }, []).join('') + last);\n            }\n            return lines.join('\\n');\n        },\n        // ---------------------------------------------------------------------\n        // :: Remove formatting from text\n        // ---------------------------------------------------------------------\n        strip: function strip(str) {\n            str = str.replace(format_parts_re, '$6');\n            return str.replace(/\\\\([[\\]])/g, function(whole, bracket) {\n                return bracket;\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Return active terminal\n        // ---------------------------------------------------------------------\n        active: function active() {\n            return terminals.front();\n        },\n        // ---------------------------------------------------------------------\n        // :: Implmentation detail id is always length of terminals Cycle\n        // ---------------------------------------------------------------------\n        last_id: function last_id() {\n            var len = terminals.length();\n            return len - 1;\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that works with strings like 'asd' 'asd\\' asd' \"asd asd\"\n        // :: asd\\ 123 -n -b / [^ ]+ / /\\s+/ asd\\ a it creates a regex and\n        // :: numbers and replaces escape characters in double quotes\n        // :: if strict is set to false it only strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        parse_argument: function parse_argument(arg, strict) {\n            function parse_string(string) {\n                // split string to string literals and non-strings\n                return string.split(string_re).map(function(string) {\n                    // remove quotes if before are even number of slashes\n                    // we don't remove slases becuase they are handled by JSON.parse\n                    if (string.match(/^['\"]/)) {\n                        // fixing regex to match empty string is not worth it\n                        if (string === '\"\"' || string === \"''\") {\n                            return '';\n                        }\n                        var quote = string[0];\n                        var re = new RegExp(\"(^|(?:\\\\\\\\(?:\\\\\\\\)*)?)\" + quote, \"g\");\n                        string = string.replace(re, \"$1\");\n                    }\n                    string = '\"' + string + '\"';\n                    // use build in function to parse rest of escaped characters\n                    return JSON.parse(string);\n                }).join('');\n            }\n            if (strict === false) {\n                if (arg[0] === \"'\" && arg[arg.length - 1] === \"'\") {\n                    return arg.replace(/^'|'$/g, '');\n                } else if (arg[0] === '\"' && arg[arg.length - 1] === '\"') {\n                    return arg.replace(/^\"|\"$/g, '').replace(/\\\\([\" ])/g, '$1');\n                } else if (arg.match(/\\/.*\\/[gimy]*$/)) {\n                    return arg;\n                } else if (arg.match(/['\"]]/)) {\n                    // part of arg is in quote\n                    return parse_string(arg);\n                } else {\n                    return arg.replace(/\\\\ /g, ' ');\n                }\n            }\n            var regex = arg.match(re_re);\n            if (regex) {\n                return new RegExp(regex[1], regex[2]);\n            } else if (arg.match(/['\"]/)) {\n                return parse_string(arg);\n            } else if (arg.match(/^-?[0-9]+$/)) {\n                return parseInt(arg, 10);\n            } else if (arg.match(float_re)) {\n                return parseFloat(arg);\n            } else {\n                return arg.replace(/\\\\(['\"() ])/g, '$1');\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: function split and parse arguments\n        // ---------------------------------------------------------------------\n        parse_arguments: function parse_arguments(string) {\n            return $.map(string.match(command_re) || [], $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Function split and strips single and double quotes\n        // :: and escapes spaces\n        // ---------------------------------------------------------------------\n        split_arguments: function split_arguments(string) {\n            return $.map(string.match(command_re) || [], function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :: Function that returns an object {name,args}. Arguments are parsed\n        // :: using the function parse_arguments\n        // ---------------------------------------------------------------------\n        parse_command: function parse_command(string) {\n            return process_command(string, $.terminal.parse_argument);\n        },\n        // ---------------------------------------------------------------------\n        // :: Same as parse_command but arguments are parsed using split_arguments\n        // ---------------------------------------------------------------------\n        split_command: function split_command(string) {\n            return process_command(string, function(arg) {\n                return $.terminal.parse_argument(arg, false);\n            });\n        },\n        // ---------------------------------------------------------------------\n        // :; function that parse arguments like yargs library\n        // ---------------------------------------------------------------------\n        parse_options: function parse_options(arg, options) {\n            var settings = $.extend({}, {\n                boolean: []\n            }, options);\n            if (typeof arg === 'string') {\n                return parse_options($.terminal.split_arguments(arg), options);\n            }\n            var result = {\n                _: []\n            };\n            function token(value) {\n                this.value = value;\n            }\n            var rest = arg.reduce(function(acc, arg) {\n                if (typeof arg !== 'string') {\n                    arg = String(arg);\n                }\n                if (arg.match(/^-/) && acc instanceof token) {\n                    result[acc.value] = true;\n                }\n                if (arg.match(/^--/)) {\n                    var name = arg.replace(/^--/, '');\n                    if (settings.boolean.indexOf(name) === -1) {\n                        return new token(name);\n                    } else {\n                        result[name] = true;\n                    }\n                } else if (arg.match(/^-/)) {\n                    var single = arg.replace(/^-/, '').split('');\n                    if (settings.boolean.indexOf(single.slice(-1)[0]) === -1) {\n                        var last = single.pop();\n                    }\n                    single.forEach(function(single) {\n                        result[single] = true;\n                    });\n                    if (last) {\n                        return new token(last);\n                    }\n                } else if (acc instanceof token) {\n                    result[acc.value] = arg;\n                } else if (arg) {\n                    result._.push(arg);\n                }\n                return null;\n            }, null);\n            if (rest instanceof token) {\n                result[rest.value] = true;\n            }\n            return result;\n        },\n        // ---------------------------------------------------------------------\n        // :: function executed for each text inside [{ .... }]\n        // ---------------------------------------------------------------------\n        extended_command: function extended_command(term, string, options) {\n            var settings = $.extend({\n                invokeMethods: false\n            }, options);\n            try {\n                change_hash = false;\n                var m = string.match(extended_command_re);\n                if (m) {\n                    if (!settings.invokeMethods) {\n                        warn('To invoke terminal or cmd methods you need to enable ' +\n                             'invokeMethods option');\n                        return;\n                    }\n                    string = m[1];\n                    var obj = m[2] === 'terminal' ? term : term.cmd();\n                    var fn = m[3];\n                    try {\n                        var args = eval('[' + m[4] + ']');\n                        if (!obj[fn]) {\n                            term.error('Unknow function ' + fn);\n                        } else {\n                            obj[fn].apply(term, args);\n                        }\n                    } catch (e) {\n                        term.error('Invalid invocation in ' +\n                                   $.terminal.escape_brackets(string));\n                    }\n                } else {\n                    term.exec(string, true).done(function() {\n                        change_hash = true;\n                    });\n                }\n            } catch (e) {\n                // error is process in exec\n            }\n        },\n        // ---------------------------------------------------------------------\n        // :: ES6 iterator for a given string that handle emoji and formatting\n        // ---------------------------------------------------------------------\n        iterator: function(string) {\n            function formatting(string) {\n                if ($.terminal.is_formatting(string)) {\n                    if (string.match(/\\]\\\\\\]/)) {\n                        string = string.replace(/\\]\\\\\\]/g, ']\\\\\\\\]');\n                    }\n                }\n                return string;\n            }\n            if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n                var len = $.terminal.length(string);\n                var i = 0;\n                var obj = {};\n                obj[Symbol.iterator] = function() {\n                    return {\n                        next: function() {\n                            if (i < len) {\n                                var text = $.terminal.substring(string, i, i + 1);\n                                i++;\n                                return {\n                                    value: formatting(text)\n                                };\n                            } else {\n                                return {\n                                    done: true\n                                };\n                            }\n                        }\n                    };\n                };\n                return obj;\n            }\n        },\n        // ---------------------------------------------------------------------\n        formatter: new (function() {\n            try {\n                this[Symbol.split] = function(string) {\n                    return $.terminal.format_split(string);\n                };\n                this[Symbol.match] = function(string) {\n                    return string.match(format_re);\n                };\n                this[Symbol.replace] = function(string, replacer) {\n                    return string.replace(format_parts_re, replacer);\n                };\n                this[Symbol.search] = function(string) {\n                    return string.search(format_re);\n                };\n            } catch (e) {\n            }\n        })(),\n        // ---------------------------------------------------------------------\n        // :: helper function that add formatter before nested_formatting\n        // ---------------------------------------------------------------------\n        new_formatter: function(formatter) {\n            var formatters = $.terminal.defaults.formatters;\n            for (var i = 0; i < formatters.length; ++i) {\n                if (formatters[i] === $.terminal.nested_formatting) {\n                    formatters.splice(i, 0, formatter);\n                    return;\n                }\n            }\n            formatters.push(formatter);\n        }\n    };\n    // -------------------------------------------------------------------------\n    $.terminal.Exception = function Terminal_Exception(type, message, stack) {\n        if (arguments.length === 1) {\n            this.message = arguments[0];\n            this.type = 'TERMINAL';\n        } else {\n            this.type = type;\n            this.message = message;\n            if (stack) {\n                this.stack = stack;\n            }\n        }\n    };\n    $.terminal.Exception.prototype = new Error();\n    $.terminal.Exception.prototype.toString = function() {\n        return this.message + '\\n' + this.stack;\n    };\n    // -----------------------------------------------------------------------\n    // Helper plugins and functions\n    // -----------------------------------------------------------------------\n    $.fn.visible = function() {\n        return this.css('visibility', 'visible');\n    };\n    $.fn.hidden = function() {\n        return this.css('visibility', 'hidden');\n    };\n    // -----------------------------------------------------------------------\n    var warnings = [];\n    function warn(msg) {\n        msg = '[jQuery Terminal] ' + msg;\n        if (warnings.indexOf(msg) === -1) {\n            warnings.push(msg);\n            /* eslint-disable */\n            if (console) {\n                if (console.warn) {\n                    console.warn(msg);\n                } else if (console.log) {\n                    console.log(msg);\n                }\n                /* eslint-enable */\n            } else {\n                // prevent catching in outer try..catch\n                setTimeout(function() {\n                    throw new Error('WARN: ' + msg);\n                }, 0);\n            }\n        }\n    }\n    // -----------------------------------------------------------------------\n    // JSON-RPC CALL\n    // -----------------------------------------------------------------------\n    var ids = {}; // list of url based ids of JSON-RPC\n    $.jrpc = function(url, method, params, success, error) {\n        var deferred = new $.Deferred();\n        var options;\n        if ($.isPlainObject(url)) {\n            options = url;\n        } else {\n            options = {\n                url: url,\n                method: method,\n                params: params,\n                success: success,\n                error: error\n            };\n        }\n        function validJSONRPC(response) {\n            return $.isNumeric(response.id) &&\n                (typeof response.result !== 'undefined' ||\n                 typeof response.error !== 'undefined');\n        }\n        ids[options.url] = ids[options.url] || 0;\n        var request = {\n            'jsonrpc': '2.0',\n            'method': options.method,\n            'params': options.params,\n            'id': ++ids[options.url]\n        };\n        $.ajax({\n            url: options.url,\n            beforeSend: function beforeSend(jxhr, settings) {\n                if (is_function(options.request)) {\n                    options.request(jxhr, request);\n                }\n                settings.data = JSON.stringify(request);\n            },\n            success: function success(response, status, jqXHR) {\n                var content_type = jqXHR.getResponseHeader('Content-Type');\n                if (!content_type.match(/(application|text)\\/json/)) {\n                    warn('Response Content-Type is neither application/json' +\n                         ' nor text/json');\n                }\n                var json;\n                try {\n                    json = JSON.parse(response);\n                } catch (e) {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON', e);\n                    } else {\n                        throw new $.terminal.Exception('JSON', 'Invalid JSON', e.stack);\n                    }\n                    deferred.reject({message: 'Invalid JSON', response: response});\n                    return;\n                }\n                if (is_function(options.response)) {\n                    options.response(jqXHR, json);\n                }\n                if (validJSONRPC(json) || options.method === 'system.describe') {\n                    // don't catch errors in success callback\n                    if (options.success) {\n                        options.success(json, status, jqXHR);\n                    }\n                    deferred.resolve(json);\n                } else {\n                    if (options.error) {\n                        options.error(jqXHR, 'Invalid JSON-RPC');\n                    }\n                    deferred.reject({message: 'Invalid JSON-RPC', response: response});\n                }\n            },\n            error: options.error,\n            contentType: 'application/json',\n            dataType: 'text',\n            async: true,\n            cache: false,\n            // timeout: 1,\n            type: 'POST'\n        });\n        return deferred.promise();\n    };\n\n    // -----------------------------------------------------------------------\n    /*\n    function is_scrolled_into_view(elem) {\n        var docViewTop = $(window).scrollTop();\n        var docViewBottom = docViewTop + $(window).height();\n\n        var elemTop = $(elem).offset().top;\n        var elemBottom = elemTop + $(elem).height();\n\n        return ((elemBottom >= docViewTop) && (elemTop <= docViewBottom));\n    }\n    */\n    // -----------------------------------------------------------------------\n    // :: Create fake terminal to calcualte the dimention of one character\n    // :: this will make terminal work if terminal div is not added to the\n    // :: DOM at init like with:\n    // :: $('<div/>').terminal().echo('foo bar').appendTo('body');\n    // -----------------------------------------------------------------------\n    function get_char_size(div) {\n        var temp = $('<div class=\"terminal temp\"><div class=\"terminal-output\">' +\n                     '<div><div class=\"line\" style=\"float: left\"><span>&nbsp;</span>' +\n                     '</div></div></div></div>').appendTo('body');\n        temp.addClass(div.attr('class'));\n        if (div) {\n            var style = div.attr('style');\n            if (style) {\n                style = style.split(/\\s*;\\s*/).filter(function(s) {\n                    return !s.match(/display\\s*:\\s*none/i);\n                }).join(';');\n                temp.attr('style', style);\n            }\n        }\n        var rect = temp.find('.line')[0].getBoundingClientRect();\n        var result = {\n            width: rect.width,\n            height: rect.height\n        };\n        temp.remove();\n        return result;\n    }\n    // -----------------------------------------------------------------------\n    // :: calculate numbers of characters\n    // -----------------------------------------------------------------------\n    function get_num_chars(terminal, char_size) {\n        var width = terminal.find('.terminal-fill').width();\n        var result = Math.floor(width / char_size.width);\n        // random number to not get NaN in node.js but big enough to\n        // not wrap exception\n        return result || 1000;\n    }\n    // -----------------------------------------------------------------------\n    // :: Calculate number of lines that fit without scroll\n    // -----------------------------------------------------------------------\n    function get_num_rows(terminal, char_size) {\n        return Math.floor(terminal.find('.terminal-fill').height() / char_size.height);\n    }\n    // -----------------------------------------------------------------------\n    function all(array, fn) {\n        var same = array.filter(function(item) {\n            return item[fn]() === item;\n        });\n        return same.length === array.length;\n    }\n    // -----------------------------------------------------------------------\n    function string_case(string) {\n        var array = string.split('');\n        if (all(array, 'toLowerCase')) {\n            return 'lower';\n        } else if (all(array, 'toUpperCase')) {\n            return 'upper';\n        } else {\n            return 'mixed';\n        }\n    }\n    // -----------------------------------------------------------------------\n    function same_case(string) {\n        return string_case(string) !== 'mixed';\n    }\n    // -----------------------------------------------------------------------\n    // fix for jQuery bug\n    function is_function(object) {\n        return get_type(object) === 'function';\n    }\n    // -----------------------------------------------------------------------\n    function get_type(object) {\n        return typeof object === 'function' ? 'function' : $.type(object);\n    }\n    // -----------------------------------------------------------------------\n    // :: TERMINAL PLUGIN CODE\n    // -----------------------------------------------------------------------\n    var version_set = !$.terminal.version.match(/^\\{\\{/);\n    var copyright = 'Copyright (c) 2011-2018 Jakub Jankiewicz <http://jcubic' +\n        '.pl/me>';\n    var version_string = version_set ? ' v. ' + $.terminal.version : ' ';\n    // regex is for placing version string aligned to the right\n    var reg = new RegExp(' {' + version_string.length + '}$');\n    var name_ver = 'jQuery Terminal Emulator' +\n        (version_set ? version_string : '');\n    // -----------------------------------------------------------------------\n    // :: Terminal Signatures\n    // -----------------------------------------------------------------------\n    var signatures = [\n        ['jQuery Terminal', '(c) 2011-2018 jcubic'],\n        [name_ver, copyright.replace(/^Copyright | *<.*>/g, '')],\n        [name_ver, copyright.replace(/^Copyright /, '')],\n        [\n            '      _______                 ________                        __',\n            '     / / _  /_ ____________ _/__  ___/______________  _____  / /',\n            ' __ / / // / // / _  / _/ // / / / _  / _/     / /  \\\\/ / _ \\\\/ /',\n            '/  / / // / // / ___/ // // / / / ___/ // / / / / /\\\\  / // / /__',\n            '\\\\___/____ \\\\\\\\__/____/_/ \\\\__ / /_/____/_//_/_/_/_/_/  \\\\/\\\\__\\\\_\\\\___/',\n            '         \\\\/          /____/                                   '\n                .replace(reg, ' ') + version_string,\n            copyright\n        ],\n        [\n            '      __ _____                     ________                            ' +\n                '  __',\n            '     / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___ ' +\n                ' / /',\n            ' __ / // // // // // _  // _// // / / // _  // _//     // //  \\\\/ // _ ' +\n                '\\\\/ /',\n            '/  / // // // // // ___// / / // / / // ___// / / / / // // /\\\\  // // ' +\n                '/ /__',\n            '\\\\___//____ \\\\\\\\___//____//_/ _\\\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\\\' +\n                '__\\\\_\\\\___/',\n            ('          \\\\/              /____/                                     ' +\n             '     ').replace(reg, '') + version_string,\n            copyright\n        ]\n    ];\n    // -----------------------------------------------------------------------\n    // :: Default options\n    // -----------------------------------------------------------------------\n    $.terminal.nested_formatting.__meta__ = true;\n    // nested formatting will always return different length so we silent the warning\n    $.terminal.nested_formatting.__no_warn__ = true;\n    $.terminal.defaults = {\n        prompt: '> ',\n        history: true,\n        exit: true,\n        clear: true,\n        enabled: true,\n        maskChar: '*',\n        wrap: true,\n        checkArity: true,\n        raw: false,\n        invokeMethods: false,\n        exceptionHandler: null,\n        pauseEvents: true,\n        softPause: false,\n        memory: false,\n        cancelableAjax: true,\n        processArguments: true,\n        linksNoReferrer: false,\n        anyLinks: false,\n        linksNoFollow: false,\n        processRPCResponse: null,\n        completionEscape: true,\n        onCommandChange: null,\n        convertLinks: true,\n        extra: {},\n        tabs: 4,\n        historySize: 60,\n        scrollObject: null,\n        historyState: false,\n        importHistory: false,\n        historyFilter: null,\n        echoCommand: true,\n        scrollOnEcho: true,\n        login: null,\n        outputLimit: -1,\n        formatters: [$.terminal.nested_formatting],\n        onAjaxError: null,\n        pasteImage: true,\n        scrollBottomOffset: 20,\n        wordAutocomplete: true,\n        caseSensitiveAutocomplete: true,\n        caseSensitiveSearch: true,\n        clickTimeout: 200,\n        holdTimeout: 400,\n        holdRepeatTimeout: 200,\n        repeatTimeoutKeys: ['HOLD+BACKSPACE'],\n        request: $.noop,\n        response: $.noop,\n        describe: 'procs',\n        onRPCError: null,\n        doubleTab: null,\n        completion: false,\n        onInit: $.noop,\n        onClear: $.noop,\n        onBlur: $.noop,\n        onFocus: $.noop,\n        onTerminalChange: $.noop,\n        onExit: $.noop,\n        onPush: $.noop,\n        onPop: $.noop,\n        keypress: $.noop,\n        keydown: $.noop,\n        onAfterRedraw: $.noop,\n        onEchoCommand: $.noop,\n        onFlush: $.noop,\n        strings: {\n            comletionParameters: 'From version 1.0.0 completion function need to' +\n                ' have two arguments',\n            wrongPasswordTryAgain: 'Wrong password try again!',\n            wrongPassword: 'Wrong password!',\n            ajaxAbortError: 'Error while aborting ajax call!',\n            wrongArity: \"Wrong number of arguments. Function '%s' expects %s got\" +\n                ' %s!',\n            commandNotFound: \"Command '%s' Not Found!\",\n            oneRPCWithIgnore: 'You can use only one rpc with describe == false ' +\n                'or rpc without system.describe',\n            oneInterpreterFunction: \"You can't use more than one function (rpc \" +\n                'without system.describe or with option describe == false count' +\n                 's as one)',\n            loginFunctionMissing: \"You didn't specify a login function\",\n            noTokenError: 'Access denied (no token)',\n            serverResponse: 'Server responded',\n            wrongGreetings: 'Wrong value of greetings parameter',\n            notWhileLogin: \"You can't call `%s' function while in login\",\n            loginIsNotAFunction: 'Authenticate must be a function',\n            canExitError: \"You can't exit from main interpreter\",\n            invalidCompletion: 'Invalid completion',\n            invalidSelector: 'Sorry, but terminal said that you use invalid ' +\n                'selector!',\n            invalidTerminalId: 'Invalid Terminal ID',\n            login: 'login',\n            password: 'password',\n            recursiveCall: 'Recursive call detected, skip',\n            notAString: '%s function: argument is not a string',\n            redrawError: 'Internal error, wrong position in cmd redraw',\n            invalidStrings: 'Command %s have unclosed strings',\n            defunctTerminal: \"You can't call method on terminal that was destroyed\"\n        }\n    };\n    // -------------------------------------------------------------------------\n    // :: All terminal globals\n    // -------------------------------------------------------------------------\n    var requests = []; // for canceling on CTRL+D\n    var terminals = new Cycle(); // list of terminals global in this scope\n    // state for all terminals, terminals can't have own array fo state because\n    // there is only one popstate event\n    var save_state = []; // hold objects returned by export_view by history API\n    var hash_commands;\n    var change_hash = false; // don't change hash on Init\n    var fire_hash_change = true;\n    var first_instance = true; // used by history state\n    $.fn.terminal = function(init_interpreter, options) {\n        function StorageHelper(memory) {\n            if (memory) {\n                this.storage = {};\n            }\n            this.set = function(key, value) {\n                if (memory) {\n                    this.storage[key] = value;\n                } else {\n                    $.Storage.set(key, value);\n                }\n            };\n            this.get = function(key) {\n                if (memory) {\n                    return this.storage[key];\n                } else {\n                    return $.Storage.get(key);\n                }\n            };\n            this.remove = function(key) {\n                if (memory) {\n                    delete this.storage[key];\n                } else {\n                    $.Storage.remove(key);\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: helper function\n        // ---------------------------------------------------------------------\n        function get_processed_command(command) {\n            if ($.terminal.unclosed_strings(command)) {\n                var string = $.terminal.escape_brackets(command);\n                var message = sprintf(strings().invalidStrings, \"`\" + string + \"`\");\n                throw new $.terminal.Exception(message);\n            } else if (is_function(settings.processArguments)) {\n                return process_command(command, settings.processArguments);\n            } else if (settings.processArguments) {\n                return $.terminal.parse_command(command);\n            } else {\n                return $.terminal.split_command(command);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display object on terminal\n        // ---------------------------------------------------------------------\n        function display_object(object) {\n            if (typeof object === 'string') {\n                self.echo(object);\n            } else if (object instanceof Array) {\n                self.echo($.map(object, function(object) {\n                    return JSON.stringify(object);\n                }).join(' '));\n            } else if (typeof object === 'object') {\n                self.echo(JSON.stringify(object));\n            } else {\n                self.echo(object);\n            }\n        }\n        // Display line code in the file if line numbers are present\n        function print_line(url_spec) {\n            var re = /(.*):([0-9]+):([0-9]+)$/;\n            // google chrome have line and column after filename\n            var m = url_spec.match(re);\n            if (m) {\n                // TODO: do we need to call pause/resume or return promise?\n                self.pause(settings.softPause);\n                $.get(m[1], function(response) {\n                    var file = m[1];\n                    self.echo('[[b;white;]' + file + ']');\n                    var code = response.split('\\n');\n                    var n = +m[2] - 1;\n                    self.echo(code.slice(n - 2, n + 3).map(function(line, i) {\n                        if (i === 2) {\n                            line = '[[;#f00;]' +\n                                $.terminal.escape_brackets(line) + ']';\n                        }\n                        return '[' + (n + i - 1) + ']: ' + line;\n                    }).join('\\n')).resume();\n                }, 'text');\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function display_json_rpc_error(error) {\n            if (is_function(settings.onRPCError)) {\n                settings.onRPCError.call(self, error);\n            } else {\n                self.error('&#91;RPC&#93; ' + error.message);\n                if (error.error && error.error.message) {\n                    error = error.error;\n                    // more detailed error message\n                    var msg = '\\t' + error.message;\n                    if (error.file) {\n                        msg += ' in file \"' + error.file.replace(/.*\\//, '') + '\"';\n                    }\n                    if (error.at) {\n                        msg += ' at line ' + error.at;\n                    }\n                    self.error(msg);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from url string\n        // ---------------------------------------------------------------------\n        function make_basic_json_rpc(url, auth) {\n            var interpreter = function(method, params) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: params,\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(json) {\n                        if (json.error) {\n                            display_json_rpc_error(json.error);\n                        } else if (is_function(settings.processRPCResponse)) {\n                            settings.processRPCResponse.call(self, json.result, self);\n                        } else {\n                            display_object(json.result);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // this is the interpreter function\n            return function(command, terminal) {\n                if (command === '') {\n                    return;\n                }\n                try {\n                    command = get_processed_command(command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    display_exception(e, 'TERMINAL (get_processed_command)');\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                if (!auth || command.name === 'help') {\n                    // allows to call help without a token\n                    interpreter(command.name, command.args);\n                } else {\n                    var token = terminal.token();\n                    if (token) {\n                        interpreter(command.name, [token].concat(command.args));\n                    } else {\n                        // should never happen\n                        terminal.error('&#91;AUTH&#93; ' + strings().noTokenError);\n                    }\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        // :: Create interpreter function from Object. If the value is object\n        // :: it will create nested interpreters\n        // ---------------------------------------------------------------------\n        function make_object_interpreter(object, arity, login, fallback) {\n            // function that maps commands to object methods\n            // it keeps terminal context\n            return function(user_command, terminal) {\n                if (user_command === '') {\n                    return;\n                }\n                // command = split_command_line(command);\n                var command;\n                try {\n                    command = get_processed_command(user_command);\n                } catch (e) {\n                    // exception can be thrown on invalid regex\n                    if (is_function(settings.exception)) {\n                        settings.exception(e, self);\n                    } else {\n                        self.error('Error: ' + (e.message || e));\n                    }\n                    return;\n                    // throw e; // this will show stack in other try..catch\n                }\n                /*\n                if (login) {\n                    var token = self.token(true);\n                    if (token) {\n                        command.args = [token].concat(command.args);\n                    } else {\n                        terminal.error('&#91;AUTH&#93; ' + strings.noTokenError);\n                        return;\n                    }\n                }*/\n                var val = object[command.name];\n                var type = get_type(val);\n                if (type === 'function') {\n                    if (arity && val.length !== command.args.length) {\n                        self.error(\n                            '&#91;Arity&#93; ' +\n                                sprintf(\n                                    strings().wrongArity,\n                                    command.name,\n                                    val.length,\n                                    command.args.length\n                                )\n                        );\n                    } else {\n                        return val.apply(self, command.args);\n                    }\n                } else if (type === 'object' || type === 'string') {\n                    var commands = [];\n                    if (type === 'object') {\n                        commands = Object.keys(val);\n                        val = make_object_interpreter(\n                            val,\n                            arity,\n                            login\n                        );\n                    }\n                    terminal.push(val, {\n                        prompt: command.name + '> ',\n                        name: command.name,\n                        completion: type === 'object' ? commands : undefined\n                    });\n                } else if (is_function(fallback)) {\n                    fallback(user_command, self);\n                } else if (is_function(settings.onCommandNotFound)) {\n                    settings.onCommandNotFound.call(self, user_command, self);\n                } else {\n                    terminal.error(sprintf(strings().commandNotFound, command.name));\n                }\n            };\n        }\n        // ---------------------------------------------------------------------\n        function ajax_error(xhr, status, error) {\n            self.resume(); // onAjaxError can use pause/resume call it first\n            if (is_function(settings.onAjaxError)) {\n                settings.onAjaxError.call(self, xhr, status, error);\n            } else if (status !== 'abort') {\n                self.error('&#91;AJAX&#93; ' + status + ' - ' +\n                           strings().serverResponse + ':\\n' +\n                           $.terminal.escape_brackets(xhr.responseText));\n            }\n        }\n        // ---------------------------------------------------------------------\n        function make_json_rpc_object(url, auth, success) {\n            function jrpc_success(json) {\n                if (json.error) {\n                    display_json_rpc_error(json.error);\n                } else if (is_function(settings.processRPCResponse)) {\n                    settings.processRPCResponse.call(self, json.result, self);\n                } else {\n                    display_object(json.result);\n                }\n                self.resume();\n            }\n            function jrpc_request(jxhr, request) {\n                try {\n                    settings.request.call(self, jxhr, request, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function jrpc_response(jxhr, response) {\n                try {\n                    settings.response.call(self, jxhr, response, self);\n                } catch (e) {\n                    display_exception(e, 'USER');\n                }\n            }\n            function response(response) {\n                var procs = response;\n                // we check if it's false before we call this function but\n                // it don't hurt to be explicit here\n                if (settings.describe !== '') {\n                    settings.describe.split('.').forEach(function(field) {\n                        procs = procs[field];\n                    });\n                }\n                if (procs && procs.length) {\n                    var interpreter_object = {};\n                    $.each(procs, function(_, proc) {\n                        if ($.isPlainObject(proc) && typeof proc.name === 'string') {\n                            interpreter_object[proc.name] = function() {\n                                var append = auth && proc.name !== 'help';\n                                var args = Array.prototype.slice.call(arguments);\n                                var args_len = args.length + (append ? 1 : 0);\n                                if (settings.checkArity && proc.params &&\n                                    proc.params.length !== args_len) {\n                                    self.error(\n                                        '&#91;Arity&#93; ' +\n                                            sprintf(\n                                                strings().wrongArity,\n                                                proc.name,\n                                                proc.params.length,\n                                                args_len\n                                            )\n                                    );\n                                } else {\n                                    self.pause(settings.softPause);\n                                    if (append) {\n                                        var token = self.token(true);\n                                        if (token) {\n                                            args = [token].concat(args);\n                                        } else {\n                                            self.error('&#91;AUTH&#93; ' +\n                                                       strings().noTokenError);\n                                        }\n                                    }\n                                    $.jrpc({\n                                        url: url,\n                                        method: proc.name,\n                                        params: args,\n                                        request: jrpc_request,\n                                        response: jrpc_response,\n                                        success: jrpc_success,\n                                        error: ajax_error\n                                    });\n                                }\n                            };\n                        }\n                    });\n                    var login = typeof auth === 'string' ? auth : 'login';\n                    interpreter_object.help = interpreter_object.help || function(fn) {\n                        if (typeof fn === 'undefined') {\n                            var names = response.procs.map(function(proc) {\n                                return proc.name;\n                            }).join(', ') + ', help';\n                            self.echo('Available commands: ' + names);\n                        } else {\n                            var found = false;\n                            $.each(procs, function(_, proc) {\n                                if (proc.name === fn) {\n                                    found = true;\n                                    var msg = '';\n                                    msg += '[[bu;;]' + proc.name + ']';\n                                    if (proc.params) {\n                                        var params = proc.params;\n                                        if (auth && proc.name !== login) {\n                                            params = params.slice(1);\n                                        }\n                                        msg += ' ' + params.join(' ');\n                                    }\n                                    if (proc.help) {\n                                        msg += '\\n' + proc.help;\n                                    }\n                                    self.echo(msg);\n                                    return false;\n                                }\n                            });\n                            if (!found) {\n                                if (fn === 'help') {\n                                    self.echo('[[bu;;]help] [method]\\ndisplay help ' +\n                                              'for the method or list of methods if not' +\n                                              ' specified');\n                                } else {\n                                    var msg = 'Method `' + fn + \"' not found \";\n                                    self.error(msg);\n                                }\n                            }\n                        }\n                    };\n                    success(interpreter_object);\n                } else {\n                    success(null);\n                }\n            }\n            return $.jrpc({\n                url: url,\n                method: 'system.describe',\n                params: [],\n                success: response,\n                request: jrpc_request,\n                response: jrpc_response,\n                error: function error() {\n                    success(null);\n                }\n            });\n        }\n        // ---------------------------------------------------------------------\n        function make_interpreter(user_intrp, login, finalize) {\n            finalize = finalize || $.noop;\n            var type = get_type(user_intrp);\n            var object;\n            var result = {};\n            var rpc_count = 0; // only one rpc can be use for array\n            var fn_interpreter;\n            if (type === 'array') {\n                object = {};\n                // recur will be called when previous acync call is finished\n                (function recur(interpreters, success) {\n                    if (interpreters.length) {\n                        var first = interpreters[0];\n                        var rest = interpreters.slice(1);\n                        var type = get_type(first);\n                        if (type === 'string') {\n                            self.pause(settings.softPause);\n                            if (settings.describe === false) {\n                                if (++rpc_count === 1) {\n                                    fn_interpreter = make_basic_json_rpc(first, login);\n                                } else {\n                                    self.error(strings().oneRPCWithIgnore);\n                                }\n                                recur(rest, success);\n                            } else {\n                                make_json_rpc_object(first, login, function(new_obj) {\n                                    if (new_obj) {\n                                        $.extend(object, new_obj);\n                                    } else if (++rpc_count === 1) {\n                                        fn_interpreter = make_basic_json_rpc(\n                                            first,\n                                            login\n                                        );\n                                    } else {\n                                        self.error(strings().oneRPCWithIgnore);\n                                    }\n                                    self.resume();\n                                    recur(rest, success);\n                                });\n                            }\n                        } else if (type === 'function') {\n                            if (fn_interpreter) {\n                                self.error(strings().oneInterpreterFunction);\n                            } else {\n                                fn_interpreter = first;\n                            }\n                            recur(rest, success);\n                        } else if (type === 'object') {\n                            $.extend(object, first);\n                            recur(rest, success);\n                        }\n                    } else {\n                        success();\n                    }\n                })(user_intrp, function() {\n                    finalize({\n                        interpreter: make_object_interpreter(\n                            object,\n                            false,\n                            login,\n                            fn_interpreter.bind(self)\n                        ),\n                        completion: Object.keys(object)\n                    });\n                });\n            } else if (type === 'string') {\n                if (settings.ignoreSystemDescribe) {\n                    object = {\n                        interpreter: make_basic_json_rpc(user_intrp, login)\n                    };\n                    if ($.isArray(settings.completion)) {\n                        object.completion = settings.completion;\n                    }\n                    finalize(object);\n                } else {\n                    self.pause(settings.softPause);\n                    make_json_rpc_object(user_intrp, login, function(object) {\n                        if (object) {\n                            result.interpreter = make_object_interpreter(\n                                object,\n                                false,\n                                login\n                            );\n                            result.completion = Object.keys(object);\n                        } else {\n                            // no procs in system.describe\n                            result.interpreter = make_basic_json_rpc(user_intrp, login);\n                        }\n                        finalize(result);\n                        self.resume();\n                    });\n                }\n            } else if (type === 'object') {\n                finalize({\n                    interpreter: make_object_interpreter(\n                        user_intrp,\n                        settings.checkArity,\n                        login\n                    ),\n                    completion: Object.keys(user_intrp)\n                });\n            } else {\n                // allow $('<div/>').terminal();\n                if (type === 'undefined') {\n                    user_intrp = $.noop;\n                } else if (type !== 'function') {\n                    var msg = type + ' is invalid interpreter value';\n                    throw new $.terminal.Exception(msg);\n                }\n                // single function don't need bind\n                finalize({\n                    interpreter: user_intrp,\n                    completion: settings.completion\n                });\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Create JSON-RPC authentication function\n        // ---------------------------------------------------------------------\n        function make_json_rpc_login(url, login) {\n            var method = get_type(login) === 'boolean' ? 'login' : login;\n            return function(user, passwd, callback) {\n                self.pause(settings.softPause);\n                $.jrpc({\n                    url: url,\n                    method: method,\n                    params: [user, passwd],\n                    request: function(jxhr, request) {\n                        try {\n                            settings.request.call(self, jxhr, request, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    response: function(jxhr, response) {\n                        try {\n                            settings.response.call(self, jxhr, response, self);\n                        } catch (e) {\n                            display_exception(e, 'USER');\n                        }\n                    },\n                    success: function success(response) {\n                        if (!response.error && response.result) {\n                            callback(response.result);\n                        } else {\n                            // null will trigger message that login fail\n                            callback(null);\n                        }\n                        self.resume();\n                    },\n                    error: ajax_error\n                });\n            };\n            // default name is login so you can pass true\n        }\n        // ---------------------------------------------------------------------\n        // :: display Exception on terminal\n        // ---------------------------------------------------------------------\n        function display_exception(e, label, silent) {\n            if (is_function(settings.exceptionHandler)) {\n                settings.exceptionHandler.call(self, e, label);\n            } else {\n                self.exception(e, label);\n                if (!silent) {\n                    setTimeout(function() {\n                        throw e;\n                    }, 0);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Draw line - can have line breaks and be longer than the width of\n        // :: the terminal, there are 2 options raw and finalize\n        // :: raw - will not encode the string and finalize if a function that\n        // :: will have div container of the line as first argument\n        // :: NOTE: it formats and appends lines to output_buffer. The actual\n        // :: append to terminal output happens in the flush function\n        // ---------------------------------------------------------------------\n        var output_buffer = [];\n        var NEW_LINE = 1;\n        function buffer_line(string, index, options) {\n            // urls should always have formatting to keep url if split\n            var i, len;\n            output_buffer.push(NEW_LINE);\n            if (string === '') {\n                // ignore empty string, it can happen if line was a function\n                // that returned empty string in this case whe need to add container\n                // because on update/resize it can return content\n            } else if (!options.raw) {\n                var format_options = {\n                    linksNoReferrer: settings.linksNoReferrer,\n                    linksNoFollow: settings.linksNoFollow,\n                    anyLinks: settings.anyLinks,\n                    char_width: char_size.width\n                };\n                string = $.terminal.normalize(string);\n                var cols = self.cols();\n                if ((strlen(text(string)) > cols ||\n                     string.match(/\\n/)) &&\n                    ((settings.wrap === true && options.wrap === undefined) ||\n                     settings.wrap === false && options.wrap === true)) {\n                    var words = options.keepWords;\n                    var array = $.terminal.split_equal(string, cols, words);\n                    for (i = 0, len = array.length; i < len; ++i) {\n                        if (array[i] === '' || array[i] === '\\r') {\n                            output_buffer.push('<span></span>');\n                        } else {\n                            output_buffer.push($.terminal.format(\n                                array[i],\n                                format_options\n                            ));\n                        }\n                    }\n                } else {\n                    string = $.terminal.format(string, format_options);\n                    string.split(/\\n/).forEach(function(string) {\n                        output_buffer.push(string);\n                    });\n                }\n            } else {\n                output_buffer.push(string);\n            }\n            output_buffer.push({\n                finalize: options.finalize,\n                index: index\n            });\n        }\n        // ---------------------------------------------------------------------\n        function process_line(line) {\n            // prevent exception in display exception\n            try {\n                var line_settings = $.extend({\n                    exec: true,\n                    raw: false,\n                    finalize: $.noop\n                }, line.options || {});\n                var string;\n                var arg = line.string;\n                var is_fn = is_function(arg);\n                if (is_fn) {\n                    arg = arg();\n                }\n                if (get_type(arg) !== 'string') {\n                    if (is_function(settings.parseObject)) {\n                        var ret = settings.parseObject(arg);\n                        if (get_type(ret) === 'string') {\n                            string = ret;\n                        }\n                    } else if (arg instanceof Array) {\n                        string = $.terminal.columns(arg, self.cols(), settings.tabs);\n                    } else {\n                        string = String(arg);\n                    }\n                } else {\n                    string = arg;\n                }\n                if (string !== '') {\n                    // string can be empty after removing extended commands\n                    if (string !== '') {\n                        if (!line_settings.raw) {\n                            if (settings.convertLinks) {\n                                string = string.replace(email_re, '[[!;;]$1]').\n                                    replace(url_nf_re, '[[!;;]$1]');\n                            }\n                            if (line_settings.formatters) {\n                                try {\n                                    string = $.terminal.apply_formatters(\n                                        string,\n                                        settings\n                                    );\n                                } catch (e) {\n                                    display_exception(e, 'FORMATTING');\n                                }\n                            }\n                            var parts = string.split(format_exec_re);\n                            string = $.map(parts, function(string) {\n                                if (string && string.match(format_exec_re) &&\n                                    !$.terminal.is_formatting(string)) {\n                                    // redraw should not execute commands and it have\n                                    // and lines variable have all extended commands\n                                    string = string.replace(/^\\[\\[|\\]\\]$/g, '');\n                                    if (line_settings.exec) {\n                                        var prev_cmd;\n                                        if (prev_command) {\n                                            prev_command = prev_command.command.trim();\n                                        }\n                                        if (prev_cmd === string.trim()) {\n                                            self.error(strings().recursiveCall);\n                                        } else {\n                                            $.terminal.extended_command(self, string, {\n                                                invokeMethods: settings.invokeMethods\n                                            });\n                                        }\n                                    }\n                                    return '';\n                                } else {\n                                    return string;\n                                }\n                            }).join('');\n                            if (string !== '') {\n                                string = crlf($.terminal.normalize(string));\n                                string = $.terminal.encode(string, {\n                                    tabs: settings.tabs\n                                });\n                            }\n                        }\n                        if (string !== '') {\n                            buffer_line(string, line.index, line_settings);\n                        }\n                    }\n                }\n                if (string === '' && is_fn) {\n                    buffer_line(string, line.index, line_settings);\n                }\n            } catch (e) {\n                output_buffer = [];\n                // don't display exception if exception throw in terminal\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL');\n                } else {\n                    alert_exception('[Internal Exception(process_line)]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Update terminal lines\n        // ---------------------------------------------------------------------\n        function redraw(options) {\n            options = $.extend({}, {\n                // should be used when single line is updated\n                update: false,\n                // should be used if you want to scroll to bottom after redraw\n                scroll: true\n            }, options || {});\n            if (!options.update) {\n                command_line.resize(num_chars);\n                // we don't want reflow while processing lines\n                var detached_output = output.empty().detach();\n            }\n            var lines_to_show = [];\n            // Dead code\n            if (settings.outputLimit >= 0) {\n                // flush will limit lines but if there is lot of\n                // lines we don't need to show them and then remove\n                // them from terminal\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                lines.forEach(function(line, index) {\n                    var string = line[0];\n                    var options = line[1];\n                    if (get_type(string) === 'function') {\n                        string = string();\n                    }\n                    if (get_type(string) !== 'string') {\n                        string = String(string);\n                    }\n                    lines_to_show.push({\n                        string: string,\n                        index: index,\n                        options: options\n                    });\n                });\n                lines_to_show = lines_to_show.slice(lines_to_show.length - limit - 1);\n            } else {\n                lines_to_show = lines.map(function(line, index) {\n                    return {\n                        string: line[0],\n                        index: index,\n                        options: line[1]\n                    };\n                });\n            }\n            try {\n                output_buffer = [];\n                $.each(lines_to_show, function(i, line) {\n                    process_line(line);\n                });\n                if (!options.update) {\n                    command_line.before(detached_output); // reinsert output\n                }\n                self.flush(options);\n                try {\n                    settings.onAfterRedraw.call(self, self);\n                } catch (e) {\n                    settings.onAfterRedraw = $.noop;\n                    display_exception(e, 'onAfterRedraw');\n                }\n            } catch (e) {\n                if (is_function(settings.exceptionHandler)) {\n                    settings.exceptionHandler.call(self, e, 'TERMINAL (redraw)');\n                } else {\n                    alert_exception('[redraw]', e);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function limit output lines based on outputLimit option\n        // ---------------------------------------------------------------------\n        function limit_lines() {\n            if (settings.outputLimit >= 0) {\n                var limit;\n                if (settings.outputLimit === 0) {\n                    limit = self.rows();\n                } else {\n                    limit = settings.outputLimit;\n                }\n                var $lines = output.find('> div > div');\n                if ($lines.length + 1 > limit) {\n                    var max = $lines.length - limit + 1;\n                    var for_remove = $lines.slice(0, max);\n                    // you can't get parent if you remove the\n                    // element so we first get the parent\n                    var parents = for_remove.parent();\n                    for_remove.remove();\n                    parents.each(function() {\n                        var $self = $(this);\n                        if ($self.is(':empty')) {\n                            // there can be divs inside parent that\n                            // was not removed\n                            $self.remove();\n                        }\n                    });\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display user greetings or terminal signature\n        // ---------------------------------------------------------------------\n        function show_greetings() {\n            if (settings.greetings === undefined) {\n                // signature have ascii art so it's not suite for screen readers\n                self.echo(self.signature, {finalize: a11y_hide, formatters: false});\n            } else if (settings.greetings) {\n                var type = typeof settings.greetings;\n                if (type === 'string') {\n                    self.echo(settings.greetings);\n                } else if (type === 'function') {\n                    try {\n                        settings.greetings.call(self, self.echo);\n                    } catch (e) {\n                        settings.greetings = null;\n                        display_exception(e, 'greetings');\n                    }\n                } else {\n                    self.error(strings().wrongGreetings);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Display prompt and last command\n        // ---------------------------------------------------------------------\n        function echo_command(command) {\n            if (typeof command === 'undefined') {\n                command = self.get_command();\n            }\n            var prompt = command_line.prompt(true);\n            var mask = command_line.mask();\n            switch (typeof mask) {\n                case 'string':\n                    command = command.replace(/./g, mask);\n                    break;\n                case 'boolean':\n                    if (mask) {\n                        command = command.replace(/./g, settings.maskChar);\n                    } else {\n                        command = $.terminal.escape_formatting(command);\n                    }\n                    break;\n            }\n            var options = {\n                finalize: function finalize(div) {\n                    a11y_hide(div.addClass('command'));\n                    try {\n                        settings.onEchoCommand.call(self, div, command);\n                    } catch (e) {\n                        settings.onEchoCommand = $.noop;\n                        self.exception(e);\n                    }\n                }\n            };\n            if (is_function(prompt)) {\n                var ret = prompt(function(string) {\n                    self.echo(string + command, options);\n                });\n                if (ret && is_function(ret.then)) {\n                    ret.then(function(string) {\n                        if (typeof string === 'string') {\n                            self.echo(string + command, options);\n                        }\n                    });\n                }\n            } else {\n                self.echo(prompt + command, options);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function have_scrollbar() {\n            if (self.is('body')) {\n                // source: https://stackoverflow.com/a/6639405/387194\n                // from comment by Šime Vidas\n                return window.innerWidth - document.documentElement.clientWidth > 0;\n            }\n            return fill.outerWidth() !== self.outerWidth();\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function that restore state. Call import_view or exec\n        // ---------------------------------------------------------------------\n        function restore_state(spec) {\n            // spec [terminal_id, state_index, command]\n            var terminal = terminals.get()[spec[0]];\n            if (!terminal) {\n                throw new $.terminal.Exception(strings().invalidTerminalId);\n            }\n            var command_idx = spec[1];\n            if (save_state[command_idx]) { // state exists\n                terminal.import_view(save_state[command_idx]);\n            } else {\n                // restore state\n                change_hash = false;\n                var command = spec[2];\n                if (command) {\n                    terminal.exec(command).done(function() {\n                        change_hash = true;\n                        save_state[command_idx] = terminal.export_view();\n                    });\n                }\n            }\n            /*if (spec[3].length) {\n                restore_state(spec[3]);\n            }*/\n        }\n        // ---------------------------------------------------------------------\n        // :: Helper function\n        // ---------------------------------------------------------------------\n        function maybe_update_hash() {\n            if (change_hash) {\n                fire_hash_change = false;\n                location.hash = '#' + JSON.stringify(hash_commands);\n                setTimeout(function() {\n                    fire_hash_change = true;\n                }, 100);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Wrapper over interpreter, it implements exit and catches all\n        // :: exeptions from user code and displays them on the terminal\n        // ---------------------------------------------------------------------\n        var first_command = true;\n        var resume_callbacks = [];\n        function commands(command, silent, exec) {\n            function init_state() {\n                // execHash need first empty command too\n                if (settings.historyState || settings.execHash && exec) {\n                    if (!save_state.length) {\n                        // first command in first terminal don't have hash\n                        self.save_state();\n                    } else {\n                        self.save_state(null);\n                    }\n                }\n            }\n            // -----------------------------------------------------------------\n            function after_exec() {\n                // variables defined later in commands\n                if (!exec) {\n                    change_hash = true;\n                    if (settings.historyState) {\n                        self.save_state(command, false);\n                    }\n                    change_hash = saved_change_hash;\n                }\n                deferred.resolve();\n                if (is_function(settings.onAfterCommand)) {\n                    settings.onAfterCommand.call(self, self, command);\n                }\n            }\n            // -----------------------------------------------------------------\n            function show(result) {\n                if (typeof result !== 'undefined') {\n                    display_object(result);\n                }\n                after_exec();\n                self.resume();\n            }\n            // -----------------------------------------------------------------\n            function invoke() {\n                // Call user interpreter function\n                var result = interpreter.interpreter.call(self, command, self);\n                if (result) {\n                    // auto pause/resume when user return promises\n                    self.pause(settings.softPause);\n                    // when for native Promise object work only in jQuery 3.x\n                    if (is_function(result.done || result.then)) {\n                        (result.done || result.then).call(result, show);\n                    } else {\n                        return $.when(result).done(show);\n                    }\n                } else if (paused) {\n                    resume_callbacks.push(function() {\n                        // exec with resume/pause in user code\n                        after_exec();\n                    });\n                } else {\n                    after_exec();\n                }\n            }\n            // -----------------------------------------------------------------\n            // first command store state of the terminal before the command get\n            // executed\n            if (first_command) {\n                first_command = false;\n                init_state();\n            }\n            try {\n                // this callback can disable commands\n                if (is_function(settings.onBeforeCommand)) {\n                    if (settings.onBeforeCommand.call(self, self, command) === false) {\n                        return;\n                    }\n                }\n                if (!exec) {\n                    prev_command = $.terminal.split_command(command);\n                }\n                if (!ghost()) {\n                    // exec execute this function wihout the help of cmd plugin\n                    // that add command to history on enter\n                    if (exec && (is_function(settings.historyFilter) &&\n                                 settings.historyFilter(command) ||\n                                 command.match(settings.historyFilter))) {\n                        command_line.history().append(command);\n                    }\n                }\n                var interpreter = interpreters.top();\n                if (!silent && settings.echoCommand) {\n                    echo_command(command);\n                }\n                // new promise will be returned to exec that will resolve his\n                // returned promise\n                var deferred = new $.Deferred();\n                // we need to save sate before commands is deleyd because\n                // execute_extended_command disable it and it can be executed\n                // after delay\n                var saved_change_hash = change_hash;\n                if (command.match(/^\\s*login\\s*$/) && self.token(true)) {\n                    if (self.level() > 1) {\n                        self.logout(true);\n                    } else {\n                        self.logout();\n                    }\n                    after_exec();\n                } else if (settings.exit && command.match(/^\\s*exit\\s*$/) &&\n                           !in_login) {\n                    var level = self.level();\n                    if (level === 1 && self.get_token() || level > 1) {\n                        if (self.get_token(true)) {\n                            self.set_token(undefined, true);\n                        }\n                        self.pop();\n                    }\n                    after_exec();\n                } else if (settings.clear && command.match(/^\\s*clear\\s*$/) &&\n                           !in_login) {\n                    self.clear();\n                    after_exec();\n                } else {\n                    var ret = invoke();\n                    if (ret) {\n                        return ret;\n                    }\n                }\n                return deferred.promise();\n            } catch (e) {\n                display_exception(e, 'USER', exec);\n                self.resume();\n                if (exec) {\n                    throw e;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: The logout function removes Storage, disables history and runs\n        // :: the login function. This function is called only when options.login\n        // :: function is defined. The check for this is in the self.pop method\n        // ---------------------------------------------------------------------\n        function global_logout() {\n            if (is_function(settings.onBeforeLogout)) {\n                try {\n                    if (settings.onBeforeLogout.call(self, self) === false) {\n                        return;\n                    }\n                } catch (e) {\n                    settings.onBeforeLogout = $.noop;\n                    display_exception(e, 'onBeforeLogout');\n                }\n            }\n            clear_loging_storage();\n            if (is_function(settings.onAfterLogout)) {\n                try {\n                    settings.onAfterLogout.call(self, self);\n                } catch (e) {\n                    settings.onAfterLogout = $.noop;\n                    display_exception(e, 'onAfterlogout');\n                }\n            }\n            self.login(global_login_fn, true, initialize);\n        }\n        // ---------------------------------------------------------------------\n        function clear_loging_storage() {\n            var name = self.prefix_name(true) + '_';\n            storage.remove(name + 'token');\n            storage.remove(name + 'login');\n        }\n        // ---------------------------------------------------------------------\n        // :: Save the interpreter name for use with purge\n        // ---------------------------------------------------------------------\n        function maybe_append_name(interpreter_name) {\n            var storage_key = self.prefix_name() + '_interpreters';\n            var names = storage.get(storage_key);\n            if (names) {\n                names = JSON.parse(names);\n            } else {\n                names = [];\n            }\n            if ($.inArray(interpreter_name, names) === -1) {\n                names.push(interpreter_name);\n                storage.set(storage_key, JSON.stringify(names));\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: Function enables history, sets prompt, runs interpreter function\n        // ---------------------------------------------------------------------\n        function prepare_top_interpreter(silent) {\n            var interpreter = interpreters.top();\n            var name = self.prefix_name(true);\n            if (!ghost()) {\n                maybe_append_name(name);\n            }\n            var login = self.login_name(true);\n            command_line.name(name + (login ? '_' + login : ''));\n            if (interpreter.prompt !== command_line.prompt()) {\n                if (is_function(interpreter.prompt)) {\n                    command_line.prompt(function(callback) {\n                        var ret = interpreter.prompt.call(self, callback, self);\n                        if (ret && is_function(ret.then)) {\n                            ret.then(function(string) {\n                                if (typeof string === 'string') {\n                                    callback(string);\n                                }\n                            });\n                        }\n                    });\n                } else {\n                    command_line.prompt(interpreter.prompt);\n                }\n            }\n            if (typeof interpreter.history !== 'undefined') {\n                self.history().toggle(interpreter.history);\n            }\n            if ($.isPlainObject(interpreter.keymap)) {\n                command_line.keymap($.omap(interpreter.keymap, function(name, fun) {\n                    return function() {\n                        var args = [].slice.call(arguments);\n                        try {\n                            return fun.apply(self, args);\n                        } catch (e) {\n                            display_exception(e, 'USER KEYMAP');\n                        }\n                    };\n                }));\n            }\n            command_line.set('');\n            init_queue.resolve();\n            if (!silent && is_function(interpreter.onStart)) {\n                interpreter.onStart.call(self, self);\n            }\n        }\n        // ---------------------------------------------------------------------\n        function hashchange() {\n            if (fire_hash_change && settings.execHash) {\n                try {\n                    if (location.hash) {\n                        var hash = location.hash.replace(/^#/, '');\n                        hash_commands = JSON.parse(decodeURIComponent(hash));\n                    } else {\n                        hash_commands = [];\n                    }\n                    if (hash_commands.length) {\n                        restore_state(hash_commands[hash_commands.length - 1]);\n                    } else if (save_state[0]) {\n                        self.import_view(save_state[0]);\n                    }\n                } catch (e) {\n                    display_exception(e, 'TERMINAL');\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function initialize() {\n            prepare_top_interpreter();\n            show_greetings();\n            if (lines.length) {\n                self.refresh(); // for case when showing long error before init\n            }\n            // was_paused flag is workaround for case when user call exec before\n            // login and pause in onInit, 3rd exec will have proper timing (will\n            // execute after onInit resume)\n            var was_paused = false;\n            if (is_function(settings.onInit)) {\n                onPause = function() { // local in terminal\n                    was_paused = true;\n                };\n                try {\n                    settings.onInit.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'OnInit');\n                    // throw e; // it will be catched by terminal\n                } finally {\n                    onPause = $.noop;\n                    if (!was_paused && self.enabled()) {\n                        // resume login if user didn't call pause in onInit\n                        // if user pause in onInit wait with exec until it\n                        // resume\n                        self.resume();\n                    }\n                }\n            }\n            if (first_instance) {\n                first_instance = false;\n                $(window).on('hashchange', hashchange);\n            }\n        }\n        // ---------------------------------------------------------------------\n        // :: If Ghost don't store anything in localstorage\n        // ---------------------------------------------------------------------\n        function ghost() {\n            return in_login || command_line.mask() !== false;\n        }\n        // ---------------------------------------------------------------------\n        // :: Keydown event handler\n        // ---------------------------------------------------------------------\n        function user_key_down(e) {\n            var result, top = interpreters.top();\n            if (is_function(top.keydown)) {\n                result = top.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            } else if (is_function(settings.keydown)) {\n                result = settings.keydown.call(self, e, self);\n                if (result !== undefined) {\n                    return result;\n                }\n            }\n        }\n        var keymap = {\n            'CTRL+D': function(e, original) {\n                if (!in_login) {\n                    if (command_line.get() === '') {\n                        if (interpreters.size() > 1 ||\n                            is_function(global_login_fn)) {\n                            self.pop('');\n                        } else {\n                            self.resume();\n                            self.echo('');\n                        }\n                    } else {\n                        original();\n                    }\n                }\n                return false;\n            },\n            'CTRL+C': function() {\n                if (get_selected_text() === '') {\n                    var command = self.get_command();\n                    var position = self.get_position();\n                    command = command.substring(0, position) + '^C' +\n                        command.substring(position + 2);\n                    echo_command(command);\n                    self.set_command('');\n                }\n            },\n            'CTRL+L': function() {\n                self.clear();\n            },\n            'TAB': function(e, orignal) {\n                // TODO: move this to cmd plugin\n                //       add completion = array | function\n                //       !!! Problem complete more then one key need terminal\n                var top = interpreters.top(), completion, caseSensitive;\n                if (typeof top.caseSensitiveAutocomplete !== 'undefined') {\n                    caseSensitive = top.caseSensitiveAutocomplete;\n                } else {\n                    caseSensitive = settings.caseSensitiveAutocomplete;\n                }\n                if (settings.completion &&\n                    get_type(settings.completion) !== 'boolean' &&\n                    top.completion === undefined) {\n                    completion = settings.completion;\n                } else {\n                    completion = top.completion;\n                }\n                if (completion === 'settings') {\n                    completion = settings.completion;\n                }\n                function resolve(commands) {\n                    self.complete(commands, {\n                        echo: true,\n                        word: settings.wordAutocomplete,\n                        escape: settings.completionEscape,\n                        caseSensitive: caseSensitive,\n                        doubleTab: settings.doubleTab\n                    });\n                }\n                if (completion) {\n                    switch (get_type(completion)) {\n                        case 'function':\n                            var string = self.before_cursor(settings.wordAutocomplete);\n                            if (completion.length === 3) {\n                                var error = new Error(strings().comletionParameters);\n                                display_exception(error, 'USER');\n                                return false;\n                            }\n                            var result = completion.call(self, string, resolve);\n                            if (result && is_function(result.then)) {\n                                result.then(resolve);\n                            }\n                            break;\n                        case 'array':\n                            resolve(completion);\n                            break;\n                        default:\n                            throw new $.terminal.Exception(strings().invalidCompletion);\n                    }\n                } else {\n                    orignal();\n                }\n                return false;\n            },\n            'CTRL+V': function(e, original) {\n                original(e);\n                self.oneTime(200, function() {\n                    self.scroll_to_bottom();\n                });\n                return true;\n            },\n            'CTRL+TAB': function() {\n                if (terminals.length() > 1) {\n                    self.focus(false);\n                    return false;\n                }\n            },\n            'PAGEDOWN': function() {\n                self.scroll(self.height());\n            },\n            'PAGEUP': function() {\n                self.scroll(-self.height());\n            }\n        };\n        function key_down(e) {\n            // Prevent to be executed by cmd: CTRL+D, TAB, CTRL+TAB (if more\n            // then one terminal)\n            var result, i;\n            if (self.enabled()) {\n                if (!self.paused()) {\n                    result = user_key_down(e);\n                    if (result !== undefined) {\n                        return result;\n                    }\n                    if (e.which !== 9) { // not a TAB\n                        tab_count = 0;\n                    }\n                } else {\n                    if (!settings.pauseEvents) {\n                        result = user_key_down(e);\n                        if (result !== undefined) {\n                            return result;\n                        }\n                    }\n                    if (e.which === 68 && e.ctrlKey) { // CTRL+D (if paused)\n                        if (settings.pauseEvents) {\n                            result = user_key_down(e);\n                            if (result !== undefined) {\n                                return result;\n                            }\n                        }\n                        if (requests.length) {\n                            for (i = requests.length; i--;) {\n                                var r = requests[i];\n                                if (r.readyState !== 4) {\n                                    try {\n                                        r.abort();\n                                    } catch (error) {\n                                        if (is_function(settings.exceptionHandler)) {\n                                            settings.exceptionHandler.call(\n                                                self,\n                                                e,\n                                                'AJAX ABORT'\n                                            );\n                                        } else {\n                                            self.error(strings().ajaxAbortError);\n                                        }\n                                    }\n                                }\n                            }\n                            requests = [];\n                        }\n                        self.resume();\n                    }\n                    return false;\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function key_press(e) {\n            var top = interpreters.top();\n            if (enabled && (!paused || !settings.pauseEvents)) {\n                if (is_function(top.keypress)) {\n                    return top.keypress.call(self, e, self);\n                } else if (is_function(settings.keypress)) {\n                    return settings.keypress.call(self, e, self);\n                }\n            }\n        }\n        // ---------------------------------------------------------------------\n        function ready(queue) {\n            return function(fun) {\n                queue.add(fun);\n            };\n        }\n        // ---------------------------------------------------------------------\n        function strings() {\n            return $.extend(\n                {},\n                $.terminal.defaults.strings,\n                settings && settings.strings || {}\n            );\n        }\n        // ---------------------------------------------------------------------\n        var self = this;\n        if (self.is('body,html')) {\n            self = $('<div/>').appendTo('body');\n            $('body').addClass('full-screen-terminal');\n        }\n        if (this.length > 1) {\n            return this.each(function() {\n                $.fn.terminal.call(\n                    $(this),\n                    init_interpreter,\n                    $.extend({name: self.selector}, options)\n                );\n            });\n        }\n        // terminal already exists\n        if (self.data('terminal')) {\n            return self.data('terminal');\n        }\n        if (self.length === 0) {\n            var msg = sprintf(strings().invalidSelector);\n            throw new $.terminal.Exception(msg);\n        }\n        // var names = []; // stack if interpreter names\n        var prev_command; // used for name on the terminal if not defined\n        var tab_count = 0; // for tab completion\n        var output; // .terminal-output jquery object\n        var terminal_id = terminals.length();\n        var num_chars; // numer of chars in line\n        var num_rows; // number of lines that fit without scrollbar\n        var command; // for tab completion\n        var logins = new Stack(); // stack of logins\n        var command_queue = new DelayQueue();\n        var init_queue = new DelayQueue();\n        var when_ready = ready(init_queue);\n        var char_size = get_char_size(self);\n        var cmd_ready = ready(command_queue);\n        var in_login = false;// some Methods should not be called when login\n        // TODO: Try to use mutex like counter for pause/resume\n        var onPause = $.noop;// used to indicate that user call pause onInit\n        var old_width, old_height;\n        var delayed_commands = []; // used when exec commands while paused\n        var settings = $.extend(\n            {},\n            $.terminal.defaults,\n            {\n                name: self.selector,\n                exit: !!(options && options.login || !options)\n            },\n            options || {}\n        );\n        // so it's the same as in TypeScript definition for options\n        delete settings.formatters;\n        // used to throw error when calling methods on destroyed terminal\n        var defunct = false;\n        var lines = [];\n        var storage = new StorageHelper(settings.memory);\n        var enabled = settings.enabled;\n        var frozen = false;\n        var paused = false;\n        var autologin = true; // set to false if onBeforeLogin return false\n        var interpreters;\n        var command_line;\n        var old_enabled;\n        var visibility_observer;\n        var mutation_observer;\n        // -----------------------------------------------------------------\n        // TERMINAL METHODS\n        // -----------------------------------------------------------------\n        $.extend(self, $.omap({\n            id: function() {\n                return terminal_id;\n            },\n            // -------------------------------------------------------------\n            // :: Clear the output\n            // -------------------------------------------------------------\n            clear: function() {\n                output.html('');\n                lines = [];\n                try {\n                    settings.onClear.call(self, self);\n                } catch (e) {\n                    display_exception(e, 'onClear');\n                }\n                self.attr({scrollTop: 0});\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return an object that can be used with import_view to\n            // :: restore the state\n            // -------------------------------------------------------------\n            export_view: function() {\n                var user_export = {};\n                if (is_function(settings.onExport)) {\n                    try {\n                        user_export = settings.onExport.call(self);\n                    } catch (e) {\n                        display_exception(e, 'onExport');\n                    }\n                }\n                return $.extend({}, {\n                    focus: enabled,\n                    mask: command_line.mask(),\n                    prompt: self.get_prompt(),\n                    command: self.get_command(),\n                    position: command_line.position(),\n                    lines: clone(lines),\n                    interpreters: interpreters.clone(),\n                    history: command_line.history().data\n                }, user_export);\n            },\n            // -------------------------------------------------------------\n            // :: Restore the state of the previous exported view\n            // -------------------------------------------------------------\n            import_view: function(view) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'import_view'));\n                }\n                if (is_function(settings.onImport)) {\n                    try {\n                        settings.onImport.call(self, view);\n                    } catch (e) {\n                        settings.onImport = $.noop;\n                        display_exception(e, 'onImport');\n                    }\n                }\n                when_ready(function ready() {\n                    self.set_prompt(view.prompt);\n                    self.set_command(view.command);\n                    command_line.position(view.position);\n                    command_line.mask(view.mask);\n                    if (view.focus) {\n                        self.focus();\n                    }\n                    lines = clone(view.lines).filter(function(line) {\n                        return line[0];\n                    });\n                    if (view.interpreters instanceof Stack) {\n                        interpreters = view.interpreters;\n                    }\n                    if (settings.importHistory) {\n                        command_line.history().set(view.history);\n                    }\n                    redraw();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Store current terminal state\n            // -------------------------------------------------------------\n            save_state: function(command, ignore_hash, index) {\n                // save_state.push({view:self.export_view(), join:[]});\n                if (typeof index !== 'undefined') {\n                    save_state[index] = self.export_view();\n                } else {\n                    save_state.push(self.export_view());\n                }\n                if (!$.isArray(hash_commands)) {\n                    hash_commands = [];\n                }\n                if (command !== undefined && !ignore_hash) {\n                    var state = [\n                        terminal_id,\n                        save_state.length - 1,\n                        command\n                    ];\n                    hash_commands.push(state);\n                    maybe_update_hash();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Execute a command, it will handle commands that do AJAX\n            // :: calls and have delays, if the second argument is set to\n            // :: true it will not echo executed command\n            // -------------------------------------------------------------\n            exec: function(command, silent, deferred) {\n                var d = deferred || new $.Deferred();\n                cmd_ready(function ready() {\n                    if ($.isArray(command)) {\n                        (function recur() {\n                            var cmd = command.shift();\n                            if (cmd) {\n                                self.exec(cmd, silent).done(recur);\n                            } else {\n                                d.resolve();\n                            }\n                        })();\n                    } else if (paused) {\n                        // both commands executed here (resume will call Term::exec)\n                        // delay command multiple time\n                        delayed_commands.push([command, silent, d]);\n                    } else {\n                        // commands may return promise from user code\n                        // it will resolve exec promise when user promise\n                        // is resolved\n                        var ret = commands(command, silent, true);\n                        if (ret && (ret.done || ret.then)) {\n                            (ret.done || ret.then).call(ret, function() {\n                                d.resolve(self);\n                            });\n                        }\n                    }\n                });\n                // while testing it didn't executed last exec when using this\n                // for resolved deferred\n                return d.promise();\n            },\n            // -------------------------------------------------------------\n            // :: bypass login function that wait untill you type user/pass\n            // :: it hide implementation detail\n            // -------------------------------------------------------------\n            autologin: function(user, token, silent) {\n                self.trigger('terminal.autologin', [user, token, silent]);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function changes the prompt of the command line to login\n            // :: with a password and calls the user login function with\n            // :: the callback that expects a token. The login is successful\n            // :: if the user calls it with value that is truthy\n            // -------------------------------------------------------------\n            login: function(auth, infinite, success, error) {\n                logins.push([].slice.call(arguments));\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'login'));\n                }\n                if (!is_function(auth)) {\n                    throw new Error(strings().loginIsNotAFunction);\n                }\n                in_login = true;\n                if (self.token() && self.level() === 1 && !autologin) {\n                    in_login = false; // logout will call login\n                    self.logout(true);\n                } else if (self.token(true) && self.login_name(true)) {\n                    in_login = false;\n                    if (is_function(success)) {\n                        success();\n                    }\n                    return self;\n                }\n                // don't store login data in history\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                // so we know how many times call pop\n                var level = self.level();\n                function login_callback(user, token, silent) {\n                    if (token) {\n                        while (self.level() > level) {\n                            self.pop(undefined, true);\n                        }\n                        if (settings.history) {\n                            command_line.history().enable();\n                        }\n                        var name = self.prefix_name(true) + '_';\n                        storage.set(name + 'token', token);\n                        storage.set(name + 'login', user);\n                        in_login = false;\n                        if (is_function(success)) {\n                            // will be used internaly since users know\n                            // when login success (they decide when\n                            // it happen by calling the callback -\n                            // this funtion)\n                            success();\n                        }\n                    } else {\n                        if (infinite) {\n                            if (!silent) {\n                                self.error(strings().wrongPasswordTryAgain);\n                            }\n                            self.pop(undefined, true).set_mask(false);\n                        } else {\n                            in_login = false;\n                            if (!silent) {\n                                self.error(strings().wrongPassword);\n                            }\n                            self.pop(undefined, true).pop(undefined, true);\n                        }\n                        // used only to call pop in push\n                        if (is_function(error)) {\n                            error();\n                        }\n                    }\n                    self.off('terminal.autologin');\n                }\n                self.on('terminal.autologin', function(event, user, token, silent) {\n                    login_callback(user, token, silent);\n                });\n                self.push(function(user) {\n                    self.set_mask(settings.maskChar).push(function(pass) {\n                        try {\n                            var ret = auth.call(self, user, pass, function(\n                                token,\n                                silent) {\n                                login_callback(user, token, silent);\n                            });\n                            if (ret && is_function(ret.then)) {\n                                self.pause();\n                                ret.then(function(token) {\n                                    login_callback(user, token);\n                                    self.resume();\n                                });\n                            }\n                        } catch (e) {\n                            display_exception(e, 'AUTH');\n                        }\n                    }, {\n                        prompt: strings().password + ': ',\n                        name: 'password'\n                    });\n                }, {\n                    prompt: strings().login + ': ',\n                    name: 'login'\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: User defined settings and defaults as well\n            // -------------------------------------------------------------\n            settings: function() {\n                return settings;\n            },\n            // -------------------------------------------------------------\n            // :: Get string before cursor\n            // -------------------------------------------------------------\n            before_cursor: function(word) {\n                var pos = command_line.position();\n                var command = command_line.get().substring(0, pos);\n                var cmd_strings = command.split(' ');\n                var string; // string before cursor that will be completed\n                if (word) {\n                    if (cmd_strings.length === 1) {\n                        string = cmd_strings[0];\n                    } else {\n                        var m = command.match(/(\\\\?\")/g);\n                        var double_quotes = m ? m.filter(function(chr) {\n                            return !chr.match(/^\\\\/);\n                        }).length : 0;\n                        m = command.match(/'/g);\n                        var single_quote = m ? m.length : 0;\n                        if (single_quote % 2 === 1) {\n                            string = command.match(/('[^']*)$/)[0];\n                        } else if (double_quotes % 2 === 1) {\n                            string = command.match(/(\"(?:[^\"]|\\\\\")*)$/)[0];\n                        } else {\n                            string = cmd_strings[cmd_strings.length - 1];\n                            for (i = cmd_strings.length - 1; i > 0; i--) {\n                                // treat escape space as part of the string\n                                var prev_string = cmd_strings[i - 1];\n                                if (prev_string[prev_string.length - 1] === '\\\\') {\n                                    string = cmd_strings[i - 1] + ' ' + string;\n                                } else {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    string = command;\n                }\n                return string;\n            },\n            // -------------------------------------------------------------\n            // :: complete word or command based on array of words\n            // -------------------------------------------------------------\n            complete: function(commands, options) {\n                options = $.extend({\n                    word: true,\n                    echo: false,\n                    escape: true,\n                    caseSensitive: true,\n                    doubleTab: null\n                }, options || {});\n                var sensitive = options.caseSensitive;\n                // cursor can be in the middle of the command\n                // so we need to get the text before the cursor\n                var string = self.before_cursor(options.word).replace(/\\\\\"/g, '\"');\n                var quote = false;\n                if (options.word) {\n                    if (string.match(/^\"/)) {\n                        quote = '\"';\n                    } else if (string.match(/^'/)) {\n                        quote = \"'\";\n                    }\n                    if (quote) {\n                        string = string.replace(/^[\"']/, '');\n                    }\n                }\n                // local copy\n                commands = commands.slice();\n                if (settings.clear && $.inArray('clear', commands) === -1) {\n                    commands.push('clear');\n                }\n                if (settings.exit && $.inArray('exit', commands) === -1) {\n                    commands.push('exit');\n                }\n                if (tab_count % 2 === 0) {\n                    command = self.before_cursor(options.word);\n                } else {\n                    var test = self.before_cursor(options.word);\n                    if (test !== command) {\n                        // command line changed between TABS - ignore\n                        return;\n                    }\n                }\n                var safe = $.terminal.escape_regex(string);\n                if (options.escape) {\n                    safe = safe.replace(/(\\\\+)([\"'() ])/g, function(_, slash, chr) {\n                        if (chr.match(/[()]/)) {\n                            return slash + '\\\\?\\\\' + chr;\n                        } else {\n                            return slash + '?' + chr;\n                        }\n                    });\n                }\n                function matched_strings() {\n                    var matched = [];\n                    for (var i = commands.length; i--;) {\n                        if (regex.test(commands[i])) {\n                            var match = commands[i];\n                            if (quote === '\"') {\n                                match = match.replace(/\"/g, '\\\\\"');\n                            }\n                            if (!quote && options.escape) {\n                                match = match.replace(/([\"'() ])/g, '\\\\$1');\n                            }\n                            if (!sensitive && same_case(match)) {\n                                if (string.toLowerCase() === string) {\n                                    match = match.toLowerCase();\n                                } else if (string.toUpperCase() === string) {\n                                    match = match.toUpperCase();\n                                }\n                            }\n                            matched.push(match);\n                        }\n                    }\n                    return matched;\n                }\n                var flags = sensitive ? '' : 'i';\n                var regex = new RegExp('^' + safe, flags);\n                var matched = matched_strings();\n                function replace(input, replacement) {\n                    var text = self.get_command();\n                    var pos = self.get_position();\n                    var re = new RegExp('^' + input, 'i');\n                    var pre = text.substring(0, pos);\n                    var post = text.substring(pos);\n                    var to_insert = replacement.replace(re, '') + (quote || '');\n                    self.set_command(pre + to_insert + post);\n                    self.set_position((pre + to_insert).length);\n                }\n                if (matched.length === 1) {\n                    if (options.escape) {\n                        replace(safe, matched[0]);\n                    } else {\n                        self.insert(matched[0].replace(regex, '') + (quote || ''));\n                    }\n                    command = self.before_cursor(options.word);\n                    return true;\n                } else if (matched.length > 1) {\n                    if (++tab_count >= 2) {\n                        tab_count = 0;\n                        if (options.echo) {\n                            if (is_function(options.doubleTab)) {\n                                var ret = options.doubleTab.call(\n                                    self,\n                                    string,\n                                    matched,\n                                    echo_command\n                                );\n                                if (typeof ret === 'undefined') {\n                                    return true;\n                                } else {\n                                    return ret;\n                                }\n                            } else if (options.doubleTab !== false) {\n                                echo_command();\n                                var text = matched.slice().reverse().join('\\t\\t');\n                                self.echo($.terminal.escape_brackets(text), {\n                                    keepWords: true,\n                                    formatters: false\n                                });\n                            }\n                            return true;\n                        }\n                    } else {\n                        var common = common_string(string, matched, sensitive);\n                        if (common) {\n                            replace(string, common);\n                            command = self.before_cursor(options.word);\n                            return true;\n                        }\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return commands function from top interpreter\n            // -------------------------------------------------------------\n            commands: function() {\n                return interpreters.top().interpreter;\n            },\n            // -------------------------------------------------------------\n            // :: Low Level method that overwrites interpreter\n            // -------------------------------------------------------------\n            set_interpreter: function(user_intrp, login) {\n                function overwrite_interpreter() {\n                    self.pause(settings.softPause);\n                    make_interpreter(user_intrp, login, function(result) {\n                        self.resume();\n                        var top = interpreters.top();\n                        $.extend(top, result);\n                        prepare_top_interpreter(true);\n                    });\n                }\n                if (is_function(login)) {\n                    self.login(login, true, overwrite_interpreter);\n                } else if (get_type(user_intrp) === 'string' && login) {\n                    self.login(\n                        make_json_rpc_login(user_intrp, login),\n                        true,\n                        overwrite_interpreter\n                    );\n                } else {\n                    overwrite_interpreter();\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Show user greetings or terminal signature\n            // -------------------------------------------------------------\n            greetings: function() {\n                show_greetings();\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return true if terminal is paused false otherwise\n            // -------------------------------------------------------------\n            paused: function() {\n                return paused;\n            },\n            // -------------------------------------------------------------\n            // :: Pause the terminal, it should be used for ajax calls\n            // -------------------------------------------------------------\n            pause: function(visible) {\n                cmd_ready(function ready() {\n                    onPause();\n                    paused = true;\n                    command_line.disable(visible || is_android);\n                    if (!visible) {\n                        command_line.find('.prompt').hidden();\n                    }\n                    if (is_function(settings.onPause)) {\n                        settings.onPause.call(self);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Resume the previously paused terminal\n            // -------------------------------------------------------------\n            resume: function() {\n                cmd_ready(function ready() {\n                    paused = false;\n                    if (enabled && terminals.front() === self) {\n                        command_line.enable(true);\n                    }\n                    command_line.find('.prompt').visible();\n                    var original = delayed_commands;\n                    delayed_commands = [];\n                    for (var i = 0; i < original.length; ++i) {\n                        self.exec.apply(self, original[i]);\n                    }\n                    self.trigger('resume');\n                    var fn = resume_callbacks.shift();\n                    if (fn) {\n                        fn();\n                    }\n                    self.scroll_to_bottom();\n                    if (is_function(settings.onResume)) {\n                        settings.onResume.call(self);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of characters that fit into the width of\n            // :: the terminal\n            // -------------------------------------------------------------\n            cols: function() {\n                if (settings.numChars) {\n                    return settings.numChars;\n                }\n                if (typeof num_chars === 'undefined' || num_chars === 1000) {\n                    num_chars = get_num_chars(self, char_size);\n                }\n                return num_chars;\n            },\n            // -------------------------------------------------------------\n            // :: Return the number of lines that fit into the height of the\n            // :: terminal\n            // -------------------------------------------------------------\n            rows: function() {\n                if (settings.numRows) {\n                    return settings.numRows;\n                }\n                if (typeof num_rows === 'undefined') {\n                    num_rows = get_num_rows(self, char_size);\n                }\n                return num_rows;\n            },\n            // -------------------------------------------------------------\n            // :: Return the History object\n            // -------------------------------------------------------------\n            history: function() {\n                return command_line.history();\n            },\n            // -------------------------------------------------------------\n            // :: toggle recording of history state\n            // -------------------------------------------------------------\n            history_state: function(toggle) {\n                function run() {\n                    settings.historyState = true;\n                    if (!save_state.length) {\n                        self.save_state();\n                    } else if (terminals.length() > 1) {\n                        self.save_state(null);\n                    }\n                }\n                if (toggle) {\n                    // if set to true and if set from user command we need\n                    // not to include the command\n                    if (typeof window.setImmediate === 'undefined') {\n                        setTimeout(run, 0);\n                    } else {\n                        setImmediate(run);\n                    }\n                } else {\n                    settings.historyState = false;\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: clear the history state\n            // -------------------------------------------------------------\n            clear_history_state: function() {\n                hash_commands = [];\n                save_state = [];\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Switch to the next terminal\n            // -------------------------------------------------------------\n            next: function() {\n                if (terminals.length() === 1) {\n                    return self;\n                } else {\n                    terminals.front().disable();\n                    var next = terminals.rotate().enable();\n                    // 50 provides buffer in viewport\n                    var x = next.offset().top - 50;\n                    $('html,body').animate({scrollTop: x}, 500);\n                    try {\n                        trigger_terminal_change(next);\n                    } catch (e) {\n                        display_exception(e, 'onTerminalChange');\n                    }\n                    return next;\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Make the terminal in focus or blur depending on the first\n            // :: argument. If there is more then one terminal it will\n            // :: switch to next one, if the second argument is set to true\n            // :: the events will be not fired. Used on init\n            // -------------------------------------------------------------\n            focus: function(toggle, silent) {\n                cmd_ready(function ready() {\n                    if (terminals.length() === 1) {\n                        if (toggle === false) {\n                            self.disable(silent);\n                        } else {\n                            self.enable(silent);\n                        }\n                    } else if (toggle === false) {\n                        self.next();\n                    } else {\n                        var front = terminals.front();\n                        if (front !== self) {\n                            // there should be only from terminal enabled but tests\n                            // sometime fail because there where more them one\n                            // where cursor have blink class\n                            terminals.forEach(function(terminal) {\n                                if (terminal !== self && terminal.enabled()) {\n                                    terminal.disable(silent);\n                                }\n                            });\n                            if (!silent) {\n                                try {\n                                    trigger_terminal_change(self);\n                                } catch (e) {\n                                    display_exception(e, 'onTerminalChange');\n                                }\n                            }\n                        }\n                        terminals.set(self);\n                        self.enable(silent);\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable/Enable terminal that can be enabled by click\n            // -------------------------------------------------------------\n            freeze: function(freeze) {\n                when_ready(function ready() {\n                    if (freeze) {\n                        self.disable();\n                        frozen = true;\n                    } else {\n                        frozen = false;\n                        self.enable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: check if terminal is frozen\n            // -------------------------------------------------------------\n            frozen: function() {\n                return frozen;\n            },\n            // -------------------------------------------------------------\n            // :: Enable the terminal\n            // -------------------------------------------------------------\n            enable: function(silent) {\n                if (!enabled && !frozen) {\n                    if (num_chars === undefined) {\n                        // enabling first time\n                        self.resize();\n                    }\n                    cmd_ready(function ready() {\n                        var ret;\n                        if (!silent && !enabled) {\n                            try {\n                                ret = settings.onFocus.call(self, self);\n                            } catch (e) {\n                                settings.onFocus = $.noop;\n                                display_exception(e, 'onFocus');\n                            }\n                        }\n                        if (!silent && ret === undefined || silent) {\n                            enabled = true;\n                            if (!self.paused()) {\n                                command_line.enable(true);\n                            }\n                        }\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Disable the terminal\n            // -------------------------------------------------------------\n            disable: function(silent) {\n                cmd_ready(function ready() {\n                    var ret;\n                    if (!silent && enabled) {\n                        try {\n                            ret = settings.onBlur.call(self, self);\n                        } catch (e) {\n                            settings.onBlur = $.noop;\n                            display_exception(e, 'onBlur');\n                        }\n                    }\n                    if (!silent && ret === undefined || silent) {\n                        enabled = false;\n                        command_line.disable();\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if the terminal is enabled\n            // -------------------------------------------------------------\n            enabled: function() {\n                return enabled;\n            },\n            // -------------------------------------------------------------\n            // :: Return the terminal signature depending on the size of the terminal\n            // -------------------------------------------------------------\n            signature: function() {\n                var cols = self.cols();\n                for (var i = signatures.length; i--;) {\n                    var lenghts = signatures[i].map(function(line) {\n                        return line.length;\n                    });\n                    if (Math.max.apply(null, lenghts) <= cols) {\n                        return signatures[i].join('\\n') + '\\n';\n                    }\n                }\n                return '';\n            },\n            // -------------------------------------------------------------\n            // :: Return the version number\n            // -------------------------------------------------------------\n            version: function() {\n                return $.terminal.version;\n            },\n            // -------------------------------------------------------------\n            // :: Return actual command line object (jquery object with cmd\n            // :: methods)\n            // -------------------------------------------------------------\n            cmd: function() {\n                return command_line;\n            },\n            // -------------------------------------------------------------\n            // :: Return the current command entered by terminal\n            // -------------------------------------------------------------\n            get_command: function() {\n                return command_line.get();\n            },\n            // -------------------------------------------------------------\n            // :: Change the command line to the new one\n            // -------------------------------------------------------------\n            set_command: function(command, silent) {\n                when_ready(function ready() {\n                    // TODO: refactor to use options - breaking change\n                    if (typeof command !== 'string') {\n                        command = JSON.stringify(command);\n                    }\n                    command_line.set(command, undefined, silent);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change position of the command line\n            // -------------------------------------------------------------\n            set_position: function(position, relative) {\n                when_ready(function ready() {\n                    command_line.position(position, relative);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return position of the command line\n            // -------------------------------------------------------------\n            get_position: function() {\n                return command_line.position();\n            },\n            // -------------------------------------------------------------\n            // :: Insert text into the command line after the cursor\n            // -------------------------------------------------------------\n            insert: function(string, stay) {\n                if (typeof string === 'string') {\n                    when_ready(function ready() {\n                        var bottom = self.is_bottom();\n                        command_line.insert(string, stay);\n                        if (settings.scrollOnEcho || bottom) {\n                            self.scroll_to_bottom();\n                        }\n                    });\n                    return self;\n                } else {\n                    throw new Error(sprintf(strings().notAString, 'insert'));\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Set the prompt of the command line\n            // -------------------------------------------------------------\n            set_prompt: function(prompt) {\n                when_ready(function ready() {\n                    if (is_function(prompt)) {\n                        command_line.prompt(function(callback) {\n                            prompt.call(self, callback, self);\n                        });\n                    } else {\n                        command_line.prompt(prompt);\n                    }\n                    interpreters.top().prompt = prompt;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the prompt used by the terminal\n            // -------------------------------------------------------------\n            get_prompt: function() {\n                return interpreters.top().prompt;\n                // command_line.prompt(); - can be a wrapper\n                //return command_line.prompt();\n            },\n            // -------------------------------------------------------------\n            // :: Enable or Disable mask depedning on the passed argument\n            // :: the mask can also be character (in fact it will work with\n            // :: strings longer then one)\n            // -------------------------------------------------------------\n            set_mask: function(mask) {\n                when_ready(function ready() {\n                    command_line.mask(mask === true ? settings.maskChar : mask);\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Return the ouput of the terminal as text\n            // -------------------------------------------------------------\n            get_output: function(raw) {\n                if (raw) {\n                    return lines;\n                } else {\n                    return $.map(lines, function(item) {\n                        return is_function(item[0]) ? item[0]() : item[0];\n                    }).join('\\n');\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Recalculate and redraw everything\n            // -------------------------------------------------------------\n            resize: function(width, height) {\n                if (!self.is(':visible')) {\n                    // delay resize if terminal not visible\n                    self.stopTime('resize');\n                    self.oneTime(500, 'resize', function() {\n                        self.resize(width, height);\n                    });\n                } else {\n                    if (width && height) {\n                        self.width(width);\n                        self.height(height);\n                    }\n                    width = self.width();\n                    height = self.height();\n                    if (typeof settings.numChars !== 'undefined' ||\n                        typeof settings.numRows !== 'undefined') {\n                        command_line.resize(settings.numChars);\n                        self.refresh();\n                        return;\n                    }\n                    var new_num_chars = get_num_chars(self, char_size);\n                    var new_num_rows = get_num_rows(self, char_size);\n                    // only if number of chars changed\n                    if (new_num_chars !== num_chars ||\n                        new_num_rows !== num_rows) {\n                        num_chars = new_num_chars;\n                        num_rows = new_num_rows;\n                        command_line.resize(num_chars);\n                        self.refresh();\n                        var top = interpreters.top();\n                        if (is_function(top.resize)) {\n                            top.resize.call(self, self);\n                        } else if (is_function(settings.onResize)) {\n                            settings.onResize.call(self, self);\n                        }\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: redraw the terminal\n            // -------------------------------------------------------------\n            refresh: function() {\n                if (char_size.width !== 0) {\n                    self[0].style.setProperty('--char-width', char_size.width);\n                }\n                redraw({\n                    scroll: false,\n                    update: true\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Flush the output to the terminal\n            // -------------------------------------------------------------\n            flush: function(options) {\n                options = $.extend({}, {\n                    update: false,\n                    scroll: true\n                }, options || {});\n                try {\n                    var bottom = self.is_bottom();\n                    var wrapper;\n                    // print all lines\n                    // var output_buffer = lines.flush();\n                    $.each(output_buffer, function(i, line) {\n                        if (line === NEW_LINE) {\n                            wrapper = $('<div></div>');\n                        } else if ($.isPlainObject(line) && is_function(line.finalize)) {\n                            // this is finalize function from echo\n                            if (options.update) {\n                                var selector = '> div[data-index=' + line.index + ']';\n                                var node = output.find(selector);\n                                if (node.html() !== wrapper.html()) {\n                                    node.replaceWith(wrapper);\n                                }\n                            } else {\n                                wrapper.appendTo(output);\n                            }\n                            line.finalize(wrapper.attr('data-index', line.index));\n                        } else {\n                            $('<div/>').html(line)\n                                .appendTo(wrapper).width('100%');\n                        }\n                    });\n                    limit_lines();\n                    try {\n                        settings.onFlush.call(self, self);\n                    } catch (e) {\n                        settings.onFlush = $.noop;\n                        display_exception(e, 'onFlush');\n                    }\n                    //num_rows = get_num_rows(self, char_size);\n                    if ((settings.scrollOnEcho && options.scroll) || bottom) {\n                        self.scroll_to_bottom();\n                    }\n                    output_buffer = [];\n                } catch (e) {\n                    if (is_function(settings.exceptionHandler)) {\n                        settings.exceptionHandler.call(self, e, 'TERMINAL (Flush)');\n                    } else {\n                        alert_exception('[Flush]', e);\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Update the output line - line number can be negative\n            // -------------------------------------------------------------\n            update: function(line, string, options) {\n                when_ready(function ready() {\n                    if (line < 0) {\n                        line = lines.length + line; // yes +\n                    }\n                    if (!lines[line]) {\n                        self.error('Invalid line number ' + line);\n                    } else if (string === null) {\n                        lines.splice(line, 1);\n                        output.find('[data-index=' + line + ']').remove();\n                    } else {\n                        lines[line][0] = string;\n                        if (options) {\n                            lines[line][1] = options;\n                        }\n                        process_line({\n                            string: string,\n                            index: line,\n                            options: options\n                        });\n                        self.flush({\n                            scroll: false,\n                            update: true\n                        });\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: convenience method for removing selected line\n            // -------------------------------------------------------------\n            remove_line: function(line) {\n                return self.update(line, null);\n            },\n            // -------------------------------------------------------------\n            // :: return index of last line in case when you need to update\n            // :: after something is echo on the terminal\n            // -------------------------------------------------------------\n            last_index: function() {\n                return lines.length - 1;\n            },\n            // -------------------------------------------------------------\n            // :: Print data to the terminal output. It can have two options\n            // :: a function that is called with the container div that\n            // :: holds the output (as a jquery object) every time the\n            // :: output is printed (including resize and scrolling)\n            // :: If the line is a function it will be called for every\n            // :: redraw.\n            // :: it use $.when so you can echo a promise\n            // -------------------------------------------------------------\n            echo: function(arg, options) {\n                function echo(arg) {\n                    try {\n                        var locals = $.extend({\n                            flush: true,\n                            raw: settings.raw,\n                            finalize: $.noop,\n                            keepWords: false,\n                            formatters: true\n                        }, options || {});\n                        (function(finalize) {\n                            locals.finalize = function(div) {\n                                if (locals.raw) {\n                                    div.addClass('raw');\n                                }\n                                try {\n                                    if (is_function(finalize)) {\n                                        finalize(div);\n                                    }\n                                } catch (e) {\n                                    display_exception(e, 'USER:echo(finalize)');\n                                    finalize = null;\n                                }\n                            };\n                        })(locals.finalize);\n                        if (locals.flush) {\n                            // flush buffer if there was no flush after previous echo\n                            if (output_buffer.length) {\n                                self.flush();\n                            }\n                            output_buffer = [];\n                        }\n                        if (typeof arg === 'function') {\n                            arg = arg.bind(self);\n                        }\n                        process_line({\n                            string: arg,\n                            options: locals,\n                            index: lines.length\n                        });\n                        // extended commands should be processed only\n                        // once in echo and not on redraw\n                        lines.push([arg, $.extend(locals, {\n                            exec: false\n                        })]);\n                        if (locals.flush) {\n                            self.flush();\n                        }\n                    } catch (e) {\n                        // if echo throw exception we can't use error to\n                        // display that exception\n                        if (is_function(settings.exceptionHandler)) {\n                            settings.exceptionHandler.call(self, e, 'TERMINAL (echo)');\n                        } else {\n                            alert_exception('[Terminal.echo]', e);\n                        }\n                    }\n                }\n                if (arg !== undefined && is_function(arg.then)) {\n                    $.when(arg).done(echo);\n                } else {\n                    echo(arg);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: echo red text\n            // -------------------------------------------------------------\n            error: function(message, options) {\n                options = $.extend({}, options, {raw: false, formatters: false});\n                function format(string) {\n                    if (typeof string !== 'string') {\n                        string = String(string);\n                    }\n                    // quick hack to fix trailing backslash\n                    var str = $.terminal.escape_brackets(string).\n                        replace(/\\\\$/, '&#92;').\n                        replace(url_re, ']$1[[;;;error]');\n                    return '[[;;;error]' + str + ']';\n                }\n                if (typeof message === 'function') {\n                    return self.echo(function() {\n                        return format(message.call(self));\n                    }, options);\n                }\n                if (message && message.then) {\n                    message.then(function(string) {\n                        self.echo(format(string));\n                    });\n                    return self;\n                }\n                return self.echo(format(message), options);\n            },\n            // -------------------------------------------------------------\n            // :: Display Exception on terminal\n            // -------------------------------------------------------------\n            exception: function(e, label) {\n                var message = exception_message(e);\n                if (label) {\n                    message = '&#91;' + label + '&#93;: ' + message;\n                }\n                if (message) {\n                    self.error(message, {\n                        finalize: function(div) {\n                            div.addClass('exception message');\n                        },\n                        keepWords: true\n                    });\n                }\n                if (typeof e.fileName === 'string') {\n                    // display filename and line which throw exeption\n                    self.pause(settings.softPause);\n                    $.get(e.fileName, function(file) {\n                        var num = e.lineNumber - 1;\n                        var line = file.split('\\n')[num];\n                        if (line) {\n                            self.error('[' + e.lineNumber + ']: ' + line);\n                        }\n                        self.resume();\n                    }, 'text');\n                }\n                if (e.stack) {\n                    var stack = $.terminal.escape_brackets(e.stack);\n                    self.echo(stack.split(/\\n/g).map(function(trace) {\n                        return '[[;;;error]' + trace.replace(url_re, function(url) {\n                            return ']' + url + '[[;;;error]';\n                        }) + ']';\n                    }).join('\\n'), {\n                        finalize: function(div) {\n                            div.addClass('exception stack-trace');\n                        },\n                        formatters: false\n                    });\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Scroll Div that holds the terminal\n            // -------------------------------------------------------------\n            scroll: function(amount) {\n                var pos;\n                amount = Math.round(amount);\n                if (self.prop) { // work with jQuery > 1.6\n                    if (amount > self.prop('scrollTop') && amount > 0) {\n                        self.prop('scrollTop', 0);\n                    }\n                    pos = self.prop('scrollTop');\n                    self.scrollTop(pos + amount);\n                } else {\n                    if (amount > self.attr('scrollTop') && amount > 0) {\n                        self.attr('scrollTop', 0);\n                    }\n                    pos = self.attr('scrollTop');\n                    self.scrollTop(pos + amount);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Exit all interpreters and logout. The function will throw\n            // :: exception if there is no login provided\n            // -------------------------------------------------------------\n            logout: function(local) {\n                if (in_login) {\n                    throw new Error(sprintf(strings().notWhileLogin, 'logout'));\n                }\n                when_ready(function ready() {\n                    if (local) {\n                        var login = logins.pop();\n                        self.set_token(undefined, true);\n                        self.login.apply(self, login);\n                    } else if (interpreters.size() === 1 && self.token()) {\n                        self.logout(true);\n                    } else {\n                        while (interpreters.size() > 1) {\n                            // pop will call global_logout that will call login\n                            // and size will be > 0; this is workaround the problem\n                            if (self.token()) {\n                                self.logout(true).pop().pop();\n                            } else {\n                                self.pop();\n                            }\n                        }\n                    }\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the token returned by callback function\n            // :: in login function. It does nothing (return undefined) if\n            // :: there is no login\n            // -------------------------------------------------------------\n            token: function(local) {\n                return storage.get(self.prefix_name(local) + '_token');\n            },\n            // -------------------------------------------------------------\n            // :: Function sets the token to the supplied value. This function\n            // :: works regardless of wherer settings.login is supplied\n            // -------------------------------------------------------------\n            set_token: function(token, local) {\n                var name = self.prefix_name(local) + '_token';\n                if (typeof token === 'undefined') {\n                    storage.remove(name);\n                } else {\n                    storage.set(name, token);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Function get the token either set by the login method or\n            // :: by the set_token method.\n            // -------------------------------------------------------------\n            get_token: function(local) {\n                return self.token(local);\n            },\n            // -------------------------------------------------------------\n            // :: Function return Login name entered by the user\n            // -------------------------------------------------------------\n            login_name: function(local) {\n                return storage.get(self.prefix_name(local) + '_login');\n            },\n            // -------------------------------------------------------------\n            // :: Function returns the name of current interpreter\n            // -------------------------------------------------------------\n            name: function() {\n                return interpreters.top().name;\n            },\n            // -------------------------------------------------------------\n            // :: Function return prefix name for login/token\n            // -------------------------------------------------------------\n            prefix_name: function(local) {\n                var name = (settings.name ? settings.name + '_' : '') +\n                    terminal_id;\n                if (local && interpreters.size() > 1) {\n                    var local_name = interpreters.map(function(intrp) {\n                        return intrp.name || '';\n                    }).slice(1).join('_');\n                    if (local_name) {\n                        name += '_' + local_name;\n                    }\n                }\n                return name;\n            },\n            // -------------------------------------------------------------\n            // :: wrapper for common use case\n            // -------------------------------------------------------------\n            read: function(message, success, cancel) {\n                var defer = jQuery.Deferred();\n                var read = false;\n                self.push(function(string) {\n                    read = true;\n                    defer.resolve(string);\n                    if (is_function(success)) {\n                        success(string);\n                    }\n                    self.pop();\n                    if (settings.history) {\n                        command_line.history().enable();\n                    }\n                }, {\n                    name: 'read',\n                    history: false,\n                    prompt: message || '',\n                    onExit: function() {\n                        if (!read) {\n                            defer.reject();\n                            if (is_function(cancel)) {\n                                cancel();\n                            }\n                        }\n                    }\n                });\n                if (settings.history) {\n                    command_line.history().disable();\n                }\n                return defer.promise();\n            },\n            // -------------------------------------------------------------\n            // :: Push a new interenter on the Stack\n            // -------------------------------------------------------------\n            push: function(interpreter, options) {\n                cmd_ready(function ready() {\n                    options = options || {};\n                    var defaults = {\n                        infiniteLogin: false\n                    };\n                    var push_settings = $.extend({}, defaults, options);\n                    if (!push_settings.name && prev_command) {\n                        // push is called in login\n                        push_settings.name = prev_command.name;\n                    }\n                    if (push_settings.prompt === undefined) {\n                        push_settings.prompt = (push_settings.name || '>') + ' ';\n                    }\n                    // names.push(options.name);\n                    var top = interpreters.top();\n                    if (top) {\n                        top.mask = command_line.mask();\n                    }\n                    var was_paused = paused;\n                    function init() {\n                        settings.onPush.call(self, top, interpreters.top(), self);\n                        prepare_top_interpreter();\n                    }\n                    // self.pause();\n                    make_interpreter(interpreter, options.login, function(ret) {\n                        // result is object with interpreter and completion properties\n                        interpreters.push($.extend({}, ret, push_settings));\n                        if (push_settings.completion === true) {\n                            if ($.isArray(ret.completion)) {\n                                interpreters.top().completion = ret.completion;\n                            } else if (!ret.completion) {\n                                interpreters.top().completion = false;\n                            }\n                        }\n                        if (push_settings.login) {\n                            var error;\n                            var type = get_type(push_settings.login);\n                            if (type === 'function') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    push_settings.login,\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            } else if (get_type(interpreter) === 'string' &&\n                                       type === 'string' || type === 'boolean') {\n                                error = push_settings.infiniteLogin ? $.noop : self.pop;\n                                self.login(\n                                    make_json_rpc_login(\n                                        interpreter,\n                                        push_settings.login\n                                    ),\n                                    push_settings.infiniteLogin,\n                                    init,\n                                    error\n                                );\n                            }\n                        } else {\n                            init();\n                        }\n                        if (!was_paused && self.enabled()) {\n                            self.resume();\n                        }\n                    });\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove the last interpreter from the Stack\n            // -------------------------------------------------------------\n            pop: function(string, silent) {\n                if (string !== undefined) {\n                    echo_command(string);\n                }\n                var token = self.token(true);\n                var top;\n                if (interpreters.size() === 1) {\n                    top = interpreters.top();\n                    if (settings.login) {\n                        if (!silent) {\n                            settings.onPop.call(self, top, null, self);\n                        }\n                        global_logout();\n                        if (is_function(settings.onExit)) {\n                            try {\n                                settings.onExit.call(self, self);\n                            } catch (e) {\n                                settings.onExit = $.noop;\n                                display_exception(e, 'onExit');\n                            }\n                        }\n                    } else {\n                        self.error(strings().canExitError);\n                    }\n                } else {\n                    if (token) {\n                        clear_loging_storage();\n                    }\n                    var current = interpreters.pop();\n                    top = interpreters.top();\n                    prepare_top_interpreter();\n                    if (!silent) {\n                        settings.onPop.call(self, current, top);\n                    }\n                    // we check in case if you don't pop from password interpreter\n                    if (in_login && self.get_prompt() !== strings().login + ': ') {\n                        in_login = false;\n                    }\n                    if (is_function(current.onExit)) {\n                        try {\n                            current.onExit.call(self, self);\n                        } catch (e) {\n                            current.onExit = $.noop;\n                            display_exception(e, 'onExit');\n                        }\n                    }\n                    // restore mask\n                    self.set_mask(top.mask);\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Change terminal option(s) at runtime\n            // -------------------------------------------------------------\n            option: function(object_or_name, value) {\n                if (typeof value === 'undefined') {\n                    if (typeof object_or_name === 'string') {\n                        return settings[object_or_name];\n                    } else if (typeof object_or_name === 'object') {\n                        $.each(object_or_name, function(key, value) {\n                            settings[key] = value;\n                        });\n                    }\n                } else {\n                    settings[object_or_name] = value;\n                    if (object_or_name.match(/^num(Chars|Rows)$/)) {\n                        redraw();\n                    }\n                }\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: invoke keydown shorcut\n            // -------------------------------------------------------------\n            invoke_key: function(shortcut) {\n                var keys = shortcut.toUpperCase().split('+');\n                var key = keys.pop();\n                var ctrl = keys.indexOf('CTRL') !== -1;\n                var shift = keys.indexOf('SHIFT') !== -1;\n                var alt = keys.indexOf('ALT') !== -1;\n                var meta = keys.indexOf('META') !== -1;\n                var e = $.Event(\"keydown\", {\n                    ctrlKey: ctrl,\n                    shiftKey: shift,\n                    altKey: alt,\n                    metaKey: meta,\n                    which: reversed_keycodes[key],\n                    key: key\n                });\n                var doc = $(document.documentElement || window);\n                doc.trigger(e);\n                e = $.Event(\"keypress\");\n                e.key = key;\n                e.which = e.keyCode = 0;\n                doc.trigger(e);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: change terminal keymap at runtime\n            // -------------------------------------------------------------\n            keymap: function(keymap, fn) {\n                if (arguments.length === 0) {\n                    return command_line.keymap();\n                }\n                if (typeof fn === 'undefined') {\n                    if (typeof keymap === 'string') {\n                        return command_line.keymap(keymap);\n                    } else if ($.isPlainObject(keymap)) {\n                        // argument is an object\n                        keymap = $.omap(keymap || {}, function(key, fn) {\n                            if (!new_keymap[key]) {\n                                return fn.bind(self);\n                            }\n                            return function(e, original) {\n                                // new keymap function will get default as 2nd argument\n                                return fn.call(self, e, function() {\n                                    return new_keymap[key](e, original);\n                                });\n                            };\n                        });\n                        command_line.keymap(keymap);\n                    }\n                } else if (typeof fn === 'function') {\n                    var key = keymap;\n                    if (!new_keymap[key]) {\n                        command_line.keymap(key, fn.bind(self));\n                    } else {\n                        command_line.keymap(key, function(e, original) {\n                            return fn.call(self, e, function() {\n                                return new_keymap[key](e, original);\n                            });\n                        });\n                    }\n                }\n            },\n            // -------------------------------------------------------------\n            // :: Return how deep you are in nested interpreters\n            // -------------------------------------------------------------\n            level: function() {\n                return interpreters.size();\n            },\n            // -------------------------------------------------------------\n            // :: Reinitialize the terminal\n            // -------------------------------------------------------------\n            reset: function() {\n                when_ready(function ready() {\n                    self.clear();\n                    while (interpreters.size() > 1) {\n                        interpreters.pop();\n                    }\n                    initialize();\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all local storage left by terminal, it will not\n            // :: logout you until you refresh the browser\n            // -------------------------------------------------------------\n            purge: function() {\n                when_ready(function ready() {\n                    var prefix = self.prefix_name() + '_';\n                    var names = storage.get(prefix + 'interpreters');\n                    if (names) {\n                        $.each(JSON.parse(names), function(_, name) {\n                            storage.remove(name + '_commands');\n                            storage.remove(name + '_token');\n                            storage.remove(name + '_login');\n                        });\n                    }\n                    command_line.purge();\n                    storage.remove(prefix + 'interpreters');\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: Remove all events and DOM nodes left by terminal, it will\n            // :: not purge the terminal so you will have the same state\n            // :: when you refresh the browser\n            // -------------------------------------------------------------\n            destroy: function() {\n                when_ready(function ready() {\n                    command_line.destroy().remove();\n                    output.remove();\n                    wrapper.remove();\n                    $(document).unbind('.terminal_' + self.id());\n                    $(window).unbind('.terminal_' + self.id());\n                    self.unbind('click wheel mousewheel mousedown mouseup');\n                    self.removeData('terminal').removeClass('terminal').\n                        unbind('.terminal');\n                    if (settings.width) {\n                        self.css('width', '');\n                    }\n                    if (settings.height) {\n                        self.css('height', '');\n                    }\n                    $(window).off('blur', blur_terminal).\n                        off('focus', focus_terminal);\n                    self.find('.terminal-fill').remove();\n                    self.stopTime();\n                    terminals.remove(terminal_id);\n                    if (visibility_observer) {\n                        if (visibility_observer.unobserve) {\n                            visibility_observer.unobserve(self[0]);\n                        } else {\n                            clearInterval(visibility_observer);\n                        }\n                    }\n                    if (mutation_observer) {\n                        mutation_observer.disconnect();\n                    }\n                    self.resizer('unbind');\n                    font_resizer.resizer('unbind').remove();\n                    if (!terminals.length()) {\n                        $(window).off('hashchange');\n                    }\n                    defunct = true;\n                });\n                return self;\n            },\n            // -------------------------------------------------------------\n            scroll_to_bottom: function() {\n                var scrollHeight;\n                if (self.prop) {\n                    scrollHeight = self.prop('scrollHeight');\n                } else {\n                    scrollHeight = self.attr('scrollHeight');\n                }\n                self.scrollTop(scrollHeight);\n                return self;\n            },\n            // -------------------------------------------------------------\n            // :: return true if terminal div or body is at the bottom\n            // :: is use scrollBottomOffset option as margin for the check\n            // -------------------------------------------------------------\n            is_bottom: function() {\n                if (settings.scrollBottomOffset === -1) {\n                    return false;\n                } else {\n                    var scroll_height, scroll_top, height;\n                    scroll_height = self[0].scrollHeight;\n                    scroll_top = self.scrollTop();\n                    height = self.outerHeight();\n                    var limit = scroll_height - settings.scrollBottomOffset;\n                    return scroll_top + height > limit;\n                }\n            }\n        }, function(name, fun) {\n            // wrap all functions and display execptions\n            return function() {\n                if (defunct) {\n                    if (!settings.exceptionHandler) {\n                        throw new $.terminal.Exception(strings().defunctTerminal);\n                    }\n                }\n                try {\n                    return fun.apply(self, [].slice.apply(arguments));\n                } catch (e) {\n                    // exec catch by command (resume call exec)\n                    if (name !== 'exec' && name !== 'resume') {\n                        display_exception(e, e.type || 'TERMINAL', true);\n                    }\n                    if (!settings.exceptionHandler) {\n                        throw e;\n                    }\n                }\n            };\n        }));\n        // for invoking shortcuts using terminal::keydown\n        // taken from https://github.com/cvan/keyboardevent-key-polyfill/\n        var keycodes = {\n            3: 'Cancel',\n            6: 'Help',\n            8: 'Backspace',\n            9: 'Tab',\n            12: 'Clear',\n            13: 'Enter',\n            16: 'Shift',\n            17: 'Control',\n            18: 'Alt',\n            19: 'Pause',\n            20: 'CapsLock',\n            27: 'Escape',\n            28: 'Convert',\n            29: 'NonConvert',\n            30: 'Accept',\n            31: 'ModeChange',\n            32: ' ',\n            33: 'PageUp',\n            34: 'PageDown',\n            35: 'End',\n            36: 'Home',\n            37: 'ArrowLeft',\n            38: 'ArrowUp',\n            39: 'ArrowRight',\n            40: 'ArrowDown',\n            41: 'Select',\n            42: 'Print',\n            43: 'Execute',\n            44: 'PrintScreen',\n            45: 'Insert',\n            46: 'Delete',\n            48: ['0', ')'],\n            49: ['1', '!'],\n            50: ['2', '@'],\n            51: ['3', '#'],\n            52: ['4', '$'],\n            53: ['5', '%'],\n            54: ['6', '^'],\n            55: ['7', '&'],\n            56: ['8', '*'],\n            57: ['9', '('],\n            91: 'OS',\n            93: 'ContextMenu',\n            144: 'NumLock',\n            145: 'ScrollLock',\n            181: 'VolumeMute',\n            182: 'VolumeDown',\n            183: 'VolumeUp',\n            186: [';', ':'],\n            187: ['=', '+'],\n            188: [',', '<'],\n            189: ['-', '_'],\n            190: ['.', '>'],\n            191: ['/', '?'],\n            192: ['`', '~'],\n            219: ['[', '{'],\n            220: ['\\\\', '|'],\n            221: [']', '}'],\n            222: [\"'\", '\"'],\n            224: 'Meta',\n            225: 'AltGraph',\n            246: 'Attn',\n            247: 'CrSel',\n            248: 'ExSel',\n            249: 'EraseEof',\n            250: 'Play',\n            251: 'ZoomOut'\n        };\n        // Function keys (F1-24).\n        for (i = 1; i < 25; i++) {\n            keycodes[111 + i] = 'F' + i;\n        }\n        // Printable ASCII characters.\n        var letter = '';\n        for (i = 65; i < 91; i++) {\n            letter = String.fromCharCode(i);\n            keycodes[i] = [letter.toLowerCase(), letter.toUpperCase()];\n        }\n        var reversed_keycodes = {};\n        Object.keys(keycodes).forEach(function(which) {\n            if (keycodes[which] instanceof Array) {\n                keycodes[which].forEach(function(key) {\n                    reversed_keycodes[key.toUpperCase()] = which;\n                });\n            } else {\n                reversed_keycodes[keycodes[which].toUpperCase()] = which;\n            }\n        });\n\n        // -----------------------------------------------------------------\n        // INIT CODE\n        // -----------------------------------------------------------------\n        // backward compatibility\n        if (settings.ignoreSystemDescribe === true) {\n            settings.describe = false;\n        }\n        if (settings.width) {\n            self.width(settings.width);\n        }\n        if (settings.height) {\n            self.height(settings.height);\n        }\n        // register ajaxSend for cancel requests on CTRL+D\n        $(document).bind('ajaxSend.terminal_' + self.id(), function(e, xhr) {\n            requests.push(xhr);\n        });\n        var wrapper = $('<div class=\"terminal-wrapper\"/>').appendTo(self);\n        var font_resizer = $('<div class=\"font\">&nbsp;</div>').appendTo(self);\n        var fill = $('<div class=\"terminal-fill\"/>').appendTo(self);\n        output = $('<div>').addClass('terminal-output').attr('role', 'log')\n            .appendTo(wrapper);\n        self.addClass('terminal');\n        // before login event\n        if (settings.login && is_function(settings.onBeforeLogin)) {\n            try {\n                if (settings.onBeforeLogin.call(self, self) === false) {\n                    autologin = false;\n                }\n            } catch (e) {\n                settings.onBeforeLogin = $.noop;\n                display_exception(e, 'onBeforeLogin');\n            }\n        }\n        // create json-rpc authentication function\n        var base_interpreter;\n        if (typeof init_interpreter === 'string') {\n            base_interpreter = init_interpreter;\n        } else if (init_interpreter instanceof Array) {\n            // first JSON-RPC\n            for (var i = 0, len = init_interpreter.length; i < len; ++i) {\n                if (typeof init_interpreter[i] === 'string') {\n                    base_interpreter = init_interpreter[i];\n                    break;\n                }\n            }\n        }\n        var global_login_fn;\n        if (is_function(settings.login)) {\n            global_login_fn = settings.login;\n        } else if (base_interpreter &&\n            (typeof settings.login === 'string' || settings.login === true)) {\n            global_login_fn = make_json_rpc_login(base_interpreter, settings.login);\n        }\n        terminals.append(self);\n        function focus_terminal() {\n            if (old_enabled) {\n                self.focus();\n            }\n        }\n        function blur_terminal() {\n            old_enabled = enabled;\n            self.disable().find('.cmd textarea').trigger('blur', [true]);\n        }\n        // paste event is not testable in node\n        // istanbul ignore next\n        function paste_event(e) {\n            e = e.originalEvent;\n            // we don't care about browser that don't support clipboard data\n            // those browser simple will not have this feature normal paste\n            // is cross-browser and it's handled by cmd plugin\n            function is_type(item, type) {\n                return item.type.indexOf(type) !== -1;\n            }\n            if (e.clipboardData) {\n                if (self.enabled()) {\n                    var items = e.clipboardData.items;\n                    if (items) {\n                        for (var i = 0; i < items.length; i++) {\n                            if (is_type(items[i], 'image') && settings.pasteImage) {\n                                var blob = items[i].getAsFile();\n                                var URL = window.URL || window.webkitURL;\n                                var source = URL.createObjectURL(blob);\n                                self.echo('<img src=\"' + source + '\"/>', {raw: true});\n                            } else if (is_type(items[i], 'text/plain')) {\n                                items[i].getAsString(self.insert);\n                            }\n                        }\n                    } else if (e.clipboardData.getData) {\n                        var text = e.clipboardData.getData('text/plain');\n                        self.insert(text);\n                    }\n                    return false;\n                }\n            }\n        }\n        $(document).on('paste.terminal_' + self.id(), paste_event);\n        var new_keymap = $.extend(\n            {},\n            keymap,\n            $.omap(settings.keymap || {}, function(key, fn) {\n                if (!keymap[key]) {\n                    return fn.bind(self);\n                }\n                return function(e, original) {\n                    // new keymap function will get default as 2nd argument\n                    return fn.call(self, e, function() {\n                        return keymap[key](e, original);\n                    });\n                };\n            })\n        );\n        make_interpreter(init_interpreter, settings.login, function(itrp) {\n            if (settings.completion && typeof settings.completion !== 'boolean' ||\n                !settings.completion) {\n                // overwrite interpreter completion by global setting #224\n                // we use string to indicate that it need to be taken from settings\n                // so we are able to change it using option API method\n                itrp.completion = 'settings';\n            }\n            interpreters = new Stack($.extend({}, settings.extra, {\n                name: settings.name,\n                prompt: settings.prompt,\n                keypress: settings.keypress,\n                keydown: settings.keydown,\n                resize: settings.onResize,\n                greetings: settings.greetings,\n                mousewheel: settings.mousewheel,\n                history: settings.history,\n                keymap: new_keymap\n            }, itrp));\n            // CREATE COMMAND LINE\n            command_line = $('<div/>').appendTo(wrapper).cmd({\n                prompt: settings.prompt,\n                history: settings.memory ? 'memory' : settings.history,\n                historyFilter: settings.historyFilter,\n                historySize: settings.historySize,\n                caseSensitiveSearch: settings.caseSensitiveSearch,\n                width: '100%',\n                enabled: false,\n                char_width: char_size.width,\n                keydown: key_down,\n                keymap: new_keymap,\n                clickTimeout: settings.clickTimeout,\n                holdTimeout: settings.holdTimeout,\n                holdRepeatTimeout: settings.holdRepeatTimeout,\n                repeatTimeoutKeys: settings.repeatTimeoutKeys,\n                keypress: key_press,\n                tabs: settings.tabs,\n                onCommandChange: function(command) {\n                    if (is_function(settings.onCommandChange)) {\n                        try {\n                            settings.onCommandChange.call(self, command, self);\n                        } catch (e) {\n                            settings.onCommandChange = $.noop;\n                            display_exception(e, 'onCommandChange');\n                        }\n                    }\n                    self.scroll_to_bottom();\n                },\n                commands: commands\n            });\n            function disable(e) {\n                e = e.originalEvent;\n                if (e) {\n                    // e.terget is body when click outside of context menu to close it\n                    // even if you click on terminal\n                    var node = document.elementFromPoint(e.clientX, e.clientY);\n                    if (!$(node).closest('.terminal').length && self.enabled()) {\n                        // we only need to disable when click outside of terminal\n                        // click on other terminal is handled by focus event\n                        self.disable();\n                    }\n                }\n            }\n            self.oneTime(100, function() {\n                $(document).bind('click.terminal_' + self.id(), disable).\n                    bind('contextmenu.terminal_' + self.id(), disable);\n            });\n            var $win = $(window);\n            // cordova application, if keyboard was open and we resume it will be\n            // closed so we need to disable terminal so you can enable it with tap\n            document.addEventListener(\"resume\", function() {\n                self.disable();\n            });\n            // istanbul ignore next\n            if (is_mobile) {\n                self.click(function() {\n                    if (!frozen) {\n                        if (!self.enabled()) {\n                            self.focus();\n                            command_line.enable();\n                        } else {\n                            self.disable();\n                        }\n                    }\n                });\n            } else {\n                // work weird on mobile\n                $win.on('focus.terminal_' + self.id(), focus_terminal).\n                    on('blur.terminal_' + self.id(), blur_terminal);\n                // detect mouse drag\n                (function() {\n                    var count = 0;\n                    var $target;\n                    var name = 'click_' + self.id();\n                    var textarea = self.find('.cmd textarea');\n                    function click() {\n                        if ($target.is('.terminal') ||\n                            $target.is('.terminal-wrapper')) {\n                            var len = self.get_command().length;\n                            self.set_position(len);\n                        } else if ($target.closest('.prompt').length) {\n                            self.set_position(0);\n                        }\n                        if (!textarea.is(':focus')) {\n                            textarea.focus();\n                        }\n                        reset();\n                    }\n                    function reset() {\n                        count = 0;\n                        $target = null;\n                    }\n                    // hack for weird jumping on Chrome/windows #402\n                    var scroll_top;\n                    self.find('.cmd textarea').on('focus', function() {\n                        if (typeof scroll_top !== 'undefined') {\n                            self.scrollTop(scroll_top);\n                        }\n                    }).on('blur', function() {\n                        scroll_top = self.scrollTop();\n                    });\n                    self.mousedown(function(e) {\n                        if (!scrollbar_event(e, fill)) {\n                            $target = $(e.target);\n                        }\n                    }).mouseup(function() {\n                        if (get_selected_text() === '' && $target) {\n                            if (++count === 1) {\n                                if (!frozen) {\n                                    if (!enabled) {\n                                        self.focus();\n                                    } else {\n                                        var timeout = settings.clickTimeout;\n                                        self.oneTime(timeout, name, click);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                self.stopTime(name);\n                            }\n                        }\n                        reset();\n                    }).dblclick(function() {\n                        reset();\n                        self.stopTime(name);\n                    });\n                })();\n                (function() {\n                    var clip = self.find('.cmd textarea');\n                    self.on('contextmenu.terminal', function(e) {\n                        if (get_selected_text() === '') {\n                            if (!$(e.target).is('img,value,audio,object,canvas,a')) {\n                                if (!self.enabled()) {\n                                    self.enable();\n                                }\n                                var offset = command_line.offset();\n                                clip.css({\n                                    left: e.pageX - offset.left - 20,\n                                    top: e.pageY - offset.top - 20,\n                                    width: '5em',\n                                    height: '4em'\n                                });\n                                if (!clip.is(':focus')) {\n                                    clip.focus();\n                                }\n                                self.stopTime('textarea');\n                                self.oneTime(100, 'textarea', function() {\n                                    clip.css({\n                                        left: '',\n                                        top: '',\n                                        width: '',\n                                        height: ''\n                                    });\n                                });\n                                self.stopTime('selection');\n                                self.everyTime(20, 'selection', function() {\n                                    if (clip[0].selection !== clip[0].value) {\n                                        if (get_textarea_selection(clip[0])) {\n                                            clear_textarea_selection(clip[0]);\n                                            select(\n                                                self.find('.terminal-output')[0],\n                                                self.find('.cmd div:last-of-type')[0]\n                                            );\n                                            self.stopTime('selection');\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    });\n                })();\n            }\n            self.on('click', 'a', function(e) {\n                var $this = $(this);\n                if ($this.closest('.exception').length) {\n                    var href = $this.attr('href');\n                    if (href.match(/:[0-9]+$/)) { // display line if specified\n                        e.preventDefault();\n                        print_line(href);\n                    }\n                }\n                // refocus because links have tabindex in case where user want\n                // tab change urls, we can ignore this function on click\n                if (enabled) {\n                    self.find('.cmd textarea').focus();\n                }\n            });\n            function calculate_char_size() {\n                var width = char_size.width;\n                char_size = get_char_size(self);\n                if (width !== char_size.width) {\n                    command_line.option('char_width', char_size.width).refresh();\n                }\n            }\n            resize();\n            function resize() {\n                if (self.is(':visible')) {\n                    var width = fill.width();\n                    var height = fill.height();\n                    // prevent too many calculations in IE\n                    if (old_height !== height || old_width !== width) {\n                        self.resize();\n                    }\n                    old_height = height;\n                    old_width = width;\n                }\n            }\n            function create_resizers() {\n                self.resizer('unbind').resizer(resize);\n                font_resizer.resizer('unbind').resizer(function() {\n                    calculate_char_size();\n                    self.resize();\n                });\n            }\n            if (self.is(':visible')) {\n                create_resizers();\n            }\n            function observe_visibility() {\n                if (visibility_observer) {\n                    if (visibility_observer.unobserve) {\n                        visibility_observer.unobserve(self[0]);\n                    } else {\n                        clearInterval(visibility_observer);\n                    }\n                }\n                var was_enabled = self.enabled();\n                var visible = self.is(':visible');\n                if (visible) {\n                    create_resizers();\n                }\n                function visibility_checker() {\n                    if (self.is(':visible') && !visible) {\n                        visible = true;\n                        create_resizers();\n                        calculate_char_size();\n                        resize();\n                        if (was_enabled) {\n                            self.enable();\n                        }\n                    } else if (visible && !self.is(':visible')) {\n                        visible = false;\n                        was_enabled = $.terminal.active() === self && self.enabled();\n                        self.disable();\n                    }\n                }\n                if (window.IntersectionObserver) {\n                    visibility_observer = new IntersectionObserver(visibility_checker, {\n                        root: document.body\n                    });\n                    visibility_observer.observe(self[0]);\n                } else {\n                    visibility_observer = setInterval(visibility_checker, 400);\n                }\n            }\n            var in_dom = !!self.closest('body').length;\n            var MutationObsrv = window.MutationObserver || window.WebKitMutationObserver;\n            if (MutationObsrv) {\n                mutation_observer = new MutationObsrv(function() {\n                    if (self.closest('body').length) {\n                        if (!in_dom) {\n                            self.scroll_to_bottom();\n                            if (window.IntersectionObserver) {\n                                observe_visibility();\n                            }\n                            resize();\n                        }\n                        in_dom = true;\n                    } else if (in_dom) {\n                        in_dom = false;\n                    }\n                });\n                mutation_observer.observe(document.body, {childList: true});\n            }\n            if (in_dom) {\n                // check if element is in the DOM if not running IntersectionObserver\n                // don't make sense\n                observe_visibility();\n            }\n            command_queue.resolve();\n            // touch devices need touch event to get virtual keyboard\n            if (enabled && self.is(':visible') && !is_mobile) {\n                self.focus(undefined, true);\n            } else {\n                self.disable();\n            }\n            // -------------------------------------------------------------\n            // Run Login\n            if (is_function(global_login_fn)) {\n                self.login(global_login_fn, true, initialize);\n            } else {\n                initialize();\n            }\n            // -------------------------------------------------------------\n            // :: helper\n            function exec_spec(spec) {\n                var terminal = terminals.get()[spec[0]];\n                // execute if belong to this terminal\n                if (terminal && terminal_id === terminal.id()) {\n                    if (!spec[2]) {\n                        defer.resolve();\n                        return defer.promise();\n                    } else if (paused) {\n                        var defer = $.Deferred();\n                        resume_callbacks.push(function() {\n                            return terminal.exec(spec[2]).done(function() {\n                                terminal.save_state(spec[2], true, spec[1]);\n                                defer.resolve();\n                            });\n                        });\n                        return defer.promise();\n                    } else {\n                        return terminal.exec(spec[2]).done(function() {\n                            terminal.save_state(spec[2], true, spec[1]);\n                        });\n                    }\n                }\n            }\n            // exec from hash called in each terminal instance\n            if (settings.execHash) {\n                if (location.hash) {\n                    // wait until login is initialized\n                    setTimeout(function() {\n                        try {\n                            var hash = location.hash.replace(/^#/, '');\n                            // yes no var - local inside terminal\n                            hash_commands = JSON.parse(decodeURIComponent(hash));\n                            var i = 0;\n                            (function recur() {\n                                var spec = hash_commands[i++];\n                                if (spec) {\n                                    exec_spec(spec).done(recur);\n                                } else {\n                                    change_hash = true;\n                                }\n                            })();// */\n                        } catch (e) {\n                            // invalid json - ignore\n                        }\n                    });\n                } else {\n                    change_hash = true;\n                }\n            } else {\n                change_hash = true; // if enabled later\n            }\n            // change_hash = true; // exec can now change hash\n            // -------------------------------------------------------------\n            /* istanbul ignore next */\n            (function() {\n                var shift = false;\n                $(document).bind('keydown.terminal_' + self.id(), function(e) {\n                    if (e.shiftKey) {\n                        shift = true;\n                    }\n                }).bind('keyup.terminal_' + self.id(), function(e) {\n                    // in Google Chromium/Linux shiftKey is false\n                    if (e.shiftKey || e.which === 16) {\n                        shift = false;\n                    }\n                });\n                // this could work without calling scroll on wheel event but we\n                // need it for cases where you have mouse wheel work differently\n                // like with less command that scroll text\n                function mousewheel(event, delta) {\n                    if (!shift) {\n                        var interpreter = interpreters.top();\n                        var ret;\n                        if (is_function(interpreter.mousewheel)) {\n                            ret = interpreter.mousewheel(event, delta, self);\n                        } else if (is_function(settings.mousewheel)) {\n                            ret = settings.mousewheel(event, delta, self);\n                        }\n                        if (have_scrollbar() || ret === false) {\n                            event.stopPropagation();\n                            event.preventDefault();\n                        }\n                        if (ret === false) {\n                            return false;\n                        } else if (ret === true) {\n                            return;\n                        }\n                        if (delta > 0) {\n                            self.scroll(-40);\n                        } else {\n                            self.scroll(40);\n                        }\n                    }\n                }\n                if ($.event.special.mousewheel) {\n                    // we keep mousewheel plugin just in case\n                    self.on('mousewheel', mousewheel);\n                } else {\n                    // detection take from:\n                    // https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n                    var event;\n                    var div = document.createElement(\"div\");\n                    if (\"onwheel\" in div) {\n                        event = \"wheel\"; // Modern browsers support \"wheel\"\n                    } else if (document.onmousewheel !== undefined) {\n                        // Webkit and IE support at least \"mousewheel\"\n                        event = \"mousewheel\";\n                    } else {\n                        // let's assume that remaining browsers are older Firefox\n                        event = \"DOMMouseScroll\";\n                    }\n                    div = null;\n                    self.on(event, function(e) {\n                        var delta;\n                        if (event === 'mousewheel') {\n                            delta = - 1 / 40 * e.originalEvent.wheelDelta;\n                        } else {\n                            delta = e.originalEvent.deltaY || e.originalEvent.detail;\n                        }\n                        mousewheel(e, -delta);\n                    });\n                }\n            })();\n        }); // make_interpreter\n        self.data('terminal', self);\n        return self;\n    }; // terminal plugin\n});\n"]}